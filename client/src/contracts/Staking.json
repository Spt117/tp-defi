{
  "contractName": "Staking",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "APR",
          "type": "uint256"
        }
      ],
      "name": "NewPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "StopPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingTimes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockDate",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "stakingTotalPool",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_apr",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_addressPrice",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stopPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "calculateReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getStaking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isStaker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTotalStaking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"APR\",\"type\":\"uint256\"}],\"name\":\"NewPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"StopPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_apr\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_addressPrice\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTotalStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"stakingTotalPool\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"stopPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Anthony - Etienne - Jean-Baptiste\",\"kind\":\"dev\",\"methods\":{\"addPool(address,uint128,address)\":{\"details\":\"Available only for owner\",\"params\":{\"_addressPrice\":\"is Chainlink pool\",\"_apr\":\"is APR of the pool\",\"_token\":\"is token address\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculateReward(address)\":{\"details\":\"tokenPrice use Chainlink Oracle\",\"params\":{\"_token\":\"is the token of pool to calculate rewards\"},\"returns\":{\"_0\":\"rewards in dollars\"}},\"claimRewards(address)\":{\"details\":\"Available only for stakers who have rewards to claim\",\"params\":{\"_token\":\"is token of the pool to claim rewards\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getStaking(address)\":{\"params\":{\"_token\":\"is address token of the pool to check\"}},\"getTotalStaking(address)\":{\"params\":{\"_token\":\"is address token\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isStaker(address)\":{\"details\":\"Can be used to show the staked pools on the Dapp\",\"params\":{\"_token\":\"is address token of a pool\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint128,address)\":{\"details\":\"Emit event after stake\",\"params\":{\"_amount\":\"to stake\",\"_token\":\"to stake\"}},\"stopPool(address)\":{\"details\":\"Available only for owner\",\"params\":{\"_token\":\"is token address\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint128,address)\":{\"params\":{\"_amount\":\"number of token to unstake\",\"_token\":\"to unstake\"}}},\"title\":\"Staking : a Staking Plateform !\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPool(address,uint128,address)\":{\"notice\":\"Make available token address to add pool\"},\"calculateReward(address)\":{\"notice\":\"Calculate rewards\"},\"claimRewards(address)\":{\"notice\":\"Claim your rewards\"},\"getStaking(address)\":{\"notice\":\"Check amount of a stacked pool from msg.sender\"},\"getTotalStaking(address)\":{\"notice\":\"Check total amount of a stacked pool\"},\"isStaker(address)\":{\"notice\":\"Check if msg.sender is a staker of a pool\"},\"stake(uint128,address)\":{\"notice\":\"Stake fund into this contract\"},\"stopPool(address)\":{\"notice\":\"disable a pool\"},\"withdraw(uint128,address)\":{\"notice\":\"Withdraw fund into this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CrowdV.sol\":{\"keccak256\":\"0x83e5441dea47905ccd623efc38ece21b10bad9c1a31875f73e57a27a3d779ad7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f732c5aacd4f563ef956edcf53e66cdaffe2a6bd6d39813c9864212e9cca2300\",\"dweb:/ipfs/Qmb2oxmWfayHQoPemswnHeA8zk86G3X8Daukz3tY2xcfzB\"]},\"project:/contracts/Staking.sol\":{\"keccak256\":\"0xf2dd74b76e419d56d0899890c4b712ce7d37e6c7d2b95630b6c66c1c9b4e5196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899794550b216e4137c0470aa8e508efa76e61cbba04a653ee29efcdb61ece6f\",\"dweb:/ipfs/QmdqKdeYKBuGwXUyJiBekk71unXE6ftMqpS8GJSYFjikFd\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x608060405260016006553480156200001657600080fd5b506040518060400160405280600681526020017f43726f77645600000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4352445600000000000000000000000000000000000000000000000000000000815250620000a362000097620000dd60201b60201c565b620000e560201b60201c565b8160049080519060200190620000bb929190620001a9565b508060059080519060200190620000d4929190620001a9565b505050620002bd565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b79062000288565b90600052602060002090601f016020900481019282620001db576000855562000227565b82601f10620001f657805160ff191683800117855562000227565b8280016001018555821562000227579182015b828111156200022657825182559160200191906001019062000209565b5b5090506200023691906200023a565b5090565b5b80821115620002555760008160009055506001016200023b565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002a157607f821691505b602082108103620002b757620002b662000259565b5b50919050565b61435f80620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb14610402578063b166dfdd14610432578063d82e39621461044e578063dd62ed3e1461047e578063ef5cfb8c146104ae578063f2fde38b146104ca57610158565b806370a082311461032c578063715018a61461035c5780637ae15a73146103665780638da5cb5b1461039657806395d89b41146103b4578063a457c2d7146103d257610158565b806323b872dd1161011557806323b872dd146102315780632bf8f75614610261578063313ce5671461027d578063395093511461029b5780636f005df3146102cb5780636f1e8533146102fc57610158565b806306fdde031461015d578063095ea7b31461017b57806311c88633146101ab578063156e28b8146101db57806318160ddd146101f75780631d9b078314610215575b600080fd5b6101656104e6565b604051610172919061316f565b60405180910390f35b6101956004803603810190610190919061322a565b610578565b6040516101a29190613285565b60405180910390f35b6101c560048036038101906101c091906132a0565b61059b565b6040516101d291906132dc565b60405180910390f35b6101f560048036038101906101f091906132a0565b610652565b005b6101ff6107c7565b60405161020c91906132dc565b60405180910390f35b61022f600480360381019061022a919061333f565b6107d1565b005b61024b6004803603810190610246919061337f565b610e5c565b6040516102589190613285565b60405180910390f35b61027b600480360381019061027691906133d2565b610e8b565b005b6102856110b6565b6040516102929190613441565b60405180910390f35b6102b560048036038101906102b0919061322a565b6110bf565b6040516102c29190613285565b60405180910390f35b6102e560048036038101906102e0919061322a565b6110f6565b6040516102f392919061346b565b60405180910390f35b610316600480360381019061031191906132a0565b611153565b6040516103239190613285565b60405180910390f35b610346600480360381019061034191906132a0565b61121d565b60405161035391906132dc565b60405180910390f35b610364611266565b005b610380600480360381019061037b91906132a0565b61127a565b60405161038d91906132dc565b60405180910390f35b61039e6112f4565b6040516103ab91906134a3565b60405180910390f35b6103bc61131d565b6040516103c9919061316f565b60405180910390f35b6103ec60048036038101906103e7919061322a565b6113af565b6040516103f99190613285565b60405180910390f35b61041c6004803603810190610417919061322a565b611426565b6040516104299190613285565b60405180910390f35b61044c6004803603810190610447919061333f565b611449565b005b610468600480360381019061046391906132a0565b61198c565b60405161047591906132dc565b60405180910390f35b610498600480360381019061049391906134be565b6126c6565b6040516104a591906132dc565b60405180910390f35b6104c860048036038101906104c391906132a0565b61274d565b005b6104e460048036038101906104df91906132a0565b612841565b005b6060600480546104f59061352d565b80601f01602080910402602001604051908101604052809291908181526020018280546105219061352d565b801561056e5780601f106105435761010080835404028352916020019161056e565b820191906000526020600020905b81548152906001019060200180831161055157829003601f168201915b5050505050905090565b6000806105836128c4565b90506105908185856128cc565b600191505092915050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b61065a612a95565b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166106e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e0906135aa565b60405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555042600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d481426040516107bc9291906135ca565b60405180910390a150565b6000600354905090565b6107da81611153565b610819576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108109061363f565b60405180910390fd5b6000826fffffffffffffffffffffffffffffffff161161086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906136d1565b60405180910390fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff161015610970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096790613763565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166109ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f6906137cf565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a3c92919061382a565b6020604051808303816000875af1158015610a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7f919061387f565b905080610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab8906138f8565b60405180910390fd5b610aca8261274d565b82600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff16610b749190613947565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555042600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000604051806040016040528042815260200185600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff16610cab9190613947565b6fffffffffffffffffffffffffffffffff168152509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505083600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160108282829054906101000a90046fffffffffffffffffffffffffffffffff16610de39190613947565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507fbd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f333848642604051610e4e949392919061397b565b60405180910390a150505050565b600080610e676128c4565b9050610e74858285612b13565b610e7f858585612b9f565b60019150509392505050565b610e93612a95565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610f23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1a90613a0c565b60405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a3183836040516110a992919061382a565b60405180910390a1505050565b60006012905090565b6000806110ca6128c4565b90506110eb8185856110dc85896126c6565b6110e69190613a2c565b6128cc565b600191505092915050565b6009602052816000526040600020818154811061111257600080fd5b9060005260206000209060020201600091509150508060000154908060010160009054906101000a90046fffffffffffffffffffffffffffffffff16905082565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1611156112135760019050611218565b600090505b919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61126e612a95565b6112786000612e21565b565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461132c9061352d565b80601f01602080910402602001604051908101604052809291908181526020018280546113589061352d565b80156113a55780601f1061137a576101008083540402835291602001916113a5565b820191906000526020600020905b81548152906001019060200180831161138857829003601f168201915b5050505050905090565b6000806113ba6128c4565b905060006113c882866126c6565b90508381101561140d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140490613af4565b60405180910390fd5b61141a82868684036128cc565b60019250505092915050565b6000806114316128c4565b905061143e818585612b9f565b600191505092915050565b6000826fffffffffffffffffffffffffffffffff161161149e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611495906136d1565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661152d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611524906137cf565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161156c93929190613b14565b6020604051808303816000875af115801561158b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115af919061387f565b9050806115f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e8906138f8565b60405180910390fd5b82600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661169b9190613b4b565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555042600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000604051806040016040528042815260200185600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166117d29190613b4b565b6fffffffffffffffffffffffffffffffff168152509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505083600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160108282829054906101000a90046fffffffffffffffffffffffffffffffff1661190a9190613b4b565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507f1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca33848642604051611975949392919061397b565b60405180910390a16119868361274d565b50505050565b600061199782611153565b6119d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119cd9061363f565b60405180910390fd5b6000611a43600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612ee5565b905060006301e133806305f5e100600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a90046fffffffffffffffffffffffffffffffff16611aba9190613b91565b611ac49190613c0a565b6fffffffffffffffffffffffffffffffff169050600080600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600080600090505b82811015611c2f57600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611c0157611c00613c3b565b5b90600052602060002090600202016000015403611c1c578091505b8080611c2790613c6a565b915050611b28565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156121545760018203611d2a57600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015442611d189190613cb2565b83611d239190613a2c565b925061214f565b60008190505b600183611d3d9190613cb2565b811015611f9357600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110611d9557611d94613c3b565b5b906000526020600020906002020160010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611ed457611ed3613c3b565b5b906000526020600020906002020160000154600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600185611f329190613a2c565b81548110611f4357611f42613c3b565b5b906000526020600020906002020160000154611f5f9190613cb2565b611f699190613ce6565b611f739190613d40565b84611f7e9190613a2c565b93508080611f8b90613c6a565b915050611d30565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001856120ff9190613cb2565b815481106121105761210f613c3b565b5b9060005260206000209060020201600001544261212d9190613cb2565b6121379190613ce6565b6121419190613d40565b8361214c9190613a2c565b92505b6126a3565b6001820361223b57600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546122299190613cb2565b836122349190613a2c565b92506126a2565b60008190505b60018361224e9190613cb2565b8110156124a457600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106122a6576122a5613c3b565b5b906000526020600020906002020160010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106123e5576123e4613c3b565b5b906000526020600020906002020160000154600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001856124439190613a2c565b8154811061245457612453613c3b565b5b9060005260206000209060020201600001546124709190613cb2565b61247a9190613ce6565b6124849190613d40565b8461248f9190613a2c565b9350808061249c90613c6a565b915050612241565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001856126109190613cb2565b8154811061262157612620613c3b565b5b906000526020600020906002020160000154600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546126809190613cb2565b61268a9190613ce6565b6126949190613d40565b8361269f9190613a2c565b92505b5b8385846126b09190613ce6565b6126ba9190613ce6565b95505050505050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61275681611153565b612795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161278c9061363f565b60405180910390fd5b60006006546127a38361198c565b6127ad9190613d40565b905042600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061283d3382612f6c565b5050565b612849612a95565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036128b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128af90613de3565b60405180910390fd5b6128c181612e21565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361293b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161293290613e75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036129aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a190613f07565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051612a8891906132dc565b60405180910390a3505050565b612a9d6128c4565b73ffffffffffffffffffffffffffffffffffffffff16612abb6112f4565b73ffffffffffffffffffffffffffffffffffffffff1614612b11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b0890613f73565b60405180910390fd5b565b6000612b1f84846126c6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612b995781811015612b8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b8290613fdf565b60405180910390fd5b612b9884848484036128cc565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c0590614071565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c7490614103565b60405180910390fd5b612c888383836130cc565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612d0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d0690614195565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612da49190613a2c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612e0891906132dc565b60405180910390a3612e1b8484846130d1565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015612f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5c9190614242565b5050509150508092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612fdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fd290614309565b60405180910390fd5b612fe7600083836130cc565b8060036000828254612ff99190613a2c565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461304f9190613a2c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516130b491906132dc565b60405180910390a36130c8600083836130d1565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156131105780820151818401526020810190506130f5565b8381111561311f576000848401525b50505050565b6000601f19601f8301169050919050565b6000613141826130d6565b61314b81856130e1565b935061315b8185602086016130f2565b61316481613125565b840191505092915050565b600060208201905081810360008301526131898184613136565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006131c182613196565b9050919050565b6131d1816131b6565b81146131dc57600080fd5b50565b6000813590506131ee816131c8565b92915050565b6000819050919050565b613207816131f4565b811461321257600080fd5b50565b600081359050613224816131fe565b92915050565b6000806040838503121561324157613240613191565b5b600061324f858286016131df565b925050602061326085828601613215565b9150509250929050565b60008115159050919050565b61327f8161326a565b82525050565b600060208201905061329a6000830184613276565b92915050565b6000602082840312156132b6576132b5613191565b5b60006132c4848285016131df565b91505092915050565b6132d6816131f4565b82525050565b60006020820190506132f160008301846132cd565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61331c816132f7565b811461332757600080fd5b50565b60008135905061333981613313565b92915050565b6000806040838503121561335657613355613191565b5b60006133648582860161332a565b9250506020613375858286016131df565b9150509250929050565b60008060006060848603121561339857613397613191565b5b60006133a6868287016131df565b93505060206133b7868287016131df565b92505060406133c886828701613215565b9150509250925092565b6000806000606084860312156133eb576133ea613191565b5b60006133f9868287016131df565b935050602061340a8682870161332a565b925050604061341b868287016131df565b9150509250925092565b600060ff82169050919050565b61343b81613425565b82525050565b60006020820190506134566000830184613432565b92915050565b613465816132f7565b82525050565b600060408201905061348060008301856132cd565b61348d602083018461345c565b9392505050565b61349d816131b6565b82525050565b60006020820190506134b86000830184613494565b92915050565b600080604083850312156134d5576134d4613191565b5b60006134e3858286016131df565b92505060206134f4858286016131df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061354557607f821691505b602082108103613558576135576134fe565b5b50919050565b7f506f6f6c206973206e6f74206163746976650000000000000000000000000000600082015250565b60006135946012836130e1565b915061359f8261355e565b602082019050919050565b600060208201905081810360008301526135c381613587565b9050919050565b60006040820190506135df6000830185613494565b6135ec60208301846132cd565b9392505050565b7f596f7520617265206e6f742061207374616b6572000000000000000000000000600082015250565b60006136296014836130e1565b9150613634826135f3565b602082019050919050565b600060208201905081810360008301526136588161361c565b9050919050565b7f54686520616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f2e000000000000000000000000000000000000000000000000000000602082015250565b60006136bb6025836130e1565b91506136c68261365f565b604082019050919050565b600060208201905081810360008301526136ea816136ae565b9050919050565b7f596f7520646f6e27742068617665207468697320616d6f756e74206f6620746f60008201527f6b656e0000000000000000000000000000000000000000000000000000000000602082015250565b600061374d6023836130e1565b9150613758826136f1565b604082019050919050565b6000602082019050818103600083015261377c81613740565b9050919050565b7f5468697320746f6b656e2069736e277420617661696c61626c652e0000000000600082015250565b60006137b9601b836130e1565b91506137c482613783565b602082019050919050565b600060208201905081810360008301526137e8816137ac565b9050919050565b6000819050919050565b600061381461380f61380a846132f7565b6137ef565b6131f4565b9050919050565b613824816137f9565b82525050565b600060408201905061383f6000830185613494565b61384c602083018461381b565b9392505050565b61385c8161326a565b811461386757600080fd5b50565b60008151905061387981613853565b92915050565b60006020828403121561389557613894613191565b5b60006138a38482850161386a565b91505092915050565b7f5472616e736665722066726f6d206572726f7200000000000000000000000000600082015250565b60006138e26013836130e1565b91506138ed826138ac565b602082019050919050565b60006020820190508181036000830152613911816138d5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613952826132f7565b915061395d836132f7565b9250828210156139705761396f613918565b5b828203905092915050565b60006080820190506139906000830187613494565b61399d6020830186613494565b6139aa604083018561345c565b6139b760608301846132cd565b95945050505050565b7f5468697320746f6b656e20616c72656164792065786973740000000000000000600082015250565b60006139f66018836130e1565b9150613a01826139c0565b602082019050919050565b60006020820190508181036000830152613a25816139e9565b9050919050565b6000613a37826131f4565b9150613a42836131f4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613a7757613a76613918565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000613ade6025836130e1565b9150613ae982613a82565b604082019050919050565b60006020820190508181036000830152613b0d81613ad1565b9050919050565b6000606082019050613b296000830186613494565b613b366020830185613494565b613b43604083018461381b565b949350505050565b6000613b56826132f7565b9150613b61836132f7565b9250826fffffffffffffffffffffffffffffffff03821115613b8657613b85613918565b5b828201905092915050565b6000613b9c826132f7565b9150613ba7836132f7565b9250816fffffffffffffffffffffffffffffffff0483118215151615613bd057613bcf613918565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613c15826132f7565b9150613c20836132f7565b925082613c3057613c2f613bdb565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613c75826131f4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613ca757613ca6613918565b5b600182019050919050565b6000613cbd826131f4565b9150613cc8836131f4565b925082821015613cdb57613cda613918565b5b828203905092915050565b6000613cf1826131f4565b9150613cfc836131f4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613d3557613d34613918565b5b828202905092915050565b6000613d4b826131f4565b9150613d56836131f4565b925082613d6657613d65613bdb565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613dcd6026836130e1565b9150613dd882613d71565b604082019050919050565b60006020820190508181036000830152613dfc81613dc0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000613e5f6024836130e1565b9150613e6a82613e03565b604082019050919050565b60006020820190508181036000830152613e8e81613e52565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613ef16022836130e1565b9150613efc82613e95565b604082019050919050565b60006020820190508181036000830152613f2081613ee4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613f5d6020836130e1565b9150613f6882613f27565b602082019050919050565b60006020820190508181036000830152613f8c81613f50565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613fc9601d836130e1565b9150613fd482613f93565b602082019050919050565b60006020820190508181036000830152613ff881613fbc565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061405b6025836130e1565b915061406682613fff565b604082019050919050565b6000602082019050818103600083015261408a8161404e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006140ed6023836130e1565b91506140f882614091565b604082019050919050565b6000602082019050818103600083015261411c816140e0565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061417f6026836130e1565b915061418a82614123565b604082019050919050565b600060208201905081810360008301526141ae81614172565b9050919050565b600069ffffffffffffffffffff82169050919050565b6141d4816141b5565b81146141df57600080fd5b50565b6000815190506141f1816141cb565b92915050565b6000819050919050565b61420a816141f7565b811461421557600080fd5b50565b60008151905061422781614201565b92915050565b60008151905061423c816131fe565b92915050565b600080600080600060a0868803121561425e5761425d613191565b5b600061426c888289016141e2565b955050602061427d88828901614218565b945050604061428e8882890161422d565b935050606061429f8882890161422d565b92505060806142b0888289016141e2565b9150509295509295909350565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006142f3601f836130e1565b91506142fe826142bd565b602082019050919050565b60006020820190508181036000830152614322816142e6565b905091905056fea26469706673582212207991c2f4a872d93ea6735e8b9bdf4924c492474c8a64070b8d15784e777e7cf564736f6c634300080e0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:516:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:8",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:8"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "244:269:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "254:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "268:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "274:1:8",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "264:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "285:38:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "315:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "311:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "311:12:8"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "289:18:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "362:51:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "376:27:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "390:6:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:4:8",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "386:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "386:17:8"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "376:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "342:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "335:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:26:8"
                  },
                  "nodeType": "YulIf",
                  "src": "332:81:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "465:42:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "479:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "479:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "479:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "429:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "452:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "449:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "449:14:8"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "426:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "426:38:8"
                  },
                  "nodeType": "YulIf",
                  "src": "423:84:8"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "228:4:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "237:6:8",
                "type": ""
              }
            ],
            "src": "193:320:8"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:32956:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:8",
                "type": ""
              }
            ],
            "src": "7:99:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "208:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "225:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "218:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "218:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "246:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "180:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "185:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "196:11:8",
                "type": ""
              }
            ],
            "src": "112:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "336:258:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "346:10:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "355:1:8",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "350:1:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:63:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:3:8"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:1:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "436:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "436:11:8"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "459:3:8"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "464:1:8"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "455:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "455:11:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "449:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:18:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "429:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "429:39:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "429:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "376:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "373:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "387:19:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "389:15:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "398:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:2:8",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "394:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "394:10:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "389:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "369:3:8",
                    "statements": []
                  },
                  "src": "365:113:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:76:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:3:8"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:6:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "558:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "558:16:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "576:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:27:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:27:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "493:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "496:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "490:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:13:8"
                  },
                  "nodeType": "YulIf",
                  "src": "487:101:8"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "318:3:8",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "323:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "328:6:8",
                "type": ""
              }
            ],
            "src": "287:307:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:54:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "658:38:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "676:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:8",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:14:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "692:2:8",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:7:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:28:8"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "658:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "631:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "641:6:8",
                "type": ""
              }
            ],
            "src": "600:102:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:272:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:53:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "857:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "824:32:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:39:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "814:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "872:78:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "938:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "943:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "879:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:71:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "985:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "992:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:16:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "999:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1004:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "959:21:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "959:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:46:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1031:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1058:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1036:21:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:29:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:39:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1020:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "781:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "788:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "796:3:8",
                "type": ""
              }
            ],
            "src": "708:364:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1196:195:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1218:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1214:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1206:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1253:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1264:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1272:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1278:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:86:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1370:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1379:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1306:63:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:78:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1298:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1168:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1180:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1191:4:8",
                "type": ""
              }
            ],
            "src": "1078:313:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1437:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1447:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1463:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1457:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1457:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1447:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1430:6:8",
                "type": ""
              }
            ],
            "src": "1397:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1584:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1587:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1577:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1577:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1478:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1690:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1710:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1700:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1700:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1601:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1769:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1779:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1794:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1801:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1790:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1779:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1751:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1761:7:8",
                "type": ""
              }
            ],
            "src": "1724:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1901:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1911:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1940:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1922:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1911:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1883:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1893:7:8",
                "type": ""
              }
            ],
            "src": "1856:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2001:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2058:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2067:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2070:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2060:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2060:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2060:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2024:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2049:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2031:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2031:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2021:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2011:63:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1994:5:8",
                "type": ""
              }
            ],
            "src": "1958:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2138:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2148:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2170:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2157:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2148:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2213:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2186:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2186:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2116:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2124:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2132:5:8",
                "type": ""
              }
            ],
            "src": "2086:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2276:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2286:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2297:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2286:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2258:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2268:7:8",
                "type": ""
              }
            ],
            "src": "2231:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2414:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2423:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2426:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2416:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2416:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2416:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2380:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2405:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2387:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2387:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2377:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2377:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2370:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2367:63:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2350:5:8",
                "type": ""
              }
            ],
            "src": "2314:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2494:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2504:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2526:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2513:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2513:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2504:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2569:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2542:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2542:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2472:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2480:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2488:5:8",
                "type": ""
              }
            ],
            "src": "2442:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2670:391:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2716:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2718:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2718:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2718:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2691:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2700:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2687:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2687:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2712:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2683:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2680:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2809:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2824:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2838:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2828:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2853:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2888:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2899:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2884:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2884:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2908:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2863:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2863:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2853:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2936:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2951:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2965:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2955:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2981:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3016:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3027:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3012:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3012:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3036:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2991:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2991:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2981:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2632:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2643:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2655:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2663:6:8",
                "type": ""
              }
            ],
            "src": "2587:474:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3109:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3119:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3144:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3137:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3137:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3130:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3130:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3119:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3091:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3101:7:8",
                "type": ""
              }
            ],
            "src": "3067:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3222:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3239:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3259:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3244:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3232:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3232:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3210:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3217:3:8",
                "type": ""
              }
            ],
            "src": "3163:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3370:118:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3380:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3392:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3403:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3388:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3380:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3454:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3467:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3478:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3463:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3463:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3416:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3416:65:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3354:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3365:4:8",
                "type": ""
              }
            ],
            "src": "3278:210:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3560:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3606:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3608:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3608:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3608:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3581:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3590:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3577:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3577:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3602:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3573:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3573:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3570:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3699:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3714:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3728:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3718:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3743:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3778:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3789:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3774:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3774:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3798:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3753:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3753:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3743:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3530:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3541:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3553:6:8",
                "type": ""
              }
            ],
            "src": "3494:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3894:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3911:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3934:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3916:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3916:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3904:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3904:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3904:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3882:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3889:3:8",
                "type": ""
              }
            ],
            "src": "3829:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4051:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4061:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4073:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4084:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4069:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4069:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4061:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4141:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4154:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4165:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4150:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4150:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4097:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4097:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4023:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4035:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4046:4:8",
                "type": ""
              }
            ],
            "src": "3953:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4226:73:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4236:57:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4251:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4258:34:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4247:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4247:46:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4236:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4208:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4218:7:8",
                "type": ""
              }
            ],
            "src": "4181:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4348:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4405:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4414:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4417:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4407:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4407:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4407:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4371:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4396:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint128",
                              "nodeType": "YulIdentifier",
                              "src": "4378:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4378:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4368:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4368:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4361:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4361:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4358:63:8"
                }
              ]
            },
            "name": "validator_revert_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4341:5:8",
                "type": ""
              }
            ],
            "src": "4305:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4485:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4495:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4517:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4504:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4504:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4495:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4560:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "4533:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4533:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4533:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4463:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4471:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4479:5:8",
                "type": ""
              }
            ],
            "src": "4433:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4661:391:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4707:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4709:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4709:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4709:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4682:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4691:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4678:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4678:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4703:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4674:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4674:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4671:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4800:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4815:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4829:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4819:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4844:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4879:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4890:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4875:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4875:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4899:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint128",
                          "nodeType": "YulIdentifier",
                          "src": "4854:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4854:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4844:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4927:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4942:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4956:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4946:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4972:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5007:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5018:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5003:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5003:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5027:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4982:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4982:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4972:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint128t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4623:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4634:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4646:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4654:6:8",
                "type": ""
              }
            ],
            "src": "4578:474:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5158:519:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5204:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5206:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5206:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5206:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5179:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5188:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5175:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5175:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5200:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5171:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5171:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "5168:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5297:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5312:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5326:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5316:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5341:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5376:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5387:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5372:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5372:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5396:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5351:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5351:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5341:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5424:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5439:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5453:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5443:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5469:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5504:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5515:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5500:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5500:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5524:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5479:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5479:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5469:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5552:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5567:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5581:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5571:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5597:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5632:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5643:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5628:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5628:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5652:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5607:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5607:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5597:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5112:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5123:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5135:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5143:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5151:6:8",
                "type": ""
              }
            ],
            "src": "5058:619:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5783:519:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5829:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5831:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5831:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5831:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5804:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5813:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5800:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5800:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5825:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5796:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5796:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "5793:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5922:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5937:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5951:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5941:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5966:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6001:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6012:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5997:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5997:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6021:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5976:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5976:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5966:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6049:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6064:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6078:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6068:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6094:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6129:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6140:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6125:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6125:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6149:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint128",
                          "nodeType": "YulIdentifier",
                          "src": "6104:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6104:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6094:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6177:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6192:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6206:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6196:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6222:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6257:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6268:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6253:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6253:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6277:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6232:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6232:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6222:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint128t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5737:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5748:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5760:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5768:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5776:6:8",
                "type": ""
              }
            ],
            "src": "5683:619:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6351:43:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6361:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6376:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6383:4:8",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6372:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6372:16:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6361:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6333:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6343:7:8",
                "type": ""
              }
            ],
            "src": "6308:86:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6461:51:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6478:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6499:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6483:15:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6483:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6471:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6471:35:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6471:35:8"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6449:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6456:3:8",
                "type": ""
              }
            ],
            "src": "6400:112:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6612:120:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6622:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6634:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6645:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6630:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6622:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6698:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6711:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6722:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6707:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6707:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6658:39:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:67:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:67:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6584:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6596:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6607:4:8",
                "type": ""
              }
            ],
            "src": "6518:214:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6803:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6820:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6843:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint128",
                          "nodeType": "YulIdentifier",
                          "src": "6825:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6825:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6813:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6813:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6813:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6791:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6798:3:8",
                "type": ""
              }
            ],
            "src": "6738:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6988:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6998:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7010:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7021:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7006:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7006:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6998:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7078:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7091:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7102:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7087:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7087:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7034:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7034:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7034:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7159:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7172:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7183:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7168:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7168:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7115:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7115:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7115:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint128__to_t_uint256_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6952:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6964:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6972:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6983:4:8",
                "type": ""
              }
            ],
            "src": "6862:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7265:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7282:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7305:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7287:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7287:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7275:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7275:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7275:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7253:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7260:3:8",
                "type": ""
              }
            ],
            "src": "7200:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7422:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7432:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7444:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7455:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7440:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7440:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7432:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7512:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7525:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7536:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7521:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7521:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7468:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7468:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7468:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7394:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7406:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7417:4:8",
                "type": ""
              }
            ],
            "src": "7324:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7635:391:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7681:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7683:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7683:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7683:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7656:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7665:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7652:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7652:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7677:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7648:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7648:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "7645:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7774:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7789:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7803:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7793:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7818:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7853:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7864:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7849:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7849:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7873:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7828:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7828:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7818:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7901:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7916:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7930:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7920:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7946:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7981:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7992:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7977:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7977:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8001:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7956:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7956:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7946:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7597:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7608:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7620:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7628:6:8",
                "type": ""
              }
            ],
            "src": "7552:474:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8060:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8077:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8080:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8070:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8070:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8070:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8174:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8177:4:8",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8167:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8167:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8167:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8198:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8201:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8191:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8191:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8191:15:8"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "8032:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8269:269:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8279:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8293:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8299:1:8",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8289:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8289:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8279:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8310:38:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8340:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8346:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8336:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8336:12:8"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "8314:18:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8387:51:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8401:27:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "8415:6:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8423:4:8",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "8411:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8411:17:8"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8401:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8367:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8360:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8360:26:8"
                  },
                  "nodeType": "YulIf",
                  "src": "8357:81:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8490:42:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "8504:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8504:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8504:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8454:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8477:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8485:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8474:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8474:14:8"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8451:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8451:38:8"
                  },
                  "nodeType": "YulIf",
                  "src": "8448:84:8"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8253:4:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8262:6:8",
                "type": ""
              }
            ],
            "src": "8218:320:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8650:62:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8672:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8680:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8668:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8668:14:8"
                      },
                      {
                        "hexValue": "506f6f6c206973206e6f7420616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8684:20:8",
                        "type": "",
                        "value": "Pool is not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8661:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8661:44:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8661:44:8"
                }
              ]
            },
            "name": "store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8642:6:8",
                "type": ""
              }
            ],
            "src": "8544:168:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8864:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8874:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8940:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8945:2:8",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8881:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8881:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8874:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9046:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767",
                      "nodeType": "YulIdentifier",
                      "src": "8957:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8957:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8957:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9059:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9070:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9075:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9066:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9066:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9059:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8852:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8860:3:8",
                "type": ""
              }
            ],
            "src": "8718:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9261:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9271:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9283:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9294:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9279:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9279:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9271:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9318:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9329:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9314:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9314:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9337:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9343:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9333:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9333:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9307:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9307:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9307:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9363:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9497:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9371:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9371:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9363:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9241:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9256:4:8",
                "type": ""
              }
            ],
            "src": "9090:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9641:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9651:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9663:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9674:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9659:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9659:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9651:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9731:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9744:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9755:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9740:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9740:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9687:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9687:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9687:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9812:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9825:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9836:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9821:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9821:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9768:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9768:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9768:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9605:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9617:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9625:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9636:4:8",
                "type": ""
              }
            ],
            "src": "9515:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9959:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9981:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9989:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9977:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9977:14:8"
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9993:22:8",
                        "type": "",
                        "value": "You are not a staker"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9970:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9970:46:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9970:46:8"
                }
              ]
            },
            "name": "store_literal_in_memory_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9951:6:8",
                "type": ""
              }
            ],
            "src": "9853:170:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10175:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10185:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10251:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10256:2:8",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10192:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10192:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10185:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10357:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                      "nodeType": "YulIdentifier",
                      "src": "10268:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10268:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10268:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10370:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10381:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10386:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10377:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10377:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10370:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10163:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10171:3:8",
                "type": ""
              }
            ],
            "src": "10029:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10572:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10582:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10594:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10605:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10590:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10590:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10582:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10629:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10640:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10625:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10625:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10648:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10654:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10644:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10644:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10618:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10618:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10618:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10674:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10808:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10682:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10682:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10674:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10552:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10567:4:8",
                "type": ""
              }
            ],
            "src": "10401:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10932:118:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10954:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10962:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10950:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10950:14:8"
                      },
                      {
                        "hexValue": "54686520616d6f756e74206d7573742062652067726561746572207468616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10966:34:8",
                        "type": "",
                        "value": "The amount must be greater than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10943:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10943:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10943:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11022:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11030:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11018:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11018:15:8"
                      },
                      {
                        "hexValue": "7a65726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11035:7:8",
                        "type": "",
                        "value": "zero."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11011:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11011:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11011:32:8"
                }
              ]
            },
            "name": "store_literal_in_memory_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10924:6:8",
                "type": ""
              }
            ],
            "src": "10826:224:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11202:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11212:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11278:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11283:2:8",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11219:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11219:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11212:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11384:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                      "nodeType": "YulIdentifier",
                      "src": "11295:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11295:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11295:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11397:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11408:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11413:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11404:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11404:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11397:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11190:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11198:3:8",
                "type": ""
              }
            ],
            "src": "11056:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11599:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11609:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11621:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11632:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11617:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11617:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11609:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11656:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11667:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11652:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11652:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11675:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11681:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11671:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11671:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11645:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11645:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11645:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11701:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11835:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11709:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11709:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11701:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11579:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11594:4:8",
                "type": ""
              }
            ],
            "src": "11428:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11959:116:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11981:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11989:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11977:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11977:14:8"
                      },
                      {
                        "hexValue": "596f7520646f6e27742068617665207468697320616d6f756e74206f6620746f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11993:34:8",
                        "type": "",
                        "value": "You don't have this amount of to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11970:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11970:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11970:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12049:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12057:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12045:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12045:15:8"
                      },
                      {
                        "hexValue": "6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12062:5:8",
                        "type": "",
                        "value": "ken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12038:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12038:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12038:30:8"
                }
              ]
            },
            "name": "store_literal_in_memory_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11951:6:8",
                "type": ""
              }
            ],
            "src": "11853:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12227:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12237:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12303:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12308:2:8",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12244:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12244:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12237:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12409:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6",
                      "nodeType": "YulIdentifier",
                      "src": "12320:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12320:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12320:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12422:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12433:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12438:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12429:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12429:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12422:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12215:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12223:3:8",
                "type": ""
              }
            ],
            "src": "12081:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12624:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12634:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12646:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12657:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12642:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12642:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12634:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12681:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12692:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12677:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12677:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12700:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12706:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12696:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12696:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12670:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12670:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12670:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12726:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12860:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12734:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12734:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12726:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12604:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12619:4:8",
                "type": ""
              }
            ],
            "src": "12453:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12984:71:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13006:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13014:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13002:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13002:14:8"
                      },
                      {
                        "hexValue": "5468697320746f6b656e2069736e277420617661696c61626c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13018:29:8",
                        "type": "",
                        "value": "This token isn't available."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12995:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12995:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12995:53:8"
                }
              ]
            },
            "name": "store_literal_in_memory_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12976:6:8",
                "type": ""
              }
            ],
            "src": "12878:177:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13207:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13217:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13283:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13288:2:8",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13224:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13224:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13217:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13389:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                      "nodeType": "YulIdentifier",
                      "src": "13300:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13300:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13300:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13402:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13413:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13418:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13409:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13409:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13402:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13195:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13203:3:8",
                "type": ""
              }
            ],
            "src": "13061:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13604:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13614:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13626:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13637:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13622:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13622:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13614:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13661:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13672:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13657:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13657:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13680:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13686:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13676:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13676:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13650:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13650:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13650:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13706:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13840:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13714:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13714:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13706:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13584:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13599:4:8",
                "type": ""
              }
            ],
            "src": "13433:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13890:28:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13900:12:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13907:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "13900:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13876:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "13886:3:8",
                "type": ""
              }
            ],
            "src": "13858:60:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13984:82:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13994:66:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14052:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint128",
                              "nodeType": "YulIdentifier",
                              "src": "14034:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14034:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "14025:8:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14025:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14007:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14007:53:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "13994:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint128_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13964:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "13974:9:8",
                "type": ""
              }
            ],
            "src": "13924:142:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14137:66:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14154:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14190:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_uint128_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "14159:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14159:37:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14147:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14147:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14147:50:8"
                }
              ]
            },
            "name": "abi_encode_t_uint128_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14125:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14132:3:8",
                "type": ""
              }
            ],
            "src": "14072:131:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14335:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14345:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14357:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14368:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14353:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14353:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14345:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14425:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14438:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14449:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14434:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14434:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14381:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14381:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14381:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14506:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14519:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14530:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14515:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14515:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint128_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14462:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14462:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14462:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14299:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14311:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14319:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14330:4:8",
                "type": ""
              }
            ],
            "src": "14209:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14587:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14641:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14650:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14653:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14643:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14643:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14643:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14610:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14632:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "14617:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14617:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14607:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14607:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14600:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14600:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14597:60:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14580:5:8",
                "type": ""
              }
            ],
            "src": "14547:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14729:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14739:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "14754:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14748:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14748:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14739:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14794:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "14770:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14770:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14770:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "14707:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14715:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14723:5:8",
                "type": ""
              }
            ],
            "src": "14669:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14886:271:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14932:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "14934:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14934:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14934:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14907:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14916:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14903:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14903:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14928:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "14899:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14899:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14896:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15025:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15040:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15054:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "15044:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15069:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15112:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "15123:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15108:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15108:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15132:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "15079:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15079:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "15069:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14856:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "14867:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14879:6:8",
                "type": ""
              }
            ],
            "src": "14812:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15269:63:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15291:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15299:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15287:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15287:14:8"
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15303:21:8",
                        "type": "",
                        "value": "Transfer from error"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15280:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15280:45:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15280:45:8"
                }
              ]
            },
            "name": "store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15261:6:8",
                "type": ""
              }
            ],
            "src": "15163:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15484:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15494:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15560:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15565:2:8",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15501:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15501:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15494:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15666:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                      "nodeType": "YulIdentifier",
                      "src": "15577:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15577:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15577:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15679:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15690:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15695:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15686:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15686:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15679:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15472:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15480:3:8",
                "type": ""
              }
            ],
            "src": "15338:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15881:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15891:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15903:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15914:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15899:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15899:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15891:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15938:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15949:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15934:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15934:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15957:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15963:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15953:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15953:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15927:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15927:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15927:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15983:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16117:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15991:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15991:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15983:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15861:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15876:4:8",
                "type": ""
              }
            ],
            "src": "15710:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16163:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16180:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16183:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16173:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16173:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16173:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16277:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16280:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16270:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16270:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16270:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16301:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16304:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16294:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16294:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16294:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "16135:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16366:146:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16376:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16399:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "16381:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16381:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16376:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16410:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16433:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "16415:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16415:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16410:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16457:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16459:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16459:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16459:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16451:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16454:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "16448:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16448:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "16445:34:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16489:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16501:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16504:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "16497:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16497:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "16489:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16352:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16355:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "16361:4:8",
                "type": ""
              }
            ],
            "src": "16321:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16700:371:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16710:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16722:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16733:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16718:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16718:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16710:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16791:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16804:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16815:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16800:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16800:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16747:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16747:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16747:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16872:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16885:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16896:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16881:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16881:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16828:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16828:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16828:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16954:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16967:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16978:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16963:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16963:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16910:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16910:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16910:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17036:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17049:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17060:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17045:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17045:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16992:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16992:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16992:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint128_t_uint256__to_t_address_t_address_t_uint128_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16648:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16660:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16668:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16676:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16684:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16695:4:8",
                "type": ""
              }
            ],
            "src": "16518:553:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17183:68:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17205:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17213:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17201:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17201:14:8"
                      },
                      {
                        "hexValue": "5468697320746f6b656e20616c7265616479206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17217:26:8",
                        "type": "",
                        "value": "This token already exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17194:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17194:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17194:50:8"
                }
              ]
            },
            "name": "store_literal_in_memory_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17175:6:8",
                "type": ""
              }
            ],
            "src": "17077:174:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17403:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17413:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17479:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17484:2:8",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17420:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17420:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17413:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17585:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670",
                      "nodeType": "YulIdentifier",
                      "src": "17496:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17496:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17496:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17598:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17609:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17614:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17605:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17605:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17598:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17391:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17399:3:8",
                "type": ""
              }
            ],
            "src": "17257:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17800:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17810:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17822:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17833:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17818:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17818:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17810:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17857:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17868:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17853:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17853:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17876:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17882:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17872:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17872:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17846:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17846:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17846:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17902:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18036:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17910:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17910:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17902:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17780:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17795:4:8",
                "type": ""
              }
            ],
            "src": "17629:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18098:261:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18108:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18131:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18113:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18113:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18108:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18142:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18165:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18147:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18147:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18142:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18305:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18307:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18307:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18307:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18226:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18233:66:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18301:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18229:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18229:74:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "18223:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18223:81:8"
                  },
                  "nodeType": "YulIf",
                  "src": "18220:107:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18337:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18348:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18351:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18344:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18344:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "18337:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18085:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18088:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "18094:3:8",
                "type": ""
              }
            ],
            "src": "18054:305:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18471:118:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18493:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18501:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18489:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18489:14:8"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18505:34:8",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18482:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18482:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18482:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18561:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18569:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18557:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18557:15:8"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18574:7:8",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18550:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18550:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18550:32:8"
                }
              ]
            },
            "name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18463:6:8",
                "type": ""
              }
            ],
            "src": "18365:224:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18741:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18751:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18817:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18822:2:8",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18758:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18758:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18751:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18923:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                      "nodeType": "YulIdentifier",
                      "src": "18834:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18834:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18834:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18936:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18947:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18952:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18943:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18943:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18936:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18729:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18737:3:8",
                "type": ""
              }
            ],
            "src": "18595:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19138:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19148:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19160:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19171:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19156:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19156:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19148:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19195:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19206:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19191:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19191:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19214:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19220:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19210:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19210:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19184:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19184:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19184:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19240:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19374:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19248:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19248:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19240:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19118:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19133:4:8",
                "type": ""
              }
            ],
            "src": "18967:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19546:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19556:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19568:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19579:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19564:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19564:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19556:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19636:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19649:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19660:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19645:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19645:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19592:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19592:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19592:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19717:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19730:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19741:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19726:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19726:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19673:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19673:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19673:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "19799:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19812:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19823:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19808:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19808:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint128_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19755:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19755:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19755:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint128__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19502:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19514:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19522:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19530:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19541:4:8",
                "type": ""
              }
            ],
            "src": "19392:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19884:229:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19894:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19917:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "19899:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19899:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "19894:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19928:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19951:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "19933:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19933:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "19928:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20059:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20061:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20061:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20061:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20012:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20019:34:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "20055:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20015:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20015:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20009:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20009:49:8"
                  },
                  "nodeType": "YulIf",
                  "src": "20006:75:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20091:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20102:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20105:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20098:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20098:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "20091:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19871:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19874:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "19880:3:8",
                "type": ""
              }
            ],
            "src": "19840:273:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20167:268:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20177:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20200:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "20182:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20182:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "20177:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20211:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20234:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "20216:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20216:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "20211:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20377:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20379:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20379:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20379:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20321:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "20314:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20314:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "20307:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20307:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "20329:1:8"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20336:34:8",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20372:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "20332:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20332:42:8"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "20326:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20326:49:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20303:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20303:73:8"
                  },
                  "nodeType": "YulIf",
                  "src": "20300:99:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20409:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20424:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20427:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "20420:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20420:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "20409:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20150:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20153:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "20159:7:8",
                "type": ""
              }
            ],
            "src": "20119:316:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20469:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20486:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20489:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20479:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20479:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20479:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20583:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20586:4:8",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20576:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20576:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20576:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20607:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20610:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "20600:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20600:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20600:15:8"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "20441:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20669:143:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20679:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20702:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "20684:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20684:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "20679:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20713:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20736:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "20718:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20718:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "20713:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20760:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "20762:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20762:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20762:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20757:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20750:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20750:9:8"
                  },
                  "nodeType": "YulIf",
                  "src": "20747:35:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20792:14:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20801:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20804:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "20797:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20797:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "20792:1:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20658:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20661:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "20667:1:8",
                "type": ""
              }
            ],
            "src": "20627:185:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20846:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20863:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20866:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20856:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20856:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20856:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20960:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20963:4:8",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20953:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20953:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20953:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20984:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20987:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "20977:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20977:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20977:15:8"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "20818:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21047:190:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21057:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21084:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21066:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21066:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "21057:5:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21180:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21182:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21182:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21182:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21105:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21112:66:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "21102:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21102:77:8"
                  },
                  "nodeType": "YulIf",
                  "src": "21099:103:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21211:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21222:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21229:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21218:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21218:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "21211:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21033:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "21043:3:8",
                "type": ""
              }
            ],
            "src": "21004:233:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21288:146:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21298:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21321:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21303:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21303:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "21298:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21332:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21355:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21337:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21337:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "21332:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21379:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21381:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21381:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21381:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21373:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21376:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "21370:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21370:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "21367:34:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21411:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21423:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21426:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "21419:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21419:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "21411:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "21274:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "21277:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "21283:4:8",
                "type": ""
              }
            ],
            "src": "21243:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21488:300:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21498:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21521:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21503:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21503:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "21498:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21532:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21555:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21537:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21537:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "21532:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21730:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21732:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21732:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21732:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21642:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "21635:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21635:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "21628:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21628:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "21650:1:8"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21657:66:8",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21725:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "21653:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21653:74:8"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "21647:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21647:81:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21624:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21624:105:8"
                  },
                  "nodeType": "YulIf",
                  "src": "21621:131:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21762:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21777:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21780:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "21773:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21773:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "21762:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "21471:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "21474:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "21480:7:8",
                "type": ""
              }
            ],
            "src": "21440:348:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21836:143:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21846:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21869:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21851:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21851:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "21846:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21880:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21903:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21885:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21885:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "21880:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21927:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "21929:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21929:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21929:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21924:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21917:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21917:9:8"
                  },
                  "nodeType": "YulIf",
                  "src": "21914:35:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21959:14:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21968:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21971:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "21964:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21964:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "21959:1:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "21825:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "21828:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "21834:1:8",
                "type": ""
              }
            ],
            "src": "21794:185:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22091:119:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22113:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22121:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22109:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22109:14:8"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22125:34:8",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22102:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22102:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22102:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22181:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22189:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22177:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22177:15:8"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22194:8:8",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22170:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22170:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22170:33:8"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22083:6:8",
                "type": ""
              }
            ],
            "src": "21985:225:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22362:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22372:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22438:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22443:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22379:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22379:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22372:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22544:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "22455:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22455:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22455:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22557:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22568:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22573:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22564:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22564:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22557:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22350:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22358:3:8",
                "type": ""
              }
            ],
            "src": "22216:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22759:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22769:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22781:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22792:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22777:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22777:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22769:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22816:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22827:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22812:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22812:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22835:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22841:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22831:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22831:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22805:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22805:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22805:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22861:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22995:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22869:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22869:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22861:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22739:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22754:4:8",
                "type": ""
              }
            ],
            "src": "22588:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23119:117:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23141:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23149:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23137:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23137:14:8"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23153:34:8",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23130:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23130:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23130:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23209:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23217:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23205:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23205:15:8"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23222:6:8",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23198:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23198:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23198:31:8"
                }
              ]
            },
            "name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23111:6:8",
                "type": ""
              }
            ],
            "src": "23013:223:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23388:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23398:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23464:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23469:2:8",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23405:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23405:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "23398:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23570:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                      "nodeType": "YulIdentifier",
                      "src": "23481:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23481:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23481:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23583:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23594:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23599:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23590:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23590:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23583:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23376:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23384:3:8",
                "type": ""
              }
            ],
            "src": "23242:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23785:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23795:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23807:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23818:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23803:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23803:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23795:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23842:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23853:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23838:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23838:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23861:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23867:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23857:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23857:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23831:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23831:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23831:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23887:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "24021:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23895:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23895:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23887:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23765:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23780:4:8",
                "type": ""
              }
            ],
            "src": "23614:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24145:115:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24167:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24175:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24163:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24163:14:8"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24179:34:8",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24156:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24156:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24156:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24235:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24243:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24231:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24231:15:8"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24248:4:8",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24224:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24224:29:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24224:29:8"
                }
              ]
            },
            "name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24137:6:8",
                "type": ""
              }
            ],
            "src": "24039:221:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24412:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24422:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24488:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24493:2:8",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24429:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24429:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24422:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24594:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                      "nodeType": "YulIdentifier",
                      "src": "24505:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24505:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24505:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24607:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24618:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24623:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24614:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24614:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24607:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24400:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24408:3:8",
                "type": ""
              }
            ],
            "src": "24266:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24809:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24819:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24831:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24842:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24827:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24827:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24819:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24866:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24877:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24862:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24862:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "24885:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24891:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24881:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24881:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24855:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24855:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24855:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24911:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25045:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24919:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24919:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24911:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24789:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24804:4:8",
                "type": ""
              }
            ],
            "src": "24638:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25169:76:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25191:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25199:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25187:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25187:14:8"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25203:34:8",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25180:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25180:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25180:58:8"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25161:6:8",
                "type": ""
              }
            ],
            "src": "25063:182:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25397:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25407:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25473:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25478:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25414:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25414:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25407:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25579:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "25490:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25490:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25490:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25592:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25603:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25608:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25599:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25599:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25592:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25385:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25393:3:8",
                "type": ""
              }
            ],
            "src": "25251:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25794:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25804:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25816:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25827:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25812:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25812:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25804:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25851:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25862:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25847:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25847:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25870:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25876:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25866:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25866:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25840:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25840:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25840:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25896:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26030:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25904:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25904:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25896:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25774:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25789:4:8",
                "type": ""
              }
            ],
            "src": "25623:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26154:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26176:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26184:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26172:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26172:14:8"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26188:31:8",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26165:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26165:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26165:55:8"
                }
              ]
            },
            "name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26146:6:8",
                "type": ""
              }
            ],
            "src": "26048:179:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26379:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26389:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26455:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26460:2:8",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26396:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26396:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "26389:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26561:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                      "nodeType": "YulIdentifier",
                      "src": "26472:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26472:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26472:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26574:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26585:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26590:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26581:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26581:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "26574:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "26367:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "26375:3:8",
                "type": ""
              }
            ],
            "src": "26233:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26776:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26786:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26798:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26809:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26794:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26794:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26786:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26833:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26844:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26829:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26829:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26852:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26858:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26848:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26848:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26822:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26822:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26822:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26878:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27012:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26886:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26886:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26878:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26756:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26771:4:8",
                "type": ""
              }
            ],
            "src": "26605:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27136:118:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27158:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27166:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27154:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27154:14:8"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27170:34:8",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27147:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27147:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27147:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27226:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27234:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27222:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27222:15:8"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27239:7:8",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27215:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27215:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27215:32:8"
                }
              ]
            },
            "name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27128:6:8",
                "type": ""
              }
            ],
            "src": "27030:224:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27406:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27416:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27482:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27487:2:8",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27423:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27423:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27416:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27588:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                      "nodeType": "YulIdentifier",
                      "src": "27499:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27499:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27499:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27601:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27612:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27617:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27608:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27608:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "27601:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27394:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27402:3:8",
                "type": ""
              }
            ],
            "src": "27260:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27803:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27813:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27825:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27836:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27821:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27821:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27813:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27860:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27871:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27856:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27856:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27879:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27885:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27875:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27875:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27849:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27849:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27849:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27905:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28039:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27913:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27913:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27905:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27783:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27798:4:8",
                "type": ""
              }
            ],
            "src": "27632:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28163:116:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28185:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28193:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28181:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28181:14:8"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28197:34:8",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28174:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28174:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28174:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28253:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28261:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28249:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28249:15:8"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28266:5:8",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28242:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28242:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28242:30:8"
                }
              ]
            },
            "name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "28155:6:8",
                "type": ""
              }
            ],
            "src": "28057:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28431:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28441:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28507:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28512:2:8",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28448:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28448:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "28441:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28613:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                      "nodeType": "YulIdentifier",
                      "src": "28524:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28524:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28524:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28626:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28637:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28642:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28633:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28633:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "28626:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "28419:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "28427:3:8",
                "type": ""
              }
            ],
            "src": "28285:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28828:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28838:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28850:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28861:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28846:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28846:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28838:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28885:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28896:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28881:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28881:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28904:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28910:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28900:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28900:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28874:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28874:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28874:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28930:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29064:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28938:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28938:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28930:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28808:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28823:4:8",
                "type": ""
              }
            ],
            "src": "28657:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29188:119:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29210:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29218:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29206:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29206:14:8"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29222:34:8",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29199:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29199:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29199:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29278:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29286:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29274:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29274:15:8"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29291:8:8",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29267:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29267:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29267:33:8"
                }
              ]
            },
            "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "29180:6:8",
                "type": ""
              }
            ],
            "src": "29082:225:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29459:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29469:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29535:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29540:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29476:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29476:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "29469:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29641:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                      "nodeType": "YulIdentifier",
                      "src": "29552:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29552:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29552:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29654:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29665:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29670:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29661:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29661:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "29654:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "29447:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "29455:3:8",
                "type": ""
              }
            ],
            "src": "29313:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29856:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29866:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29878:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29889:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29874:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29874:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29866:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29913:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29924:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29909:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29909:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29932:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29938:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29928:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29928:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29902:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29902:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29902:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29958:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "30092:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29966:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29966:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29958:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29836:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29851:4:8",
                "type": ""
              }
            ],
            "src": "29685:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30154:61:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30164:45:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "30179:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30186:22:8",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "30175:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30175:34:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "30164:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30136:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "30146:7:8",
                "type": ""
              }
            ],
            "src": "30110:105:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30263:78:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30319:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30328:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30331:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "30321:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30321:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30321:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "30286:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "30310:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "30293:16:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30293:23:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "30283:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30283:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "30276:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30276:42:8"
                  },
                  "nodeType": "YulIf",
                  "src": "30273:62:8"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30256:5:8",
                "type": ""
              }
            ],
            "src": "30221:120:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30409:79:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30419:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "30434:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "30428:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30428:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "30419:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "30476:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "30450:25:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30450:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30450:32:8"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "30387:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "30395:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30403:5:8",
                "type": ""
              }
            ],
            "src": "30347:141:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30538:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30548:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "30559:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "30548:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30520:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "30530:7:8",
                "type": ""
              }
            ],
            "src": "30494:76:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30618:78:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30674:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30683:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30686:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "30676:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30676:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30676:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "30641:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "30665:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "30648:16:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "30648:23:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "30638:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30638:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "30631:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30631:42:8"
                  },
                  "nodeType": "YulIf",
                  "src": "30628:62:8"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30611:5:8",
                "type": ""
              }
            ],
            "src": "30576:120:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30764:79:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30774:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "30789:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "30783:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30783:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "30774:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "30831:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "30805:25:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30805:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30805:32:8"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "30742:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "30750:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30758:5:8",
                "type": ""
              }
            ],
            "src": "30702:141:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30912:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30922:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "30937:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "30931:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30931:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "30922:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "30980:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "30953:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30953:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30953:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "30890:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "30898:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "30906:5:8",
                "type": ""
              }
            ],
            "src": "30849:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31140:829:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "31187:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "31189:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31189:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "31189:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "31161:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31170:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "31157:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31157:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31182:3:8",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "31153:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31153:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "31150:120:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "31280:127:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "31295:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31309:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "31299:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "31324:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31369:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "31380:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31365:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31365:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "31389:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "31334:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31334:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "31324:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "31417:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "31432:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31446:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "31436:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "31462:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31507:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "31518:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31503:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31503:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "31527:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "31472:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31472:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "31462:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "31555:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "31570:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31584:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "31574:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "31600:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31646:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "31657:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31642:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31642:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "31666:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "31610:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31610:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "31600:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "31694:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "31709:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31723:2:8",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "31713:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "31739:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31785:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "31796:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31781:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31781:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "31805:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "31749:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31749:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "31739:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "31833:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "31848:17:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31862:3:8",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "31852:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "31879:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "31924:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "31935:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "31920:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31920:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "31944:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "31889:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31889:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "31879:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31078:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "31089:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "31101:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "31109:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "31117:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "31125:6:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "31133:6:8",
                "type": ""
              }
            ],
            "src": "30998:971:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32081:75:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "32103:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32111:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32099:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32099:14:8"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32115:33:8",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32092:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32092:57:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32092:57:8"
                }
              ]
            },
            "name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "32073:6:8",
                "type": ""
              }
            ],
            "src": "31975:181:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32308:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32318:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32384:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32389:2:8",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32325:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32325:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "32318:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32490:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                      "nodeType": "YulIdentifier",
                      "src": "32401:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32401:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32401:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32503:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "32514:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32519:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32510:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32510:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "32503:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "32296:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "32304:3:8",
                "type": ""
              }
            ],
            "src": "32162:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32705:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "32715:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32727:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32738:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32723:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32723:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32715:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32762:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32773:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32758:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32758:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "32781:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32787:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "32777:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32777:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32751:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32751:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32751:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32807:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "32941:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "32815:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32815:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32807:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32685:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "32700:4:8",
                "type": ""
              }
            ],
            "src": "32534:419:8"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint128t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint128t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint128__to_t_uint256_t_uint128__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pool is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not a staker\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266(memPtr) {\n\n        mstore(add(memPtr, 0), \"The amount must be greater than \")\n\n        mstore(add(memPtr, 32), \"zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't have this amount of to\")\n\n        mstore(add(memPtr, 32), \"ken\")\n\n    }\n\n    function abi_encode_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token isn't available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint128_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint128(value)))\n    }\n\n    function abi_encode_t_uint128_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint128_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer from error\")\n\n    }\n\n    function abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint128(x, y) -> diff {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint128_t_uint256__to_t_address_t_address_t_uint128_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token already exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint128__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint128_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint128(x, y) -> sum {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint128(x, y) -> product {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint128(x, y) -> r {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "425:9149:1:-:0;;;537:1;502:36;;425:9149;;;;;;;;;;1978:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:32:3;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;2052:5:4;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;425:9149:1;;640:96:7;693:7;719:10;712:17;;640:96;:::o;2433:187:3:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;425:9149:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:8:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;425:9149:1:-;;;;;;;",
  "deployedSourceMap": "425:9149:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8820:128:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2433:309;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3244:106:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3973:1037:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5192:286:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1924:375:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3093:91:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1231:57:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;9143:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:3;;;:::i;:::-;;9445:124:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2913:902:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5688:2452;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8327:344:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2156:98:4;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;8820:128:1:-;8879:7;8906;:15;8914:6;8906:15;;;;;;;;;;;;;;;:27;8922:10;8906:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;8899:41;;;;8820:128;;;:::o;2433:309::-;1094:13:3;:11;:13::i;:::-;2519:5:1::1;:13;2525:6;2519:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;2497:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2627:5;2600;:13;2606:6;2600:13;;;;;;;;;;;;;;;:24;;;:32;;;;;;;;;;;;;;;;;;2668:15;2643:5;:13;2649:6;2643:13;;;;;;;;;;;;;;;:22;;:40;;;;2701:33;2710:6;2718:15;2701:33;;;;;;;:::i;:::-;;;;;;;;2433:309:::0;:::o;3244:106:4:-;3305:7;3331:12;;3324:19;;3244:106;:::o;3973:1037:1:-;4052:16;4061:6;4052:8;:16::i;:::-;4044:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4122:1;4112:7;:11;;;4104:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4195:7;:15;4203:6;4195:15;;;;;;;;;;;;;;;:27;4211:10;4195:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;4184:45;;:7;:45;;;;4176:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;4288:5;:13;4294:6;4288:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;4280:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4392:11;4413:6;4406:23;;;4430:10;4442:7;4406:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4392:58;;4469:6;4461:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;4512:20;4525:6;4512:12;:20::i;:::-;4625:7;4587;:15;4595:6;4587:15;;;;;;;;;;;;;;;:27;4603:10;4587:27;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4678:15;4643:7;:15;4651:6;4643:15;;;;;;;;;;;;;;;:27;4659:10;4643:27;;;;;;;;;;;;;;;:32;;:50;;;;4706:26;4735:106;;;;;;;;4765:15;4735:106;;;;4823:7;4795:5;:13;4801:6;4795:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:35;;;;:::i;:::-;4735:106;;;;;4706:135;;4852:12;:20;4865:6;4852:20;;;;;;;;;;;;;;;4878:3;4852:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4924:7;4895:5;:13;4901:6;4895:13;;;;;;;;;;;;;;;:25;;;:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4949:53;4957:10;4969:6;4977:7;4986:15;4949:53;;;;;;;;;:::i;:::-;;;;;;;;4033:977;;3973:1037;;:::o;5192:286:4:-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;1924:375:1:-;1094:13:3;:11;:13::i;:::-;2067:5:1::1;:13;2073:6;2067:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;2066:25;2058:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2160:4;2133:5;:13;2139:6;2133:13;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;2195:4;2175:5;:13;2181:6;2175:13;;;;;;;;;;;;;;;:17;;;:24;;;;;;;;;;;;;;;;;;2239:13;2210:5;:13;2216:6;2210:13;;;;;;;;;;;;;;;:26;;;:42;;;;;;;;;;;;;;;;;;2270:21;2278:6;2286:4;2270:21;;;;;;;:::i;:::-;;;;;;;;1924:375:::0;;;:::o;3093:91:4:-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;1231:57:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9143:184::-;9198:4;9256:1;9219:7;:15;9227:6;9219:15;;;;;;;;;;;;;;;:27;9235:10;9219:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:38;;;9215:82;;;9281:4;9274:11;;;;9215:82;9314:5;9307:12;;9143:184;;;;:::o;3408:125:4:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;1831:101:3:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;9445:124:1:-;9509:7;9536:5;:13;9542:6;9536:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;9529:32;;;;9445:124;;;:::o;1201:85:3:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2367:102:4:-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;2913:902:1:-;2999:1;2989:7;:11;;;2981:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3061:5;:13;3067:6;3061:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;3053:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3130:11;3151:6;3144:27;;;3186:10;3219:4;3239:7;3144:113;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3130:127;;3276:6;3268:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;3357:7;3319;:15;3327:6;3319:15;;;;;;;;;;;;;;;:27;3335:10;3319:27;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3410:15;3375:7;:15;3383:6;3375:15;;;;;;;;;;;;;;;:27;3391:10;3375:27;;;;;;;;;;;;;;;:32;;:50;;;;3438:26;3467:106;;;;;;;;3497:15;3467:106;;;;3555:7;3527:5;:13;3533:6;3527:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:35;;;;:::i;:::-;3467:106;;;;;3438:135;;3584:12;:20;3597:6;3584:20;;;;;;;;;;;;;;;3610:3;3584:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3656:7;3627:5;:13;3633:6;3627:13;;;;;;;;;;;;;;;:25;;;:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3681:51;3687:10;3699:6;3707:7;3716:15;3681:51;;;;;;;;;:::i;:::-;;;;;;;;3745:20;3758:6;3745:12;:20::i;:::-;2970:845;;2913:902;;:::o;5688:2452::-;5750:7;5778:16;5787:6;5778:8;:16::i;:::-;5770:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;5830:18;5851:43;5867:5;:13;5873:6;5867:13;;;;;;;;;;;;;;;:26;;;;;;;;;;;;5851:15;:43::i;:::-;5830:64;;5905:21;5975:15;5952:5;5931;:13;5937:6;5931:13;;;;;;;;;;;;;;;:17;;;;;;;;;;;;5930:27;;;;:::i;:::-;5929:62;;;;:::i;:::-;5905:86;;;;6002:26;6039:9;6051:12;:20;6064:6;6051:20;;;;;;;;;;;;;;;:27;;;;6039:39;;6089:18;6123:9;6135:1;6123:13;;6118:231;6142:1;6138;:5;6118:231;;;6241:7;:15;6249:6;6241:15;;;;;;;;;;;;;;;:27;6257:10;6241:27;;;;;;;;;;;;;;;:32;;;6187:12;:20;6200:6;6187:20;;;;;;;;;;;;;;;6208:1;6187:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;;:86;6165:173;;6321:1;6308:14;;6165:173;6145:3;;;;;:::i;:::-;;;;6118:231;;;;6365:5;:13;6371:6;6365:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;6361:1705;;;6415:1;6410;:6;6406:789;;6499:7;:15;6507:6;6499:15;;;;;;;;;;;;;;;:27;6515:10;6499:27;;;;;;;;;;;;;;;:32;;;6460:15;:71;;;;:::i;:::-;6437:95;;;;;:::i;:::-;;;6406:789;;;6578:9;6590:10;6578:22;;6573:375;6610:1;6606;:5;;;;:::i;:::-;6602:1;:9;6573:375;;;6888:12;:20;6901:6;6888:20;;;;;;;;;;;;;;;6909:1;6888:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:40;;;;;;;;;;;;6688:240;;6825:7;:15;6833:6;6825:15;;;;;;;;;;;;;;;:27;6841:10;6825:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;6689:170;;6759:12;:20;6772:6;6759:20;;;;;;;;;;;;;;;6780:1;6759:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;;6690:12;:20;6703:6;6690:20;;;;;;;;;;;;;;;6715:1;6711;:5;;;;:::i;:::-;6690:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;:102;;;;:::i;:::-;6689:170;;;;:::i;:::-;6688:240;;;;:::i;:::-;6641:287;;;;;:::i;:::-;;;6613:3;;;;;:::i;:::-;;;;6573:375;;;;7154:5;:13;7160:6;7154:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;7009:170;;7095:7;:15;7103:6;7095:15;;;;;;;;;;;;;;;:27;7111:10;7095:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;7010:119;;7029:12;:20;7042:6;7029:20;;;;;;;;;;;;;;;7054:1;7050;:5;;;;:::i;:::-;7029:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;7011:15;:55;;;;:::i;:::-;7010:119;;;;:::i;:::-;7009:170;;;;:::i;:::-;6966:213;;;;;:::i;:::-;;;6406:789;6361:1705;;;7236:1;7231;:6;7227:828;;7327:7;:15;7335:6;7327:15;;;;;;;;;;;;;;;:27;7343:10;7327:27;;;;;;;;;;;;;;;:32;;;7281:5;:13;7287:6;7281:13;;;;;;;;;;;;;;;:22;;;:78;;;;:::i;:::-;7258:102;;;;;:::i;:::-;;;7227:828;;;7406:9;7418:10;7406:22;;7401:375;7438:1;7434;:5;;;;:::i;:::-;7430:1;:9;7401:375;;;7716:12;:20;7729:6;7716:20;;;;;;;;;;;;;;;7737:1;7716:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:40;;;;;;;;;;;;7516:240;;7653:7;:15;7661:6;7653:15;;;;;;;;;;;;;;;:27;7669:10;7653:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;7517:170;;7587:12;:20;7600:6;7587:20;;;;;;;;;;;;;;;7608:1;7587:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;;7518:12;:20;7531:6;7518:20;;;;;;;;;;;;;;;7543:1;7539;:5;;;;:::i;:::-;7518:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;:102;;;;:::i;:::-;7517:170;;;;:::i;:::-;7516:240;;;;:::i;:::-;7469:287;;;;;:::i;:::-;;;7441:3;;;;;:::i;:::-;;;;7401:375;;;;8014:5;:13;8020:6;8014:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;7837:202;;7955:7;:15;7963:6;7955:15;;;;;;;;;;;;;;;:27;7971:10;7955:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;7838:151;;7889:12;:20;7902:6;7889:20;;;;;;;;;;;;;;;7914:1;7910;:5;;;;:::i;:::-;7889:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;7839:5;:13;7845:6;7839:13;;;;;;;;;;;;;;;:22;;;:87;;;;:::i;:::-;7838:151;;;;:::i;:::-;7837:202;;;;:::i;:::-;7794:245;;;;;:::i;:::-;;;7227:828;6361:1705;8119:13;8106:10;8085:18;:31;;;;:::i;:::-;:47;;;;:::i;:::-;8078:54;;;;;;;5688:2452;;;:::o;3976:149:4:-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;8327:344:1:-;8391:16;8400:6;8391:8;:16::i;:::-;8383:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;8445:20;8507:24;;8468:23;8484:6;8468:15;:23::i;:::-;:63;;;;:::i;:::-;8445:86;;8577:15;8542:7;:15;8550:6;8542:15;;;;;;;;;;;;;;;:27;8558:10;8542:27;;;;;;;;;;;;;;;:32;;:50;;;;8632:31;8638:10;8650:12;8632:5;:31::i;:::-;8372:299;8327:344;:::o;2081:198:3:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;10110:370:4:-;10258:1;10241:19;;:5;:19;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;1359:130:3:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;10761:441:4:-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7583:543;7475:651;;;:::o;2433:187:3:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;5147:337:1:-;5252:7;5277:31;5347:21;5277:102;;5393:12;5415:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5390:52;;;;;;5470:5;5455:21;;;;5147:337;;;:::o;8402:389:4:-;8504:1;8485:21;;:7;:21;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;:48::i;:::-;8402:389;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:329::-;3553:6;3602:2;3590:9;3581:7;3577:23;3573:32;3570:119;;;3608:79;;:::i;:::-;3570:119;3728:1;3753:53;3798:7;3789:6;3778:9;3774:22;3753:53;:::i;:::-;3743:63;;3699:117;3494:329;;;;:::o;3829:118::-;3916:24;3934:5;3916:24;:::i;:::-;3911:3;3904:37;3829:118;;:::o;3953:222::-;4046:4;4084:2;4073:9;4069:18;4061:26;;4097:71;4165:1;4154:9;4150:17;4141:6;4097:71;:::i;:::-;3953:222;;;;:::o;4181:118::-;4218:7;4258:34;4251:5;4247:46;4236:57;;4181:118;;;:::o;4305:122::-;4378:24;4396:5;4378:24;:::i;:::-;4371:5;4368:35;4358:63;;4417:1;4414;4407:12;4358:63;4305:122;:::o;4433:139::-;4479:5;4517:6;4504:20;4495:29;;4533:33;4560:5;4533:33;:::i;:::-;4433:139;;;;:::o;4578:474::-;4646:6;4654;4703:2;4691:9;4682:7;4678:23;4674:32;4671:119;;;4709:79;;:::i;:::-;4671:119;4829:1;4854:53;4899:7;4890:6;4879:9;4875:22;4854:53;:::i;:::-;4844:63;;4800:117;4956:2;4982:53;5027:7;5018:6;5007:9;5003:22;4982:53;:::i;:::-;4972:63;;4927:118;4578:474;;;;;:::o;5058:619::-;5135:6;5143;5151;5200:2;5188:9;5179:7;5175:23;5171:32;5168:119;;;5206:79;;:::i;:::-;5168:119;5326:1;5351:53;5396:7;5387:6;5376:9;5372:22;5351:53;:::i;:::-;5341:63;;5297:117;5453:2;5479:53;5524:7;5515:6;5504:9;5500:22;5479:53;:::i;:::-;5469:63;;5424:118;5581:2;5607:53;5652:7;5643:6;5632:9;5628:22;5607:53;:::i;:::-;5597:63;;5552:118;5058:619;;;;;:::o;5683:::-;5760:6;5768;5776;5825:2;5813:9;5804:7;5800:23;5796:32;5793:119;;;5831:79;;:::i;:::-;5793:119;5951:1;5976:53;6021:7;6012:6;6001:9;5997:22;5976:53;:::i;:::-;5966:63;;5922:117;6078:2;6104:53;6149:7;6140:6;6129:9;6125:22;6104:53;:::i;:::-;6094:63;;6049:118;6206:2;6232:53;6277:7;6268:6;6257:9;6253:22;6232:53;:::i;:::-;6222:63;;6177:118;5683:619;;;;;:::o;6308:86::-;6343:7;6383:4;6376:5;6372:16;6361:27;;6308:86;;;:::o;6400:112::-;6483:22;6499:5;6483:22;:::i;:::-;6478:3;6471:35;6400:112;;:::o;6518:214::-;6607:4;6645:2;6634:9;6630:18;6622:26;;6658:67;6722:1;6711:9;6707:17;6698:6;6658:67;:::i;:::-;6518:214;;;;:::o;6738:118::-;6825:24;6843:5;6825:24;:::i;:::-;6820:3;6813:37;6738:118;;:::o;6862:332::-;6983:4;7021:2;7010:9;7006:18;6998:26;;7034:71;7102:1;7091:9;7087:17;7078:6;7034:71;:::i;:::-;7115:72;7183:2;7172:9;7168:18;7159:6;7115:72;:::i;:::-;6862:332;;;;;:::o;7200:118::-;7287:24;7305:5;7287:24;:::i;:::-;7282:3;7275:37;7200:118;;:::o;7324:222::-;7417:4;7455:2;7444:9;7440:18;7432:26;;7468:71;7536:1;7525:9;7521:17;7512:6;7468:71;:::i;:::-;7324:222;;;;:::o;7552:474::-;7620:6;7628;7677:2;7665:9;7656:7;7652:23;7648:32;7645:119;;;7683:79;;:::i;:::-;7645:119;7803:1;7828:53;7873:7;7864:6;7853:9;7849:22;7828:53;:::i;:::-;7818:63;;7774:117;7930:2;7956:53;8001:7;7992:6;7981:9;7977:22;7956:53;:::i;:::-;7946:63;;7901:118;7552:474;;;;;:::o;8032:180::-;8080:77;8077:1;8070:88;8177:4;8174:1;8167:15;8201:4;8198:1;8191:15;8218:320;8262:6;8299:1;8293:4;8289:12;8279:22;;8346:1;8340:4;8336:12;8367:18;8357:81;;8423:4;8415:6;8411:17;8401:27;;8357:81;8485:2;8477:6;8474:14;8454:18;8451:38;8448:84;;8504:18;;:::i;:::-;8448:84;8269:269;8218:320;;;:::o;8544:168::-;8684:20;8680:1;8672:6;8668:14;8661:44;8544:168;:::o;8718:366::-;8860:3;8881:67;8945:2;8940:3;8881:67;:::i;:::-;8874:74;;8957:93;9046:3;8957:93;:::i;:::-;9075:2;9070:3;9066:12;9059:19;;8718:366;;;:::o;9090:419::-;9256:4;9294:2;9283:9;9279:18;9271:26;;9343:9;9337:4;9333:20;9329:1;9318:9;9314:17;9307:47;9371:131;9497:4;9371:131;:::i;:::-;9363:139;;9090:419;;;:::o;9515:332::-;9636:4;9674:2;9663:9;9659:18;9651:26;;9687:71;9755:1;9744:9;9740:17;9731:6;9687:71;:::i;:::-;9768:72;9836:2;9825:9;9821:18;9812:6;9768:72;:::i;:::-;9515:332;;;;;:::o;9853:170::-;9993:22;9989:1;9981:6;9977:14;9970:46;9853:170;:::o;10029:366::-;10171:3;10192:67;10256:2;10251:3;10192:67;:::i;:::-;10185:74;;10268:93;10357:3;10268:93;:::i;:::-;10386:2;10381:3;10377:12;10370:19;;10029:366;;;:::o;10401:419::-;10567:4;10605:2;10594:9;10590:18;10582:26;;10654:9;10648:4;10644:20;10640:1;10629:9;10625:17;10618:47;10682:131;10808:4;10682:131;:::i;:::-;10674:139;;10401:419;;;:::o;10826:224::-;10966:34;10962:1;10954:6;10950:14;10943:58;11035:7;11030:2;11022:6;11018:15;11011:32;10826:224;:::o;11056:366::-;11198:3;11219:67;11283:2;11278:3;11219:67;:::i;:::-;11212:74;;11295:93;11384:3;11295:93;:::i;:::-;11413:2;11408:3;11404:12;11397:19;;11056:366;;;:::o;11428:419::-;11594:4;11632:2;11621:9;11617:18;11609:26;;11681:9;11675:4;11671:20;11667:1;11656:9;11652:17;11645:47;11709:131;11835:4;11709:131;:::i;:::-;11701:139;;11428:419;;;:::o;11853:222::-;11993:34;11989:1;11981:6;11977:14;11970:58;12062:5;12057:2;12049:6;12045:15;12038:30;11853:222;:::o;12081:366::-;12223:3;12244:67;12308:2;12303:3;12244:67;:::i;:::-;12237:74;;12320:93;12409:3;12320:93;:::i;:::-;12438:2;12433:3;12429:12;12422:19;;12081:366;;;:::o;12453:419::-;12619:4;12657:2;12646:9;12642:18;12634:26;;12706:9;12700:4;12696:20;12692:1;12681:9;12677:17;12670:47;12734:131;12860:4;12734:131;:::i;:::-;12726:139;;12453:419;;;:::o;12878:177::-;13018:29;13014:1;13006:6;13002:14;12995:53;12878:177;:::o;13061:366::-;13203:3;13224:67;13288:2;13283:3;13224:67;:::i;:::-;13217:74;;13300:93;13389:3;13300:93;:::i;:::-;13418:2;13413:3;13409:12;13402:19;;13061:366;;;:::o;13433:419::-;13599:4;13637:2;13626:9;13622:18;13614:26;;13686:9;13680:4;13676:20;13672:1;13661:9;13657:17;13650:47;13714:131;13840:4;13714:131;:::i;:::-;13706:139;;13433:419;;;:::o;13858:60::-;13886:3;13907:5;13900:12;;13858:60;;;:::o;13924:142::-;13974:9;14007:53;14025:34;14034:24;14052:5;14034:24;:::i;:::-;14025:34;:::i;:::-;14007:53;:::i;:::-;13994:66;;13924:142;;;:::o;14072:131::-;14159:37;14190:5;14159:37;:::i;:::-;14154:3;14147:50;14072:131;;:::o;14209:332::-;14330:4;14368:2;14357:9;14353:18;14345:26;;14381:71;14449:1;14438:9;14434:17;14425:6;14381:71;:::i;:::-;14462:72;14530:2;14519:9;14515:18;14506:6;14462:72;:::i;:::-;14209:332;;;;;:::o;14547:116::-;14617:21;14632:5;14617:21;:::i;:::-;14610:5;14607:32;14597:60;;14653:1;14650;14643:12;14597:60;14547:116;:::o;14669:137::-;14723:5;14754:6;14748:13;14739:22;;14770:30;14794:5;14770:30;:::i;:::-;14669:137;;;;:::o;14812:345::-;14879:6;14928:2;14916:9;14907:7;14903:23;14899:32;14896:119;;;14934:79;;:::i;:::-;14896:119;15054:1;15079:61;15132:7;15123:6;15112:9;15108:22;15079:61;:::i;:::-;15069:71;;15025:125;14812:345;;;;:::o;15163:169::-;15303:21;15299:1;15291:6;15287:14;15280:45;15163:169;:::o;15338:366::-;15480:3;15501:67;15565:2;15560:3;15501:67;:::i;:::-;15494:74;;15577:93;15666:3;15577:93;:::i;:::-;15695:2;15690:3;15686:12;15679:19;;15338:366;;;:::o;15710:419::-;15876:4;15914:2;15903:9;15899:18;15891:26;;15963:9;15957:4;15953:20;15949:1;15938:9;15934:17;15927:47;15991:131;16117:4;15991:131;:::i;:::-;15983:139;;15710:419;;;:::o;16135:180::-;16183:77;16180:1;16173:88;16280:4;16277:1;16270:15;16304:4;16301:1;16294:15;16321:191;16361:4;16381:20;16399:1;16381:20;:::i;:::-;16376:25;;16415:20;16433:1;16415:20;:::i;:::-;16410:25;;16454:1;16451;16448:8;16445:34;;;16459:18;;:::i;:::-;16445:34;16504:1;16501;16497:9;16489:17;;16321:191;;;;:::o;16518:553::-;16695:4;16733:3;16722:9;16718:19;16710:27;;16747:71;16815:1;16804:9;16800:17;16791:6;16747:71;:::i;:::-;16828:72;16896:2;16885:9;16881:18;16872:6;16828:72;:::i;:::-;16910;16978:2;16967:9;16963:18;16954:6;16910:72;:::i;:::-;16992;17060:2;17049:9;17045:18;17036:6;16992:72;:::i;:::-;16518:553;;;;;;;:::o;17077:174::-;17217:26;17213:1;17205:6;17201:14;17194:50;17077:174;:::o;17257:366::-;17399:3;17420:67;17484:2;17479:3;17420:67;:::i;:::-;17413:74;;17496:93;17585:3;17496:93;:::i;:::-;17614:2;17609:3;17605:12;17598:19;;17257:366;;;:::o;17629:419::-;17795:4;17833:2;17822:9;17818:18;17810:26;;17882:9;17876:4;17872:20;17868:1;17857:9;17853:17;17846:47;17910:131;18036:4;17910:131;:::i;:::-;17902:139;;17629:419;;;:::o;18054:305::-;18094:3;18113:20;18131:1;18113:20;:::i;:::-;18108:25;;18147:20;18165:1;18147:20;:::i;:::-;18142:25;;18301:1;18233:66;18229:74;18226:1;18223:81;18220:107;;;18307:18;;:::i;:::-;18220:107;18351:1;18348;18344:9;18337:16;;18054:305;;;;:::o;18365:224::-;18505:34;18501:1;18493:6;18489:14;18482:58;18574:7;18569:2;18561:6;18557:15;18550:32;18365:224;:::o;18595:366::-;18737:3;18758:67;18822:2;18817:3;18758:67;:::i;:::-;18751:74;;18834:93;18923:3;18834:93;:::i;:::-;18952:2;18947:3;18943:12;18936:19;;18595:366;;;:::o;18967:419::-;19133:4;19171:2;19160:9;19156:18;19148:26;;19220:9;19214:4;19210:20;19206:1;19195:9;19191:17;19184:47;19248:131;19374:4;19248:131;:::i;:::-;19240:139;;18967:419;;;:::o;19392:442::-;19541:4;19579:2;19568:9;19564:18;19556:26;;19592:71;19660:1;19649:9;19645:17;19636:6;19592:71;:::i;:::-;19673:72;19741:2;19730:9;19726:18;19717:6;19673:72;:::i;:::-;19755;19823:2;19812:9;19808:18;19799:6;19755:72;:::i;:::-;19392:442;;;;;;:::o;19840:273::-;19880:3;19899:20;19917:1;19899:20;:::i;:::-;19894:25;;19933:20;19951:1;19933:20;:::i;:::-;19928:25;;20055:1;20019:34;20015:42;20012:1;20009:49;20006:75;;;20061:18;;:::i;:::-;20006:75;20105:1;20102;20098:9;20091:16;;19840:273;;;;:::o;20119:316::-;20159:7;20182:20;20200:1;20182:20;:::i;:::-;20177:25;;20216:20;20234:1;20216:20;:::i;:::-;20211:25;;20372:1;20336:34;20332:42;20329:1;20326:49;20321:1;20314:9;20307:17;20303:73;20300:99;;;20379:18;;:::i;:::-;20300:99;20427:1;20424;20420:9;20409:20;;20119:316;;;;:::o;20441:180::-;20489:77;20486:1;20479:88;20586:4;20583:1;20576:15;20610:4;20607:1;20600:15;20627:185;20667:1;20684:20;20702:1;20684:20;:::i;:::-;20679:25;;20718:20;20736:1;20718:20;:::i;:::-;20713:25;;20757:1;20747:35;;20762:18;;:::i;:::-;20747:35;20804:1;20801;20797:9;20792:14;;20627:185;;;;:::o;20818:180::-;20866:77;20863:1;20856:88;20963:4;20960:1;20953:15;20987:4;20984:1;20977:15;21004:233;21043:3;21066:24;21084:5;21066:24;:::i;:::-;21057:33;;21112:66;21105:5;21102:77;21099:103;;21182:18;;:::i;:::-;21099:103;21229:1;21222:5;21218:13;21211:20;;21004:233;;;:::o;21243:191::-;21283:4;21303:20;21321:1;21303:20;:::i;:::-;21298:25;;21337:20;21355:1;21337:20;:::i;:::-;21332:25;;21376:1;21373;21370:8;21367:34;;;21381:18;;:::i;:::-;21367:34;21426:1;21423;21419:9;21411:17;;21243:191;;;;:::o;21440:348::-;21480:7;21503:20;21521:1;21503:20;:::i;:::-;21498:25;;21537:20;21555:1;21537:20;:::i;:::-;21532:25;;21725:1;21657:66;21653:74;21650:1;21647:81;21642:1;21635:9;21628:17;21624:105;21621:131;;;21732:18;;:::i;:::-;21621:131;21780:1;21777;21773:9;21762:20;;21440:348;;;;:::o;21794:185::-;21834:1;21851:20;21869:1;21851:20;:::i;:::-;21846:25;;21885:20;21903:1;21885:20;:::i;:::-;21880:25;;21924:1;21914:35;;21929:18;;:::i;:::-;21914:35;21971:1;21968;21964:9;21959:14;;21794:185;;;;:::o;21985:225::-;22125:34;22121:1;22113:6;22109:14;22102:58;22194:8;22189:2;22181:6;22177:15;22170:33;21985:225;:::o;22216:366::-;22358:3;22379:67;22443:2;22438:3;22379:67;:::i;:::-;22372:74;;22455:93;22544:3;22455:93;:::i;:::-;22573:2;22568:3;22564:12;22557:19;;22216:366;;;:::o;22588:419::-;22754:4;22792:2;22781:9;22777:18;22769:26;;22841:9;22835:4;22831:20;22827:1;22816:9;22812:17;22805:47;22869:131;22995:4;22869:131;:::i;:::-;22861:139;;22588:419;;;:::o;23013:223::-;23153:34;23149:1;23141:6;23137:14;23130:58;23222:6;23217:2;23209:6;23205:15;23198:31;23013:223;:::o;23242:366::-;23384:3;23405:67;23469:2;23464:3;23405:67;:::i;:::-;23398:74;;23481:93;23570:3;23481:93;:::i;:::-;23599:2;23594:3;23590:12;23583:19;;23242:366;;;:::o;23614:419::-;23780:4;23818:2;23807:9;23803:18;23795:26;;23867:9;23861:4;23857:20;23853:1;23842:9;23838:17;23831:47;23895:131;24021:4;23895:131;:::i;:::-;23887:139;;23614:419;;;:::o;24039:221::-;24179:34;24175:1;24167:6;24163:14;24156:58;24248:4;24243:2;24235:6;24231:15;24224:29;24039:221;:::o;24266:366::-;24408:3;24429:67;24493:2;24488:3;24429:67;:::i;:::-;24422:74;;24505:93;24594:3;24505:93;:::i;:::-;24623:2;24618:3;24614:12;24607:19;;24266:366;;;:::o;24638:419::-;24804:4;24842:2;24831:9;24827:18;24819:26;;24891:9;24885:4;24881:20;24877:1;24866:9;24862:17;24855:47;24919:131;25045:4;24919:131;:::i;:::-;24911:139;;24638:419;;;:::o;25063:182::-;25203:34;25199:1;25191:6;25187:14;25180:58;25063:182;:::o;25251:366::-;25393:3;25414:67;25478:2;25473:3;25414:67;:::i;:::-;25407:74;;25490:93;25579:3;25490:93;:::i;:::-;25608:2;25603:3;25599:12;25592:19;;25251:366;;;:::o;25623:419::-;25789:4;25827:2;25816:9;25812:18;25804:26;;25876:9;25870:4;25866:20;25862:1;25851:9;25847:17;25840:47;25904:131;26030:4;25904:131;:::i;:::-;25896:139;;25623:419;;;:::o;26048:179::-;26188:31;26184:1;26176:6;26172:14;26165:55;26048:179;:::o;26233:366::-;26375:3;26396:67;26460:2;26455:3;26396:67;:::i;:::-;26389:74;;26472:93;26561:3;26472:93;:::i;:::-;26590:2;26585:3;26581:12;26574:19;;26233:366;;;:::o;26605:419::-;26771:4;26809:2;26798:9;26794:18;26786:26;;26858:9;26852:4;26848:20;26844:1;26833:9;26829:17;26822:47;26886:131;27012:4;26886:131;:::i;:::-;26878:139;;26605:419;;;:::o;27030:224::-;27170:34;27166:1;27158:6;27154:14;27147:58;27239:7;27234:2;27226:6;27222:15;27215:32;27030:224;:::o;27260:366::-;27402:3;27423:67;27487:2;27482:3;27423:67;:::i;:::-;27416:74;;27499:93;27588:3;27499:93;:::i;:::-;27617:2;27612:3;27608:12;27601:19;;27260:366;;;:::o;27632:419::-;27798:4;27836:2;27825:9;27821:18;27813:26;;27885:9;27879:4;27875:20;27871:1;27860:9;27856:17;27849:47;27913:131;28039:4;27913:131;:::i;:::-;27905:139;;27632:419;;;:::o;28057:222::-;28197:34;28193:1;28185:6;28181:14;28174:58;28266:5;28261:2;28253:6;28249:15;28242:30;28057:222;:::o;28285:366::-;28427:3;28448:67;28512:2;28507:3;28448:67;:::i;:::-;28441:74;;28524:93;28613:3;28524:93;:::i;:::-;28642:2;28637:3;28633:12;28626:19;;28285:366;;;:::o;28657:419::-;28823:4;28861:2;28850:9;28846:18;28838:26;;28910:9;28904:4;28900:20;28896:1;28885:9;28881:17;28874:47;28938:131;29064:4;28938:131;:::i;:::-;28930:139;;28657:419;;;:::o;29082:225::-;29222:34;29218:1;29210:6;29206:14;29199:58;29291:8;29286:2;29278:6;29274:15;29267:33;29082:225;:::o;29313:366::-;29455:3;29476:67;29540:2;29535:3;29476:67;:::i;:::-;29469:74;;29552:93;29641:3;29552:93;:::i;:::-;29670:2;29665:3;29661:12;29654:19;;29313:366;;;:::o;29685:419::-;29851:4;29889:2;29878:9;29874:18;29866:26;;29938:9;29932:4;29928:20;29924:1;29913:9;29909:17;29902:47;29966:131;30092:4;29966:131;:::i;:::-;29958:139;;29685:419;;;:::o;30110:105::-;30146:7;30186:22;30179:5;30175:34;30164:45;;30110:105;;;:::o;30221:120::-;30293:23;30310:5;30293:23;:::i;:::-;30286:5;30283:34;30273:62;;30331:1;30328;30321:12;30273:62;30221:120;:::o;30347:141::-;30403:5;30434:6;30428:13;30419:22;;30450:32;30476:5;30450:32;:::i;:::-;30347:141;;;;:::o;30494:76::-;30530:7;30559:5;30548:16;;30494:76;;;:::o;30576:120::-;30648:23;30665:5;30648:23;:::i;:::-;30641:5;30638:34;30628:62;;30686:1;30683;30676:12;30628:62;30576:120;:::o;30702:141::-;30758:5;30789:6;30783:13;30774:22;;30805:32;30831:5;30805:32;:::i;:::-;30702:141;;;;:::o;30849:143::-;30906:5;30937:6;30931:13;30922:22;;30953:33;30980:5;30953:33;:::i;:::-;30849:143;;;;:::o;30998:971::-;31101:6;31109;31117;31125;31133;31182:3;31170:9;31161:7;31157:23;31153:33;31150:120;;;31189:79;;:::i;:::-;31150:120;31309:1;31334:63;31389:7;31380:6;31369:9;31365:22;31334:63;:::i;:::-;31324:73;;31280:127;31446:2;31472:63;31527:7;31518:6;31507:9;31503:22;31472:63;:::i;:::-;31462:73;;31417:128;31584:2;31610:64;31666:7;31657:6;31646:9;31642:22;31610:64;:::i;:::-;31600:74;;31555:129;31723:2;31749:64;31805:7;31796:6;31785:9;31781:22;31749:64;:::i;:::-;31739:74;;31694:129;31862:3;31889:63;31944:7;31935:6;31924:9;31920:22;31889:63;:::i;:::-;31879:73;;31833:129;30998:971;;;;;;;;:::o;31975:181::-;32115:33;32111:1;32103:6;32099:14;32092:57;31975:181;:::o;32162:366::-;32304:3;32325:67;32389:2;32384:3;32325:67;:::i;:::-;32318:74;;32401:93;32490:3;32401:93;:::i;:::-;32519:2;32514:3;32510:12;32503:19;;32162:366;;;:::o;32534:419::-;32700:4;32738:2;32727:9;32723:18;32715:26;;32787:9;32781:4;32777:20;32773:1;32762:9;32758:17;32751:47;32815:131;32941:4;32815:131;:::i;:::-;32807:139;;32534:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.14;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"./CrowdV.sol\";\r\n\r\n/**\r\n * @title Staking : a Staking Plateform !\r\n * @author Anthony - Etienne - Jean-Baptiste\r\n */\r\n\r\ncontract Staking is Ownable, CrowdV {\r\n    //Price of reward token in $\r\n    uint256 priceTokenRewardInDollar = 1;\r\n\r\n    //Information about the token\r\n    struct Token {\r\n        bool activePool;\r\n        address addressPrice; //Chainlink Pool\r\n        uint256 dateStop;\r\n        uint128 APR;\r\n        uint128 totalStakes;\r\n    }\r\n\r\n    // Token address => active pool\r\n    mapping(address => Token) pools;\r\n\r\n    struct Staker {\r\n        uint128 amount; // Amount token stake\r\n        uint256 date; // Date of stake start\r\n    }\r\n\r\n    // address token => address Staker => Informations Staker\r\n    mapping(address => mapping(address => Staker)) stakers;\r\n\r\n    // Save total amount with timestamp\r\n    struct majStackingPool {\r\n        uint256 blockDate;\r\n        uint128 stakingTotalPool;\r\n    }\r\n    mapping(address => majStackingPool[]) public stakingTimes;\r\n\r\n    // Events\r\n    event NewPool(address tokenAddress, uint256 APR);\r\n    event StopPool(address tokenAddress, uint256 date);\r\n    event Stake(\r\n        address sender,\r\n        address tokenAddress,\r\n        uint128 amount,\r\n        uint256 date\r\n    );\r\n    event Unstake(\r\n        address sender,\r\n        address tokenAddress,\r\n        uint128 amount,\r\n        uint256 date\r\n    );\r\n\r\n    /**\r\n     * @notice Make available token address to add pool\r\n     * @dev Available only for owner\r\n     * @param _token is token address\r\n     * @param _apr is APR of the pool\r\n     * @param _addressPrice is Chainlink pool\r\n     */\r\n    function addPool(\r\n        address _token,\r\n        uint128 _apr,\r\n        address _addressPrice\r\n    ) external onlyOwner {\r\n        require(!pools[_token].activePool, \"This token already exist\");\r\n\r\n        pools[_token].activePool = true;\r\n        pools[_token].APR = _apr;\r\n        pools[_token].addressPrice = _addressPrice;\r\n\r\n        emit NewPool(_token, _apr);\r\n    }\r\n\r\n    /**\r\n     * @notice disable a pool\r\n     * @dev Available only for owner\r\n     * @param _token is token address\r\n     */\r\n    function stopPool(address _token) external onlyOwner {\r\n        require(\r\n            pools[_token].activePool,\r\n            \"Pool is not active\"\r\n        );\r\n        pools[_token].activePool = false;\r\n        pools[_token].dateStop = block.timestamp;\r\n\r\n        emit StopPool(_token, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Stake fund into this contract\r\n     * @param _amount to stake\r\n     * @param _token to stake\r\n     * @dev Emit event after stake\r\n     */\r\n    function stake(uint128 _amount, address _token) external {\r\n        require(_amount > 0, \"The amount must be greater than zero.\");\r\n        require(pools[_token].activePool, \"This token isn't available.\");\r\n\r\n        bool result = IERC20(_token).transferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            _amount\r\n        );\r\n        require(result, \"Transfer from error\");\r\n\r\n        stakers[_token][msg.sender].amount += _amount;\r\n        stakers[_token][msg.sender].date = block.timestamp;\r\n\r\n        majStackingPool memory maj = majStackingPool(\r\n            block.timestamp,\r\n            pools[_token].totalStakes + _amount\r\n        );\r\n        stakingTimes[_token].push(maj);\r\n\r\n        pools[_token].totalStakes += _amount;\r\n\r\n        emit Stake(msg.sender, _token, _amount, block.timestamp);\r\n\r\n        claimRewards(_token); // Récupérer les rewards en même temps\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw fund into this contract\r\n     * @param _token to unstake\r\n     * @param _amount number of token to unstake\r\n     */\r\n    function withdraw(uint128 _amount, address _token) external {\r\n        require(isStaker(_token), \"You are not a staker\");\r\n        require(_amount > 0, \"The amount must be greater than zero.\");\r\n        require(_amount >= stakers[_token][msg.sender].amount, \"You don't have this amount of token\");\r\n        require(pools[_token].activePool, \"This token isn't available.\"); //pas sûr que ce soit nécessaire\r\n\r\n        bool result = IERC20(_token).transfer(msg.sender, _amount);\r\n        require(result, \"Transfer from error\");\r\n\r\n        claimRewards(_token); // Récupérer les rewards en même temps\r\n\r\n        stakers[_token][msg.sender].amount -= _amount;\r\n        stakers[_token][msg.sender].date = block.timestamp;\r\n\r\n        majStackingPool memory maj = majStackingPool(\r\n            block.timestamp,\r\n            pools[_token].totalStakes - _amount\r\n        );\r\n        stakingTimes[_token].push(maj);\r\n\r\n        pools[_token].totalStakes -= _amount;\r\n\r\n        emit Unstake(msg.sender, _token, _amount, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Get price of token with Chainlink\r\n     * @param _pairChainlinkAddress is the pool adress in $\r\n     */\r\n    function _getLatestPrice(address _pairChainlinkAddress)\r\n        private\r\n        view\r\n        returns (uint256)\r\n    {\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\r\n            _pairChainlinkAddress\r\n        );\r\n        (, int256 price, , , ) = priceFeed.latestRoundData();\r\n\r\n        return uint256(price);\r\n    }\r\n\r\n    /**\r\n     * @notice Calculate rewards\r\n     * @dev tokenPrice use Chainlink Oracle\r\n     * @param _token is the token of pool to calculate rewards\r\n     * @return rewards in dollars\r\n     */\r\n    function calculateReward(address _token) public view returns (uint256) {\r\n        require(isStaker(_token), \"You are not a staker\");\r\n        uint256 tokenPrice = _getLatestPrice(pools[_token].addressPrice);\r\n        uint256 aprPerSeconds = ((pools[_token].APR) * 10**8) /\r\n            (365 * 24 * 3600);\r\n        uint256 rewardspartoOfPool;\r\n        uint256 x = stakingTimes[_token].length;\r\n        uint256 blockIndex;\r\n        for (uint256 i = 0; i < x; i++) {\r\n            if (\r\n                stakingTimes[_token][i].blockDate ==\r\n                stakers[_token][msg.sender].date\r\n            ) {\r\n                blockIndex = i;\r\n            }\r\n        }\r\n\r\n        if (pools[_token].activePool) {\r\n            if (x == 1) {\r\n                rewardspartoOfPool += (block.timestamp -\r\n                    stakers[_token][msg.sender].date);\r\n            } else {\r\n                for (uint256 i = blockIndex; i < x - 1; i++) {\r\n                    rewardspartoOfPool +=\r\n                        ((stakingTimes[_token][i + 1].blockDate -\r\n                            stakingTimes[_token][i].blockDate) *\r\n                            stakers[_token][msg.sender].amount) /\r\n                        stakingTimes[_token][i].stakingTotalPool;\r\n                }\r\n                rewardspartoOfPool +=\r\n                    ((block.timestamp - stakingTimes[_token][x - 1].blockDate) *\r\n                        stakers[_token][msg.sender].amount) /\r\n                    pools[_token].totalStakes;\r\n            }\r\n        } else {\r\n            if (x == 1) {\r\n                rewardspartoOfPool += (pools[_token].dateStop -\r\n                    stakers[_token][msg.sender].date);\r\n            } else {\r\n                for (uint256 i = blockIndex; i < x - 1; i++) {\r\n                    rewardspartoOfPool +=\r\n                        ((stakingTimes[_token][i + 1].blockDate -\r\n                            stakingTimes[_token][i].blockDate) *\r\n                            stakers[_token][msg.sender].amount) /\r\n                        stakingTimes[_token][i].stakingTotalPool;\r\n                }\r\n                rewardspartoOfPool +=\r\n                    ((pools[_token].dateStop -\r\n                        stakingTimes[_token][x - 1].blockDate) *\r\n                        stakers[_token][msg.sender].amount) /\r\n                    pools[_token].totalStakes;\r\n            }\r\n        }\r\n\r\n        return rewardspartoOfPool * tokenPrice * aprPerSeconds;\r\n    }\r\n\r\n    /**\r\n     * @notice Claim your rewards\r\n     * @dev Available only for stakers who have rewards to claim\r\n     * @param _token is token of the pool to claim rewards\r\n     */\r\n    function claimRewards(address _token) public {\r\n        require(isStaker(_token), \"You are not a staker\");\r\n\r\n        uint256 amoutToClaim = calculateReward(_token) /\r\n            priceTokenRewardInDollar;\r\n        stakers[_token][msg.sender].date = block.timestamp; //Remettre à 0 le timestamp\r\n        _mint(msg.sender, amoutToClaim);\r\n    }\r\n\r\n    /**\r\n     * @notice Check amount of a stacked pool from msg.sender\r\n     * @param _token is address token of the pool to check\r\n     */\r\n    function getStaking(address _token) external view returns (uint256) {\r\n        return stakers[_token][msg.sender].amount;\r\n    }\r\n\r\n    /**\r\n     * @notice Check if msg.sender is a staker of a pool\r\n     * @dev Can be used to show the staked pools on the Dapp\r\n     * @param _token is address token of a pool\r\n     */\r\n    function isStaker(address _token) public view returns (bool) {\r\n        if (stakers[_token][msg.sender].amount > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @notice Check total amount of a stacked pool\r\n     * @param _token is address token\r\n     */\r\n    function getTotalStaking(address _token) external view returns (uint256) {\r\n        return pools[_token].totalStakes;\r\n    }\r\n\r\n}",
  "sourcePath": "/home/etienne/workspace/tp-defi/truffle/contracts/Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        884
      ],
      "Context": [
        1708
      ],
      "CrowdV": [
        14
      ],
      "ERC20": [
        1583
      ],
      "IERC20": [
        1661
      ],
      "IERC20Metadata": [
        1686
      ],
      "Ownable": [
        997
      ],
      "Staking": [
        838
      ]
    },
    "id": 839,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 839,
        "sourceUnit": 1662,
        "src": "60:72:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 18,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 839,
        "sourceUnit": 998,
        "src": "134:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 19,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 839,
        "sourceUnit": 885,
        "src": "204:92:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CrowdV.sol",
        "file": "./CrowdV.sol",
        "id": 20,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 839,
        "sourceUnit": 15,
        "src": "298:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 997,
              "src": "445:7:1"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "445:7:1"
          },
          {
            "baseName": {
              "id": 24,
              "name": "CrowdV",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14,
              "src": "454:6:1"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "454:6:1"
          }
        ],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21,
          "nodeType": "StructuredDocumentation",
          "src": "324:97:1",
          "text": " @title Staking : a Staking Plateform !\n @author Anthony - Etienne - Jean-Baptiste"
        },
        "fullyImplemented": true,
        "id": 838,
        "linearizedBaseContracts": [
          838,
          14,
          1583,
          1686,
          1661,
          997,
          1708
        ],
        "name": "Staking",
        "nameLocation": "434:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "priceTokenRewardInDollar",
            "nameLocation": "510:24:1",
            "nodeType": "VariableDeclaration",
            "scope": 838,
            "src": "502:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "537:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Staking.Token",
            "id": 39,
            "members": [
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "activePool",
                "nameLocation": "611:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "606:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 29,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "606:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "addressPrice",
                "nameLocation": "640:12:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "632:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 31,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "dateStop",
                "nameLocation": "688:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "680:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "680:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "APR",
                "nameLocation": "715:3:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "707:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "totalStakes",
                "nameLocation": "737:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "729:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "729:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nameLocation": "589:5:1",
            "nodeType": "StructDefinition",
            "scope": 838,
            "src": "582:174:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "827:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 838,
            "src": "801:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
              "typeString": "mapping(address => struct Staking.Token)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "801:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                "typeString": "mapping(address => struct Staking.Token)"
              },
              "valueType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "820:5:1"
                },
                "referencedDeclaration": 39,
                "src": "820:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$39_storage_ptr",
                  "typeString": "struct Staking.Token"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Staking.Staker",
            "id": 49,
            "members": [
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "874:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "866:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "866:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "date",
                "nameLocation": "921:4:1",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "913:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "913:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Staker",
            "nameLocation": "848:6:1",
            "nodeType": "StructDefinition",
            "scope": 838,
            "src": "841:115:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "1074:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 838,
            "src": "1027:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct Staking.Staker))"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1035:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1027:46:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct Staking.Staker))"
              },
              "valueType": {
                "id": 54,
                "keyType": {
                  "id": 51,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1054:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1046:26:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                  "typeString": "mapping(address => struct Staking.Staker)"
                },
                "valueType": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "Staker",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49,
                    "src": "1065:6:1"
                  },
                  "referencedDeclaration": 49,
                  "src": "1065:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Staker_$49_storage_ptr",
                    "typeString": "struct Staking.Staker"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Staking.majStackingPool",
            "id": 61,
            "members": [
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "blockDate",
                "nameLocation": "1173:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1165:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 57,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1165:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "stakingTotalPool",
                "nameLocation": "1201:16:1",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1193:24:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 59,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "majStackingPool",
            "nameLocation": "1138:15:1",
            "nodeType": "StructDefinition",
            "scope": 838,
            "src": "1131:94:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f005df3",
            "id": 67,
            "mutability": "mutable",
            "name": "stakingTimes",
            "nameLocation": "1276:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 838,
            "src": "1231:57:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Staking.majStackingPool[])"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 62,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1239:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1231:37:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Staking.majStackingPool[])"
              },
              "valueType": {
                "baseType": {
                  "id": 64,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 63,
                    "name": "majStackingPool",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 61,
                    "src": "1250:15:1"
                  },
                  "referencedDeclaration": 61,
                  "src": "1250:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_majStackingPool_$61_storage_ptr",
                    "typeString": "struct Staking.majStackingPool"
                  }
                },
                "id": 65,
                "nodeType": "ArrayTypeName",
                "src": "1250:17:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr",
                  "typeString": "struct Staking.majStackingPool[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "be4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31",
            "id": 73,
            "name": "NewPool",
            "nameLocation": "1318:7:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1334:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1326:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "APR",
                  "nameLocation": "1356:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1348:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1325:35:1"
            },
            "src": "1312:49:1"
          },
          {
            "anonymous": false,
            "eventSelector": "95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4",
            "id": 79,
            "name": "StopPool",
            "nameLocation": "1373:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1390:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1382:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1382:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "1412:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1404:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1381:36:1"
            },
            "src": "1367:51:1"
          },
          {
            "anonymous": false,
            "eventSelector": "1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca",
            "id": 89,
            "name": "Stake",
            "nameLocation": "1430:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1454:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1446:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1479:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1471:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1510:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1502:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "1535:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1527:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1435:111:1"
            },
            "src": "1424:123:1"
          },
          {
            "anonymous": false,
            "eventSelector": "bd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f3",
            "id": 99,
            "name": "Unstake",
            "nameLocation": "1559:7:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1585:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1577:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1610:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1602:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1641:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1633:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "1666:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1658:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1566:111:1"
            },
            "src": "1553:125:1"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "2047:252:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2066:25:1",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 112,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "2067:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                "typeString": "mapping(address => struct Staking.Token storage ref)"
                              }
                            },
                            "id": 114,
                            "indexExpression": {
                              "id": 113,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "2073:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2067:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$39_storage",
                              "typeString": "struct Staking.Token storage ref"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activePool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "2067:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e20616c7265616479206578697374",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2093:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670",
                          "typeString": "literal_string \"This token already exist\""
                        },
                        "value": "This token already exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6722d8e247def84a15645280d82662512be2efc2c0bdc2bce315db586a92e670",
                          "typeString": "literal_string \"This token already exist\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2058:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:62:1"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 120,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2133:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 122,
                        "indexExpression": {
                          "id": 121,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2139:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2133:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "2133:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2160:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2133:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:31:1"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 127,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2175:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 129,
                        "indexExpression": {
                          "id": 128,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2181:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2175:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "APR",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "2175:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 131,
                      "name": "_apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2195:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2175:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:24:1"
                },
                {
                  "expression": {
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 134,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2210:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 136,
                        "indexExpression": {
                          "id": 135,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2216:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2210:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "addressPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "2210:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138,
                      "name": "_addressPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "2239:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2210:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:42:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "2278:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 143,
                        "name": "_apr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "2286:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 141,
                      "name": "NewPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2270:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "EmitStatement",
                  "src": "2265:26:1"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1686:232:1",
              "text": " @notice Make available token address to add pool\n @dev Available only for owner\n @param _token is token address\n @param _apr is APR of the pool\n @param _addressPrice is Chainlink pool"
            },
            "functionSelector": "2bf8f756",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 109,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 108,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 916,
                  "src": "2037:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2037:9:1"
              }
            ],
            "name": "addPool",
            "nameLocation": "1933:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1959:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1951:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_apr",
                  "nameLocation": "1984:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1976:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_addressPrice",
                  "nameLocation": "2007:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1999:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1999:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1940:87:1"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2047:0:1"
            },
            "scope": 838,
            "src": "1924:375:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2486:256:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 156,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2519:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 158,
                          "indexExpression": {
                            "id": 157,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "2525:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2519:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "2519:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c206973206e6f7420616374697665",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2558:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767",
                          "typeString": "literal_string \"Pool is not active\""
                        },
                        "value": "Pool is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20be28cdc51b46926323372e29778ea20f53cf60c56bad97e36ec255790c2767",
                          "typeString": "literal_string \"Pool is not active\""
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2497:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:92:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:92:1"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 163,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2600:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 165,
                        "indexExpression": {
                          "id": 164,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "2606:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2600:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "2600:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2627:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2600:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:32:1"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 170,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2643:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 172,
                        "indexExpression": {
                          "id": 171,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "2649:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2643:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateStop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "2643:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 174,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2668:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2668:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2643:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:40:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 179,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "2710:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 180,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2718:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2718:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 178,
                      "name": "StopPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2701:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2701:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "EmitStatement",
                  "src": "2696:38:1"
                }
              ]
            },
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "2307:120:1",
              "text": " @notice disable a pool\n @dev Available only for owner\n @param _token is token address"
            },
            "functionSelector": "156e28b8",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 153,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 152,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 916,
                  "src": "2476:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2476:9:1"
              }
            ],
            "name": "stopPool",
            "nameLocation": "2442:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2459:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2451:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2450:16:1"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2486:0:1"
            },
            "scope": 838,
            "src": "2433:309:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "2970:845:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 194,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "2989:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2999:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2989:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3002:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        },
                        "value": "The amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2981:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2981:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2981:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 201,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "3061:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 203,
                          "indexExpression": {
                            "id": 202,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "3067:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3061:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "3061:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e2069736e277420617661696c61626c652e",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3087:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        },
                        "value": "This token isn't available."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        }
                      ],
                      "id": 200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3053:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3053:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:64:1"
                },
                {
                  "assignments": [
                    209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 209,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "3135:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 290,
                      "src": "3130:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3130:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 214,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3186:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3186:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 218,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3219:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$838",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$838",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3211:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3211:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3211:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 220,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3239:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 211,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "3151:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 210,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1661,
                          "src": "3144:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1661_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3144:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1661",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1660,
                      "src": "3144:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3144:113:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3130:127:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 224,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "3276:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3284:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        },
                        "value": "Transfer from error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        }
                      ],
                      "id": 223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3268:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3268:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3268:38:1"
                },
                {
                  "expression": {
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 228,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3319:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 232,
                          "indexExpression": {
                            "id": 229,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "3327:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3319:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "expression": {
                            "id": 230,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3335:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3335:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3319:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "3319:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 235,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3357:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "3319:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:45:1"
                },
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 238,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3375:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 242,
                          "indexExpression": {
                            "id": 239,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "3383:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3375:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 243,
                        "indexExpression": {
                          "expression": {
                            "id": 240,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3391:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3391:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3375:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "3375:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 245,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3410:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3410:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3375:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3375:50:1"
                },
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "maj",
                      "nameLocation": "3461:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 290,
                      "src": "3438:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                        "typeString": "struct Staking.majStackingPool"
                      },
                      "typeName": {
                        "id": 250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 249,
                          "name": "majStackingPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "3438:15:1"
                        },
                        "referencedDeclaration": 61,
                        "src": "3438:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage_ptr",
                          "typeString": "struct Staking.majStackingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 253,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3497:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3497:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 255,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "3527:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                "typeString": "mapping(address => struct Staking.Token storage ref)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "id": 256,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "3533:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3527:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$39_storage",
                              "typeString": "struct Staking.Token storage ref"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "3527:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 259,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "3555:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "3527:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 252,
                      "name": "majStackingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3467:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_majStackingPool_$61_storage_ptr_$",
                        "typeString": "type(struct Staking.majStackingPool storage pointer)"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3467:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                      "typeString": "struct Staking.majStackingPool memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3438:135:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "maj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3610:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 263,
                          "name": "stakingTimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "3584:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                          }
                        },
                        "id": 265,
                        "indexExpression": {
                          "id": 264,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3597:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3584:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                          "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3584:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$_t_struct$_majStackingPool_$61_storage_$returns$__$bound_to$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Staking.majStackingPool storage ref[] storage pointer,struct Staking.majStackingPool storage ref)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3584:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3584:30:1"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 270,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3627:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 272,
                        "indexExpression": {
                          "id": 271,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3633:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3627:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "3627:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3656:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "3627:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 278,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3687:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3687:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 280,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "3699:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 281,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3707:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 282,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3716:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3716:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 277,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "3681:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint128,uint256)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3681:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "EmitStatement",
                  "src": "3676:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 287,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "3758:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 286,
                      "name": "claimRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "3745:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:20:1"
                }
              ]
            },
            "documentation": {
              "id": 186,
              "nodeType": "StructuredDocumentation",
              "src": "2750:157:1",
              "text": " @notice Stake fund into this contract\n @param _amount to stake\n @param _token to stake\n @dev Emit event after stake"
            },
            "functionSelector": "b166dfdd",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "2922:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2936:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "2928:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2928:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2953:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "2945:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2927:33:1"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2970:0:1"
            },
            "scope": 838,
            "src": "2913:902:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "4033:977:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 301,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "4061:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 300,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "4052:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4052:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4070:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        },
                        "value": "You are not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4044:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4044:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "4044:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 307,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "4112:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4122:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4112:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4125:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        },
                        "value": "The amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4104:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "4104:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 314,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "4184:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 315,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "4195:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                }
                              },
                              "id": 317,
                              "indexExpression": {
                                "id": 316,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "4203:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4195:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                "typeString": "mapping(address => struct Staking.Staker storage ref)"
                              }
                            },
                            "id": 320,
                            "indexExpression": {
                              "expression": {
                                "id": 318,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4211:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4211:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4195:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$49_storage",
                              "typeString": "struct Staking.Staker storage ref"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46,
                          "src": "4195:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "4184:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e27742068617665207468697320616d6f756e74206f6620746f6b656e",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4231:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6",
                          "typeString": "literal_string \"You don't have this amount of token\""
                        },
                        "value": "You don't have this amount of token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6",
                          "typeString": "literal_string \"You don't have this amount of token\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4176:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4176:93:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "4176:93:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 327,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "4288:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 329,
                          "indexExpression": {
                            "id": 328,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "4294:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4288:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "4288:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e2069736e277420617661696c61626c652e",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4314:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        },
                        "value": "This token isn't available."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4280:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4280:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "4280:64:1"
                },
                {
                  "assignments": [
                    335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "4397:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 412,
                      "src": "4392:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4392:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4430:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4430:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 342,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4442:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 337,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "4413:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 336,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1661,
                          "src": "4406:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1661_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4406:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1661",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1628,
                      "src": "4406:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4392:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 346,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "4469:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4477:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        },
                        "value": "Transfer from error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4461:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4461:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "4461:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 351,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "4525:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 350,
                      "name": "claimRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "4512:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4512:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4512:20:1"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 354,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4587:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 358,
                          "indexExpression": {
                            "id": 355,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "4595:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4587:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 359,
                        "indexExpression": {
                          "expression": {
                            "id": 356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4603:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4603:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4587:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "4587:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 361,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "4625:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4587:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "4587:45:1"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 364,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4643:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 368,
                          "indexExpression": {
                            "id": 365,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "4651:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4643:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 369,
                        "indexExpression": {
                          "expression": {
                            "id": 366,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4659:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4659:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4643:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "4643:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 371,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4678:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4678:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4643:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "4643:50:1"
                },
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "maj",
                      "nameLocation": "4729:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 412,
                      "src": "4706:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                        "typeString": "struct Staking.majStackingPool"
                      },
                      "typeName": {
                        "id": 376,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 375,
                          "name": "majStackingPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "4706:15:1"
                        },
                        "referencedDeclaration": 61,
                        "src": "4706:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage_ptr",
                          "typeString": "struct Staking.majStackingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 388,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 379,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4765:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4765:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 381,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "4795:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                "typeString": "mapping(address => struct Staking.Token storage ref)"
                              }
                            },
                            "id": 383,
                            "indexExpression": {
                              "id": 382,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "4801:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4795:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$39_storage",
                              "typeString": "struct Staking.Token storage ref"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "4795:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 385,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "4823:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "4795:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 378,
                      "name": "majStackingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4735:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_majStackingPool_$61_storage_ptr_$",
                        "typeString": "type(struct Staking.majStackingPool storage pointer)"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4735:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                      "typeString": "struct Staking.majStackingPool memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4706:135:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 393,
                        "name": "maj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "4878:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 389,
                          "name": "stakingTimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "4852:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                          }
                        },
                        "id": 391,
                        "indexExpression": {
                          "id": 390,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 296,
                          "src": "4865:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4852:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                          "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4852:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$_t_struct$_majStackingPool_$61_storage_$returns$__$bound_to$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Staking.majStackingPool storage ref[] storage pointer,struct Staking.majStackingPool storage ref)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:30:1"
                },
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 396,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "4895:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 398,
                        "indexExpression": {
                          "id": 397,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 296,
                          "src": "4901:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4895:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "4895:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 400,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "4924:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4895:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "4895:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 404,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4957:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4957:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 406,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "4969:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 407,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4977:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 408,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4986:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4986:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 403,
                      "name": "Unstake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "4949:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint128,uint256)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4949:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "EmitStatement",
                  "src": "4944:58:1"
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
              "src": "3823:144:1",
              "text": " @notice Withdraw fund into this contract\n @param _token to unstake\n @param _amount number of token to unstake"
            },
            "functionSelector": "1d9b0783",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3982:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3999:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3991:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4016:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "4008:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3990:33:1"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4033:0:1"
            },
            "scope": 838,
            "src": "3973:1037:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "5266:218:1",
              "statements": [
                {
                  "assignments": [
                    423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 423,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "5299:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "5277:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$884",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 422,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 421,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 884,
                          "src": "5277:21:1"
                        },
                        "referencedDeclaration": 884,
                        "src": "5277:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$884",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 427,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 425,
                        "name": "_pairChainlinkAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "5347:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 424,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "5311:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$884_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5311:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$884",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5277:102:1"
                },
                {
                  "assignments": [
                    null,
                    429,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "5400:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "5393:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 428,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5393:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 433,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 430,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "5415:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$884",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 883,
                      "src": "5415:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5415:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5390:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 436,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "5470:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5462:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5462:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5462:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 420,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "5455:21:1"
                }
              ]
            },
            "documentation": {
              "id": 414,
              "nodeType": "StructuredDocumentation",
              "src": "5018:123:1",
              "text": " @notice Get price of token with Chainlink\n @param _pairChainlinkAddress is the pool adress in $"
            },
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLatestPrice",
            "nameLocation": "5156:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "_pairChainlinkAddress",
                  "nameLocation": "5180:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "5172:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5172:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5171:31:1"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "5252:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5252:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5251:9:1"
            },
            "scope": 838,
            "src": "5147:337:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 742,
              "nodeType": "Block",
              "src": "5759:2381:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 450,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "5787:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 449,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "5778:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5778:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5796:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        },
                        "value": "You are not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        }
                      ],
                      "id": 448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5770:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5770:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "5770:49:1"
                },
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "tokenPrice",
                      "nameLocation": "5838:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "5830:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 455,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5830:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 463,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 458,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "5867:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 460,
                          "indexExpression": {
                            "id": 459,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "5873:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5867:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "5867:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 457,
                      "name": "_getLatestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "5851:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5851:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5830:64:1"
                },
                {
                  "assignments": [
                    465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 465,
                      "mutability": "mutable",
                      "name": "aprPerSeconds",
                      "nameLocation": "5913:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "5905:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 464,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5905:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 483,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 466,
                                    "name": "pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "5931:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                      "typeString": "mapping(address => struct Staking.Token storage ref)"
                                    }
                                  },
                                  "id": 468,
                                  "indexExpression": {
                                    "id": 467,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 443,
                                    "src": "5937:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5931:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Token_$39_storage",
                                    "typeString": "struct Staking.Token storage ref"
                                  }
                                },
                                "id": 469,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "APR",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36,
                                "src": "5931:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 470,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5930:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5952:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "38",
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5956:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "src": "5952:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          },
                          "src": "5930:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 475,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5929:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_31536000_by_1",
                            "typeString": "int_const 31536000"
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_8760_by_1",
                              "typeString": "int_const 8760"
                            },
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "333635",
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5975:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_365_by_1",
                                "typeString": "int_const 365"
                              },
                              "value": "365"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5981:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "5975:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8760_by_1",
                              "typeString": "int_const 8760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33363030",
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5986:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3600_by_1",
                              "typeString": "int_const 3600"
                            },
                            "value": "3600"
                          },
                          "src": "5975:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31536000_by_1",
                            "typeString": "int_const 31536000"
                          }
                        }
                      ],
                      "id": 481,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5974:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_31536000_by_1",
                        "typeString": "int_const 31536000"
                      }
                    },
                    "src": "5929:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5905:86:1"
                },
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "rewardspartoOfPool",
                      "nameLocation": "6010:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "6002:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6002:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 486,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6002:26:1"
                },
                {
                  "assignments": [
                    488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 488,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "6047:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "6039:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6039:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 493,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 489,
                        "name": "stakingTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "6051:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                        }
                      },
                      "id": 491,
                      "indexExpression": {
                        "id": 490,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "6064:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6051:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                        "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6051:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6039:39:1"
                },
                {
                  "assignments": [
                    495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 495,
                      "mutability": "mutable",
                      "name": "blockIndex",
                      "nameLocation": "6097:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "6089:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 494,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6089:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6089:18:1"
                },
                {
                  "body": {
                    "id": 527,
                    "nodeType": "Block",
                    "src": "6150:199:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 507,
                                  "name": "stakingTimes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "6187:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                  }
                                },
                                "id": 509,
                                "indexExpression": {
                                  "id": 508,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "6200:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6187:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                  "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                }
                              },
                              "id": 511,
                              "indexExpression": {
                                "id": 510,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
                                "src": "6208:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6187:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                "typeString": "struct Staking.majStackingPool storage ref"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "blockDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "6187:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 513,
                                  "name": "stakers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "6241:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                  }
                                },
                                "id": 515,
                                "indexExpression": {
                                  "id": 514,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "6249:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6241:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                  "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                }
                              },
                              "id": 518,
                              "indexExpression": {
                                "expression": {
                                  "id": 516,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "6257:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6257:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6241:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$49_storage",
                                "typeString": "struct Staking.Staker storage ref"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48,
                            "src": "6241:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6187:86:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 526,
                        "nodeType": "IfStatement",
                        "src": "6165:173:1",
                        "trueBody": {
                          "id": 525,
                          "nodeType": "Block",
                          "src": "6289:49:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 521,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 495,
                                  "src": "6308:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 522,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 498,
                                  "src": "6321:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6308:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 524,
                              "nodeType": "ExpressionStatement",
                              "src": "6308:14:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 501,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "6138:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 502,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "6142:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6138:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 528,
                  "initializationExpression": {
                    "assignments": [
                      498
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 498,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6131:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "6123:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 497,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6123:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 500,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6135:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6123:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6145:3:1",
                      "subExpression": {
                        "id": 504,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "6145:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 506,
                    "nodeType": "ExpressionStatement",
                    "src": "6145:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6118:231:1"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 529,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "6365:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                        }
                      },
                      "id": 531,
                      "indexExpression": {
                        "id": 530,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "6371:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6365:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$39_storage",
                        "typeString": "struct Staking.Token storage ref"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activePool",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "6365:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "7212:854:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 632,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "7231:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7236:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7231:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 732,
                          "nodeType": "Block",
                          "src": "7382:673:1",
                          "statements": [
                            {
                              "body": {
                                "id": 699,
                                "nodeType": "Block",
                                "src": "7446:330:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 697,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 664,
                                        "name": "rewardspartoOfPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 485,
                                        "src": "7469:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 696,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 688,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 679,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 665,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 67,
                                                            "src": "7518:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 667,
                                                          "indexExpression": {
                                                            "id": 666,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 443,
                                                            "src": "7531:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "7518:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                            "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 671,
                                                        "indexExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 670,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 668,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 653,
                                                            "src": "7539:1:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "+",
                                                          "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 669,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "7543:1:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_1_by_1",
                                                              "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                          },
                                                          "src": "7539:5:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "7518:27:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                          "typeString": "struct Staking.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 672,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 58,
                                                      "src": "7518:37:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 673,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 67,
                                                            "src": "7587:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 675,
                                                          "indexExpression": {
                                                            "id": 674,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 443,
                                                            "src": "7600:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "7587:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                            "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 677,
                                                        "indexExpression": {
                                                          "id": 676,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 653,
                                                          "src": "7608:1:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "7587:23:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                          "typeString": "struct Staking.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 678,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 58,
                                                      "src": "7587:33:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "7518:102:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 680,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "7517:104:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 681,
                                                      "name": "stakers",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 56,
                                                      "src": "7653:7:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                        "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                                      }
                                                    },
                                                    "id": 683,
                                                    "indexExpression": {
                                                      "id": 682,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 443,
                                                      "src": "7661:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "7653:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                                      "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                                    }
                                                  },
                                                  "id": 686,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 684,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "7669:3:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 685,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "7669:10:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "7653:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Staker_$49_storage",
                                                    "typeString": "struct Staking.Staker storage ref"
                                                  }
                                                },
                                                "id": 687,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 46,
                                                "src": "7653:34:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              },
                                              "src": "7517:170:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 689,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "7516:172:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 690,
                                                "name": "stakingTimes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 67,
                                                "src": "7716:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                  "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                }
                                              },
                                              "id": 692,
                                              "indexExpression": {
                                                "id": 691,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 443,
                                                "src": "7729:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "7716:20:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                              }
                                            },
                                            "id": 694,
                                            "indexExpression": {
                                              "id": 693,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 653,
                                              "src": "7737:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7716:23:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                              "typeString": "struct Staking.majStackingPool storage ref"
                                            }
                                          },
                                          "id": 695,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "stakingTotalPool",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 60,
                                          "src": "7716:40:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "7516:240:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7469:287:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 698,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7469:287:1"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 656,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 653,
                                  "src": "7430:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 657,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 488,
                                    "src": "7434:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7438:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "7434:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7430:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 700,
                              "initializationExpression": {
                                "assignments": [
                                  653
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 653,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "7414:1:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 700,
                                    "src": "7406:9:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 652,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7406:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 655,
                                "initialValue": {
                                  "id": 654,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 495,
                                  "src": "7418:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "7406:22:1"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "7441:3:1",
                                  "subExpression": {
                                    "id": 661,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 653,
                                    "src": "7441:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 663,
                                "nodeType": "ExpressionStatement",
                                "src": "7441:3:1"
                              },
                              "nodeType": "ForStatement",
                              "src": "7401:375:1"
                            },
                            {
                              "expression": {
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 701,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "7794:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 723,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 714,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 702,
                                                    "name": "pools",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 44,
                                                    "src": "7839:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                                      "typeString": "mapping(address => struct Staking.Token storage ref)"
                                                    }
                                                  },
                                                  "id": 704,
                                                  "indexExpression": {
                                                    "id": 703,
                                                    "name": "_token",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 443,
                                                    "src": "7845:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "7839:13:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Token_$39_storage",
                                                    "typeString": "struct Staking.Token storage ref"
                                                  }
                                                },
                                                "id": 705,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "dateStop",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 34,
                                                "src": "7839:22:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 706,
                                                      "name": "stakingTimes",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 67,
                                                      "src": "7889:12:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                        "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                      }
                                                    },
                                                    "id": 708,
                                                    "indexExpression": {
                                                      "id": 707,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 443,
                                                      "src": "7902:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "7889:20:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                      "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 712,
                                                  "indexExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 711,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 709,
                                                      "name": "x",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 488,
                                                      "src": "7910:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "hexValue": "31",
                                                      "id": 710,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "7914:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "src": "7910:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "7889:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                    "typeString": "struct Staking.majStackingPool storage ref"
                                                  }
                                                },
                                                "id": 713,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blockDate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 58,
                                                "src": "7889:37:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "7839:87:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 715,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "7838:89:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 716,
                                                "name": "stakers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 56,
                                                "src": "7955:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                  "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                                }
                                              },
                                              "id": 718,
                                              "indexExpression": {
                                                "id": 717,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 443,
                                                "src": "7963:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "7955:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                                "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                              }
                                            },
                                            "id": 721,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 719,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "7971:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 720,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "7971:10:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7955:27:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Staker_$49_storage",
                                              "typeString": "struct Staking.Staker storage ref"
                                            }
                                          },
                                          "id": 722,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 46,
                                          "src": "7955:34:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "7838:151:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 724,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7837:153:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 725,
                                        "name": "pools",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44,
                                        "src": "8014:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                                        }
                                      },
                                      "id": 727,
                                      "indexExpression": {
                                        "id": 726,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 443,
                                        "src": "8020:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8014:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$39_storage",
                                        "typeString": "struct Staking.Token storage ref"
                                      }
                                    },
                                    "id": 728,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "8014:25:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "7837:202:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7794:245:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 731,
                              "nodeType": "ExpressionStatement",
                              "src": "7794:245:1"
                            }
                          ]
                        },
                        "id": 733,
                        "nodeType": "IfStatement",
                        "src": "7227:828:1",
                        "trueBody": {
                          "id": 651,
                          "nodeType": "Block",
                          "src": "7239:137:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 635,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "7258:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 647,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 636,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 44,
                                            "src": "7281:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                                            }
                                          },
                                          "id": 638,
                                          "indexExpression": {
                                            "id": 637,
                                            "name": "_token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 443,
                                            "src": "7287:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7281:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Token_$39_storage",
                                            "typeString": "struct Staking.Token storage ref"
                                          }
                                        },
                                        "id": 639,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "dateStop",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 34,
                                        "src": "7281:22:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 640,
                                              "name": "stakers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 56,
                                              "src": "7327:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                              }
                                            },
                                            "id": 642,
                                            "indexExpression": {
                                              "id": 641,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 443,
                                              "src": "7335:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7327:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                              "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                            }
                                          },
                                          "id": 645,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 643,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "7343:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 644,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "7343:10:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7327:27:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$49_storage",
                                            "typeString": "struct Staking.Staker storage ref"
                                          }
                                        },
                                        "id": 646,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "date",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "7327:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7281:78:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 648,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7280:80:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7258:102:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 650,
                              "nodeType": "ExpressionStatement",
                              "src": "7258:102:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 735,
                  "nodeType": "IfStatement",
                  "src": "6361:1705:1",
                  "trueBody": {
                    "id": 631,
                    "nodeType": "Block",
                    "src": "6391:815:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 533,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "6410:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6415:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6410:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 629,
                          "nodeType": "Block",
                          "src": "6554:641:1",
                          "statements": [
                            {
                              "body": {
                                "id": 598,
                                "nodeType": "Block",
                                "src": "6618:330:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 596,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 563,
                                        "name": "rewardspartoOfPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 485,
                                        "src": "6641:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 595,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 587,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 578,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 564,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 67,
                                                            "src": "6690:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 566,
                                                          "indexExpression": {
                                                            "id": 565,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 443,
                                                            "src": "6703:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "6690:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                            "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 570,
                                                        "indexExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 569,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 567,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 552,
                                                            "src": "6711:1:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "+",
                                                          "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 568,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6715:1:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_1_by_1",
                                                              "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                          },
                                                          "src": "6711:5:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6690:27:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                          "typeString": "struct Staking.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 571,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 58,
                                                      "src": "6690:37:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 572,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 67,
                                                            "src": "6759:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 574,
                                                          "indexExpression": {
                                                            "id": 573,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 443,
                                                            "src": "6772:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "6759:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                            "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 576,
                                                        "indexExpression": {
                                                          "id": 575,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 552,
                                                          "src": "6780:1:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6759:23:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                          "typeString": "struct Staking.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 577,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 58,
                                                      "src": "6759:33:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "6690:102:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 579,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "6689:104:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 580,
                                                      "name": "stakers",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 56,
                                                      "src": "6825:7:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                        "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                                      }
                                                    },
                                                    "id": 582,
                                                    "indexExpression": {
                                                      "id": 581,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 443,
                                                      "src": "6833:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6825:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                                      "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                                    }
                                                  },
                                                  "id": 585,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 583,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "6841:3:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 584,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "6841:10:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "6825:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Staker_$49_storage",
                                                    "typeString": "struct Staking.Staker storage ref"
                                                  }
                                                },
                                                "id": 586,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 46,
                                                "src": "6825:34:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              },
                                              "src": "6689:170:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 588,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "6688:172:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 589,
                                                "name": "stakingTimes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 67,
                                                "src": "6888:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                  "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                }
                                              },
                                              "id": 591,
                                              "indexExpression": {
                                                "id": 590,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 443,
                                                "src": "6901:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "6888:20:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                              }
                                            },
                                            "id": 593,
                                            "indexExpression": {
                                              "id": 592,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 552,
                                              "src": "6909:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6888:23:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                              "typeString": "struct Staking.majStackingPool storage ref"
                                            }
                                          },
                                          "id": 594,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "stakingTotalPool",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 60,
                                          "src": "6888:40:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "6688:240:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6641:287:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 597,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6641:287:1"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 555,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 552,
                                  "src": "6602:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 556,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 488,
                                    "src": "6606:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6610:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6606:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6602:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 599,
                              "initializationExpression": {
                                "assignments": [
                                  552
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 552,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "6586:1:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 599,
                                    "src": "6578:9:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 551,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6578:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 554,
                                "initialValue": {
                                  "id": 553,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 495,
                                  "src": "6590:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "6578:22:1"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "6613:3:1",
                                  "subExpression": {
                                    "id": 560,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 552,
                                    "src": "6613:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 562,
                                "nodeType": "ExpressionStatement",
                                "src": "6613:3:1"
                              },
                              "nodeType": "ForStatement",
                              "src": "6573:375:1"
                            },
                            {
                              "expression": {
                                "id": 627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 600,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "6966:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 620,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 611,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 601,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967292,
                                                  "src": "7011:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 602,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "7011:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 603,
                                                      "name": "stakingTimes",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 67,
                                                      "src": "7029:12:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                        "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                      }
                                                    },
                                                    "id": 605,
                                                    "indexExpression": {
                                                      "id": 604,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 443,
                                                      "src": "7042:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "7029:20:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                      "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 609,
                                                  "indexExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 608,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 606,
                                                      "name": "x",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 488,
                                                      "src": "7050:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "hexValue": "31",
                                                      "id": 607,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "7054:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "src": "7050:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "7029:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                    "typeString": "struct Staking.majStackingPool storage ref"
                                                  }
                                                },
                                                "id": 610,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blockDate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 58,
                                                "src": "7029:37:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "7011:55:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 612,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "7010:57:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 613,
                                                "name": "stakers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 56,
                                                "src": "7095:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                  "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                                }
                                              },
                                              "id": 615,
                                              "indexExpression": {
                                                "id": 614,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 443,
                                                "src": "7103:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "7095:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                                "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                              }
                                            },
                                            "id": 618,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 616,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "7111:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 617,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "7111:10:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7095:27:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Staker_$49_storage",
                                              "typeString": "struct Staking.Staker storage ref"
                                            }
                                          },
                                          "id": 619,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 46,
                                          "src": "7095:34:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "7010:119:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 621,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7009:121:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 622,
                                        "name": "pools",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44,
                                        "src": "7154:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                                        }
                                      },
                                      "id": 624,
                                      "indexExpression": {
                                        "id": 623,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 443,
                                        "src": "7160:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7154:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$39_storage",
                                        "typeString": "struct Staking.Token storage ref"
                                      }
                                    },
                                    "id": 625,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "7154:25:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "7009:170:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6966:213:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 628,
                              "nodeType": "ExpressionStatement",
                              "src": "6966:213:1"
                            }
                          ]
                        },
                        "id": 630,
                        "nodeType": "IfStatement",
                        "src": "6406:789:1",
                        "trueBody": {
                          "id": 550,
                          "nodeType": "Block",
                          "src": "6418:130:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 536,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "6437:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 537,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "6460:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 538,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "6460:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 539,
                                              "name": "stakers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 56,
                                              "src": "6499:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                              }
                                            },
                                            "id": 541,
                                            "indexExpression": {
                                              "id": 540,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 443,
                                              "src": "6507:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6499:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                              "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                            }
                                          },
                                          "id": 544,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 542,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "6515:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 543,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "6515:10:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6499:27:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$49_storage",
                                            "typeString": "struct Staking.Staker storage ref"
                                          }
                                        },
                                        "id": 545,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "date",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "6499:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6460:71:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 547,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6459:73:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6437:95:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 549,
                              "nodeType": "ExpressionStatement",
                              "src": "6437:95:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 736,
                        "name": "rewardspartoOfPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "8085:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 737,
                        "name": "tokenPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "8106:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8085:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 739,
                      "name": "aprPerSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "8119:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8085:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 447,
                  "id": 741,
                  "nodeType": "Return",
                  "src": "8078:54:1"
                }
              ]
            },
            "documentation": {
              "id": 441,
              "nodeType": "StructuredDocumentation",
              "src": "5492:190:1",
              "text": " @notice Calculate rewards\n @dev tokenPrice use Chainlink Oracle\n @param _token is the token of pool to calculate rewards\n @return rewards in dollars"
            },
            "functionSelector": "d82e3962",
            "id": 743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateReward",
            "nameLocation": "5697:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5721:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "5713:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5713:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5712:16:1"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "5750:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5750:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5749:9:1"
            },
            "scope": 838,
            "src": "5688:2452:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "8372:299:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 751,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "8400:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 750,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "8391:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8391:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8409:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        },
                        "value": "You are not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        }
                      ],
                      "id": 749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8383:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8383:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "8383:49:1"
                },
                {
                  "assignments": [
                    757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 757,
                      "mutability": "mutable",
                      "name": "amoutToClaim",
                      "nameLocation": "8453:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 781,
                      "src": "8445:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 756,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8445:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 763,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 759,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "8484:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 758,
                        "name": "calculateReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "8468:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8468:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 761,
                      "name": "priceTokenRewardInDollar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "8507:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8468:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8445:86:1"
                },
                {
                  "expression": {
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 764,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "8542:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 768,
                          "indexExpression": {
                            "id": 765,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "8550:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8542:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 769,
                        "indexExpression": {
                          "expression": {
                            "id": 766,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8558:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8558:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8542:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 770,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "8542:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 771,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "8577:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8577:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8542:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "8542:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 776,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8638:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8638:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 778,
                        "name": "amoutToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "8650:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 775,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "8632:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8632:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "8632:31:1"
                }
              ]
            },
            "documentation": {
              "id": 744,
              "nodeType": "StructuredDocumentation",
              "src": "8148:173:1",
              "text": " @notice Claim your rewards\n @dev Available only for stakers who have rewards to claim\n @param _token is token of the pool to claim rewards"
            },
            "functionSelector": "ef5cfb8c",
            "id": 782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "8336:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8357:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "8349:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8349:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8348:16:1"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8372:0:1"
            },
            "scope": 838,
            "src": "8327:344:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 798,
              "nodeType": "Block",
              "src": "8888:60:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 790,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "8906:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                          }
                        },
                        "id": 792,
                        "indexExpression": {
                          "id": 791,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "8914:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8906:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                          "typeString": "mapping(address => struct Staking.Staker storage ref)"
                        }
                      },
                      "id": 795,
                      "indexExpression": {
                        "expression": {
                          "id": 793,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8922:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8922:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8906:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$49_storage",
                        "typeString": "struct Staking.Staker storage ref"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 46,
                    "src": "8906:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 789,
                  "id": 797,
                  "nodeType": "Return",
                  "src": "8899:41:1"
                }
              ]
            },
            "documentation": {
              "id": 783,
              "nodeType": "StructuredDocumentation",
              "src": "8679:135:1",
              "text": " @notice Check amount of a stacked pool from msg.sender\n @param _token is address token of the pool to check"
            },
            "functionSelector": "11c88633",
            "id": 799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaking",
            "nameLocation": "8829:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8848:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "8840:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8840:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8839:16:1"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "8879:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8879:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8878:9:1"
            },
            "scope": 838,
            "src": "8820:128:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "9204:123:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 807,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9219:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 809,
                          "indexExpression": {
                            "id": 808,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 802,
                            "src": "9227:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9219:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 812,
                        "indexExpression": {
                          "expression": {
                            "id": 810,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9235:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9235:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9219:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "9219:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9256:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9219:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 819,
                  "nodeType": "IfStatement",
                  "src": "9215:82:1",
                  "trueBody": {
                    "id": 818,
                    "nodeType": "Block",
                    "src": "9259:38:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9281:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 806,
                        "id": 817,
                        "nodeType": "Return",
                        "src": "9274:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9314:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 806,
                  "id": 821,
                  "nodeType": "Return",
                  "src": "9307:12:1"
                }
              ]
            },
            "documentation": {
              "id": 800,
              "nodeType": "StructuredDocumentation",
              "src": "8956:181:1",
              "text": " @notice Check if msg.sender is a staker of a pool\n @dev Can be used to show the staked pools on the Dapp\n @param _token is address token of a pool"
            },
            "functionSelector": "6f1e8533",
            "id": 823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nameLocation": "9152:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "9169:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "9161:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9161:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9160:16:1"
            },
            "returnParameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "9198:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9198:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9197:6:1"
            },
            "scope": 838,
            "src": "9143:184:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "9518:51:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 831,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "9536:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                        }
                      },
                      "id": 833,
                      "indexExpression": {
                        "id": 832,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 826,
                        "src": "9542:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9536:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$39_storage",
                        "typeString": "struct Staking.Token storage ref"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "totalStakes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 38,
                    "src": "9536:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 830,
                  "id": 835,
                  "nodeType": "Return",
                  "src": "9529:32:1"
                }
              ]
            },
            "documentation": {
              "id": 824,
              "nodeType": "StructuredDocumentation",
              "src": "9335:104:1",
              "text": " @notice Check total amount of a stacked pool\n @param _token is address token"
            },
            "functionSelector": "7ae15a73",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStaking",
            "nameLocation": "9454:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 826,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "9478:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "9470:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9470:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9469:16:1"
            },
            "returnParameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "9509:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9509:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9508:9:1"
            },
            "scope": 838,
            "src": "9445:124:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 839,
        "src": "425:9149:1",
        "usedErrors": []
      }
    ],
    "src": "33:9541:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "APR",
              "type": "uint256"
            }
          ],
          "name": "NewPool",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x63602d0ecc7b3a0ef7ff1a116e23056662d64280355ba8031b6d0d767c4b4458": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Stake",
          "type": "event"
        },
        "0x95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "StopPool",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x18edd09e80386cd99df397e2e0d87d2bb259423eae08645e776321a36fe680ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Unstake",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x47115A5299CBCe8EFb0fA08A4C02A2C46F037Ec4",
      "transactionHash": "0x0dbf6a7d0d23f291a50c01a7b616812076ae8420da7f978275275e2e527d44e5"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x527d1881d70Ef900EBdDD48d8ca43d61a65f959b",
      "transactionHash": "0x776bddf8c4f6cd47fe933da753ff3f87ac7c739bc9731803dd81ebddf19a844e"
    },
    "1659385803238": {
      "events": {},
      "links": {},
      "address": "0x19D2E914B62A27b98674dA427690Ed970ABC9732",
      "transactionHash": "0xb3f53be62845ed22848367fbb1e6fad75572a120989ae0d761707ef24236d6f6"
    },
    "1659387315543": {
      "events": {},
      "links": {},
      "address": "0x1733aBC3B556Bfb08C36760c9531E84422Fb52d8",
      "transactionHash": "0x2393fb83978aebdb71669a586da4490b8a11466cd3c43a6adc45c19023fa6163"
    },
    "1659625851725": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "APR",
              "type": "uint256"
            }
          ],
          "name": "NewPool",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Stake",
          "type": "event"
        },
        "0x95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "StopPool",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xbd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Unstake",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9a5De9e801f55EDdFCAB62A390a49624d8BC3bC9",
      "transactionHash": "0x57632a6a8a5b18fc001b532e4ac81e2cf30162adb16a8582a75a7f127554c096"
    },
    "1659633794916": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "APR",
              "type": "uint256"
            }
          ],
          "name": "NewPool",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Stake",
          "type": "event"
        },
        "0x95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "StopPool",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xbd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Unstake",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB2AB02eC967f9F49E09520be87aa343Da1F51979",
      "transactionHash": "0x442124b184fcefc982301907a59404621afeceeb00b41e61e35e45399f3b48fe"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-08-04T19:51:29.758Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Anthony - Etienne - Jean-Baptiste",
    "kind": "dev",
    "methods": {
      "addPool(address,uint128,address)": {
        "details": "Available only for owner",
        "params": {
          "_addressPrice": "is Chainlink pool",
          "_apr": "is APR of the pool",
          "_token": "is token address"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "calculateReward(address)": {
        "details": "tokenPrice use Chainlink Oracle",
        "params": {
          "_token": "is the token of pool to calculate rewards"
        },
        "returns": {
          "_0": "rewards in dollars"
        }
      },
      "claimRewards(address)": {
        "details": "Available only for stakers who have rewards to claim",
        "params": {
          "_token": "is token of the pool to claim rewards"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getStaking(address)": {
        "params": {
          "_token": "is address token of the pool to check"
        }
      },
      "getTotalStaking(address)": {
        "params": {
          "_token": "is address token"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isStaker(address)": {
        "details": "Can be used to show the staked pools on the Dapp",
        "params": {
          "_token": "is address token of a pool"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake(uint128,address)": {
        "details": "Emit event after stake",
        "params": {
          "_amount": "to stake",
          "_token": "to stake"
        }
      },
      "stopPool(address)": {
        "details": "Available only for owner",
        "params": {
          "_token": "is token address"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint128,address)": {
        "params": {
          "_amount": "number of token to unstake",
          "_token": "to unstake"
        }
      }
    },
    "title": "Staking : a Staking Plateform !",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addPool(address,uint128,address)": {
        "notice": "Make available token address to add pool"
      },
      "calculateReward(address)": {
        "notice": "Calculate rewards"
      },
      "claimRewards(address)": {
        "notice": "Claim your rewards"
      },
      "getStaking(address)": {
        "notice": "Check amount of a stacked pool from msg.sender"
      },
      "getTotalStaking(address)": {
        "notice": "Check total amount of a stacked pool"
      },
      "isStaker(address)": {
        "notice": "Check if msg.sender is a staker of a pool"
      },
      "stake(uint128,address)": {
        "notice": "Stake fund into this contract"
      },
      "stopPool(address)": {
        "notice": "disable a pool"
      },
      "withdraw(uint128,address)": {
        "notice": "Withdraw fund into this contract"
      }
    },
    "version": 1
  }
}