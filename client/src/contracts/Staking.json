{
  "contractName": "Staking",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "APR",
          "type": "uint256"
        }
      ],
      "name": "NewPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "StopPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingTimes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockDate",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "stakingTotalPool",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_apr",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_addressPrice",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stopPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "calculateReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getStaking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isStaker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTotalStaking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"APR\",\"type\":\"uint256\"}],\"name\":\"NewPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"StopPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_apr\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_addressPrice\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTotalStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"stakingTotalPool\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"stopPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Anthony - Etienne - Jean-Baptiste\",\"kind\":\"dev\",\"methods\":{\"addPool(address,uint128,address)\":{\"details\":\"Available only for owner\",\"params\":{\"_addressPrice\":\"is Chainlink pool\",\"_apr\":\"is APR of the pool\",\"_token\":\"is token address\"}},\"addStake(uint128,address)\":{\"params\":{\"_amount\":\"is the amount of token to add\",\"_token\":\"is address token of the pool\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculateReward(address)\":{\"details\":\"tokenPrice use Chainlink Oracle\",\"params\":{\"_token\":\"is the token of pool to calculate rewards\"},\"returns\":{\"_0\":\"rewards in dollars\"}},\"claimRewards(address)\":{\"details\":\"Available only for stakers who have rewards to claim\",\"params\":{\"_token\":\"is token of the pool to claim rewards\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getStaking(address)\":{\"params\":{\"_token\":\"is address token of the pool to check\"}},\"getTotalStaking(address)\":{\"params\":{\"_token\":\"is address token\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isStaker(address)\":{\"details\":\"Can be used to show the staked pools on the Dapp\",\"params\":{\"_token\":\"is address token of a pool\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint128,address)\":{\"details\":\"Emit event after stake\",\"params\":{\"_amount\":\"to stake\",\"_token\":\"to stake\"}},\"stopPool(address)\":{\"details\":\"Available only for owner\",\"params\":{\"_token\":\"is token address\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint128,address)\":{\"params\":{\"_amount\":\"number of token to unstake\",\"_token\":\"to unstake\"}}},\"title\":\"Staking : a Staking Plateform !\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPool(address,uint128,address)\":{\"notice\":\"Make available token address to add pool\"},\"addStake(uint128,address)\":{\"notice\":\"Add more token to a staking pool\"},\"calculateReward(address)\":{\"notice\":\"Calculate rewards\"},\"claimRewards(address)\":{\"notice\":\"Claim your rewards\"},\"getStaking(address)\":{\"notice\":\"Check amount of a stacked pool from msg.sender\"},\"getTotalStaking(address)\":{\"notice\":\"Check total amount of a stacked pool\"},\"isStaker(address)\":{\"notice\":\"Check if msg.sender is a staker of a pool\"},\"stake(uint128,address)\":{\"notice\":\"Stake fund into this contract\"},\"stopPool(address)\":{\"notice\":\"disable a pool\"},\"withdraw(uint128,address)\":{\"notice\":\"Withdraw fund into this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CrowdV.sol\":{\"keccak256\":\"0x83e5441dea47905ccd623efc38ece21b10bad9c1a31875f73e57a27a3d779ad7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f732c5aacd4f563ef956edcf53e66cdaffe2a6bd6d39813c9864212e9cca2300\",\"dweb:/ipfs/Qmb2oxmWfayHQoPemswnHeA8zk86G3X8Daukz3tY2xcfzB\"]},\"project:/contracts/Staking.sol\":{\"keccak256\":\"0x5e43f3bfac5040ea177e9240f99c3c84da5ec9194375882349c50d4123d47514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c3b34b23bc0873ffd5356f31f3634544e6d9dc1b24e3632c816943486b718b\",\"dweb:/ipfs/QmUc3ZVkjW7nyjF76KKEFzJ6BJY25s7q8bPsvgqwa1Fqvc\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x608060405260016006553480156200001657600080fd5b506040518060400160405280600681526020017f43726f77645600000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4352445600000000000000000000000000000000000000000000000000000000815250620000a362000097620000dd60201b60201c565b620000e560201b60201c565b8160049080519060200190620000bb929190620001a9565b508060059080519060200190620000d4929190620001a9565b505050620002bd565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b79062000288565b90600052602060002090601f016020900481019282620001db576000855562000227565b82601f10620001f657805160ff191683800117855562000227565b8280016001018555821562000227579182015b828111156200022657825182559160200191906001019062000209565b5b5090506200023691906200023a565b5090565b5b80821115620002555760008160009055506001016200023b565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002a157607f821691505b602082108103620002b757620002b662000259565b5b50919050565b61487680620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de578063a457c2d711610097578063d82e396211610071578063d82e396214610485578063dd62ed3e146104b5578063ef5cfb8c146104e5578063f2fde38b1461050157610173565b8063a457c2d714610409578063a9059cbb14610439578063b166dfdd1461046957610173565b806370a0823114610347578063715018a61461037757806377cff6cf146103815780637ae15a731461039d5780638da5cb5b146103cd57806395d89b41146103eb57610173565b806323b872dd1161013057806323b872dd1461024c5780632bf8f7561461027c578063313ce5671461029857806339509351146102b65780636f005df3146102e65780636f1e85331461031757610173565b806306fdde0314610178578063095ea7b31461019657806311c88633146101c6578063156e28b8146101f657806318160ddd146102125780631d9b078314610230575b600080fd5b61018061051d565b60405161018d91906135f4565b60405180910390f35b6101b060048036038101906101ab91906136af565b6105af565b6040516101bd919061370a565b60405180910390f35b6101e060048036038101906101db9190613725565b6105d2565b6040516101ed9190613761565b60405180910390f35b610210600480360381019061020b9190613725565b610689565b005b61021a6107fe565b6040516102279190613761565b60405180910390f35b61024a600480360381019061024591906137c4565b610808565b005b61026660048036038101906102619190613804565b610e0f565b604051610273919061370a565b60405180910390f35b61029660048036038101906102919190613857565b610e3e565b005b6102a0611069565b6040516102ad91906138c6565b60405180910390f35b6102d060048036038101906102cb91906136af565b611072565b6040516102dd919061370a565b60405180910390f35b61030060048036038101906102fb91906136af565b6110a9565b60405161030e9291906138f0565b60405180910390f35b610331600480360381019061032c9190613725565b611106565b60405161033e919061370a565b60405180910390f35b610361600480360381019061035c9190613725565b6111d0565b60405161036e9190613761565b60405180910390f35b61037f611219565b005b61039b600480360381019061039691906137c4565b61122d565b005b6103b760048036038101906103b29190613725565b611734565b6040516103c49190613761565b60405180910390f35b6103d56117ae565b6040516103e29190613928565b60405180910390f35b6103f36117d7565b60405161040091906135f4565b60405180910390f35b610423600480360381019061041e91906136af565b611869565b604051610430919061370a565b60405180910390f35b610453600480360381019061044e91906136af565b6118e0565b604051610460919061370a565b60405180910390f35b610483600480360381019061047e91906137c4565b611903565b005b61049f600480360381019061049a9190613725565b611e11565b6040516104ac9190613761565b60405180910390f35b6104cf60048036038101906104ca9190613943565b612b4b565b6040516104dc9190613761565b60405180910390f35b6104ff60048036038101906104fa9190613725565b612bd2565b005b61051b60048036038101906105169190613725565b612cc6565b005b60606004805461052c906139b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610558906139b2565b80156105a55780601f1061057a576101008083540402835291602001916105a5565b820191906000526020600020905b81548152906001019060200180831161058857829003601f168201915b5050505050905090565b6000806105ba612d49565b90506105c7818585612d51565b600191505092915050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b610691612f1a565b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790613a55565b60405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555042600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d481426040516107f3929190613a75565b60405180910390a150565b6000600354905090565b61081181611106565b610850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084790613aea565b60405180910390fd5b6000826fffffffffffffffffffffffffffffffff16116108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90613b7c565b60405180910390fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff1610156109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099e90613c0e565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90613c7a565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a73929190613cd5565b6020604051808303816000875af1158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab69190613d2a565b905080610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef90613da3565b60405180910390fd5b610b0182612bd2565b82600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff16610bab9190613df2565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000604051806040016040528042815260200185600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff16610c5e9190613df2565b6fffffffffffffffffffffffffffffffff168152509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505083600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160108282829054906101000a90046fffffffffffffffffffffffffffffffff16610d969190613df2565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507fbd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f333848642604051610e019493929190613e26565b60405180910390a150505050565b600080610e1a612d49565b9050610e27858285612f98565b610e32858585613024565b60019150509392505050565b610e46612f1a565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecd90613eb7565b60405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31838360405161105c929190613cd5565b60405180910390a1505050565b60006012905090565b60008061107d612d49565b905061109e81858561108f8589612b4b565b6110999190613ed7565b612d51565b600191505092915050565b600960205281600052604060002081815481106110c557600080fd5b9060005260206000209060020201600091509150508060000154908060010160009054906101000a90046fffffffffffffffffffffffffffffffff16905082565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1611156111c657600190506111cb565b600090505b919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611221612f1a565b61122b60006132a6565b565b61123681611106565b611275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126c90613aea565b60405180910390fd5b6000826fffffffffffffffffffffffffffffffff16116112ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c190613b7c565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16611359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135090613c7a565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161139893929190613f2d565b6020604051808303816000875af11580156113b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113db9190613d2a565b90508061141d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141490613da3565b60405180910390fd5b82600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff166114c79190613f64565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000604051806040016040528042815260200185600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff1661157a9190613f64565b6fffffffffffffffffffffffffffffffff168152509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505083600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160108282829054906101000a90046fffffffffffffffffffffffffffffffff166116b29190613f64565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506116f183612bd2565b7f1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca338486426040516117269493929190613e26565b60405180910390a150505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546117e6906139b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611812906139b2565b801561185f5780601f106118345761010080835404028352916020019161185f565b820191906000526020600020905b81548152906001019060200180831161184257829003601f168201915b5050505050905090565b600080611874612d49565b905060006118828286612b4b565b9050838110156118c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118be9061401c565b60405180910390fd5b6118d48286868403612d51565b60019250505092915050565b6000806118eb612d49565b90506118f8818585613024565b600191505092915050565b61190c81611106565b1561194c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194390614088565b60405180910390fd5b6000826fffffffffffffffffffffffffffffffff16116119a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199890613b7c565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16611a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2790613c7a565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401611a6f93929190613f2d565b6020604051808303816000875af1158015611a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab29190613d2a565b905080611af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aeb90613da3565b60405180910390fd5b6040518060400160405280846fffffffffffffffffffffffffffffffff16815260200142815250600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550602082015181600101559050506000604051806040016040528042815260200185600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff16611c609190613f64565b6fffffffffffffffffffffffffffffffff168152509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505083600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160108282829054906101000a90046fffffffffffffffffffffffffffffffff16611d989190613f64565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507f1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca33848642604051611e039493929190613e26565b60405180910390a150505050565b6000611e1c82611106565b611e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5290613aea565b60405180910390fd5b6000611ec8600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661336a565b905060006301e133806305f5e100600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a90046fffffffffffffffffffffffffffffffff16611f3f91906140a8565b611f499190614121565b6fffffffffffffffffffffffffffffffff169050600080600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600080600090505b828110156120b457600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061208657612085614152565b5b906000526020600020906002020160000154036120a1578091505b80806120ac90614181565b915050611fad565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156125d957600182036121af57600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261219d91906141c9565b836121a89190613ed7565b92506125d4565b60008190505b6001836121c291906141c9565b81101561241857600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061221a57612219614152565b5b906000526020600020906002020160010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061235957612358614152565b5b906000526020600020906002020160000154600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001856123b79190613ed7565b815481106123c8576123c7614152565b5b9060005260206000209060020201600001546123e491906141c9565b6123ee91906141fd565b6123f89190614257565b846124039190613ed7565b9350808061241090614181565b9150506121b5565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018561258491906141c9565b8154811061259557612594614152565b5b906000526020600020906002020160000154426125b291906141c9565b6125bc91906141fd565b6125c69190614257565b836125d19190613ed7565b92505b612b28565b600182036126c057600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546126ae91906141c9565b836126b99190613ed7565b9250612b27565b60008190505b6001836126d391906141c9565b81101561292957600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061272b5761272a614152565b5b906000526020600020906002020160010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061286a57612869614152565b5b906000526020600020906002020160000154600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001856128c89190613ed7565b815481106128d9576128d8614152565b5b9060005260206000209060020201600001546128f591906141c9565b6128ff91906141fd565b6129099190614257565b846129149190613ed7565b9350808061292190614181565b9150506126c6565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600185612a9591906141c9565b81548110612aa657612aa5614152565b5b906000526020600020906002020160000154600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154612b0591906141c9565b612b0f91906141fd565b612b199190614257565b83612b249190613ed7565b92505b5b838584612b3591906141fd565b612b3f91906141fd565b95505050505050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b612bdb81611106565b612c1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c1190613aea565b60405180910390fd5b6000600654612c2883611e11565b612c329190614257565b905042600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550612cc233826133f1565b5050565b612cce612f1a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d34906142fa565b60405180910390fd5b612d46816132a6565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db79061438c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e269061441e565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051612f0d9190613761565b60405180910390a3505050565b612f22612d49565b73ffffffffffffffffffffffffffffffffffffffff16612f406117ae565b73ffffffffffffffffffffffffffffffffffffffff1614612f96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f8d9061448a565b60405180910390fd5b565b6000612fa48484612b4b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461301e5781811015613010576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613007906144f6565b60405180910390fd5b61301d8484848403612d51565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603613093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161308a90614588565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613102576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130f99061461a565b60405180910390fd5b61310d838383613551565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015613194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161318b906146ac565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546132299190613ed7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161328d9190613761565b60405180910390a36132a0848484613556565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156133bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133e19190614759565b5050509150508092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161345790614820565b60405180910390fd5b61346c60008383613551565b806003600082825461347e9190613ed7565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546134d49190613ed7565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516135399190613761565b60405180910390a361354d60008383613556565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561359557808201518184015260208101905061357a565b838111156135a4576000848401525b50505050565b6000601f19601f8301169050919050565b60006135c68261355b565b6135d08185613566565b93506135e0818560208601613577565b6135e9816135aa565b840191505092915050565b6000602082019050818103600083015261360e81846135bb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006136468261361b565b9050919050565b6136568161363b565b811461366157600080fd5b50565b6000813590506136738161364d565b92915050565b6000819050919050565b61368c81613679565b811461369757600080fd5b50565b6000813590506136a981613683565b92915050565b600080604083850312156136c6576136c5613616565b5b60006136d485828601613664565b92505060206136e58582860161369a565b9150509250929050565b60008115159050919050565b613704816136ef565b82525050565b600060208201905061371f60008301846136fb565b92915050565b60006020828403121561373b5761373a613616565b5b600061374984828501613664565b91505092915050565b61375b81613679565b82525050565b60006020820190506137766000830184613752565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6137a18161377c565b81146137ac57600080fd5b50565b6000813590506137be81613798565b92915050565b600080604083850312156137db576137da613616565b5b60006137e9858286016137af565b92505060206137fa85828601613664565b9150509250929050565b60008060006060848603121561381d5761381c613616565b5b600061382b86828701613664565b935050602061383c86828701613664565b925050604061384d8682870161369a565b9150509250925092565b6000806000606084860312156138705761386f613616565b5b600061387e86828701613664565b935050602061388f868287016137af565b92505060406138a086828701613664565b9150509250925092565b600060ff82169050919050565b6138c0816138aa565b82525050565b60006020820190506138db60008301846138b7565b92915050565b6138ea8161377c565b82525050565b60006040820190506139056000830185613752565b61391260208301846138e1565b9392505050565b6139228161363b565b82525050565b600060208201905061393d6000830184613919565b92915050565b6000806040838503121561395a57613959613616565b5b600061396885828601613664565b925050602061397985828601613664565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806139ca57607f821691505b6020821081036139dd576139dc613983565b5b50919050565b7f506f6f6c206973206e6f7420616374697665206f7220646f65736e277420657860008201527f6973742e00000000000000000000000000000000000000000000000000000000602082015250565b6000613a3f602483613566565b9150613a4a826139e3565b604082019050919050565b60006020820190508181036000830152613a6e81613a32565b9050919050565b6000604082019050613a8a6000830185613919565b613a976020830184613752565b9392505050565b7f596f7520617265206e6f742061207374616b6572000000000000000000000000600082015250565b6000613ad4601483613566565b9150613adf82613a9e565b602082019050919050565b60006020820190508181036000830152613b0381613ac7565b9050919050565b7f54686520616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f2e000000000000000000000000000000000000000000000000000000602082015250565b6000613b66602583613566565b9150613b7182613b0a565b604082019050919050565b60006020820190508181036000830152613b9581613b59565b9050919050565b7f596f7520646f6e27742068617665207468697320616d6f756e74206f6620746f60008201527f6b656e0000000000000000000000000000000000000000000000000000000000602082015250565b6000613bf8602383613566565b9150613c0382613b9c565b604082019050919050565b60006020820190508181036000830152613c2781613beb565b9050919050565b7f5468697320746f6b656e2069736e277420617661696c61626c652e0000000000600082015250565b6000613c64601b83613566565b9150613c6f82613c2e565b602082019050919050565b60006020820190508181036000830152613c9381613c57565b9050919050565b6000819050919050565b6000613cbf613cba613cb58461377c565b613c9a565b613679565b9050919050565b613ccf81613ca4565b82525050565b6000604082019050613cea6000830185613919565b613cf76020830184613cc6565b9392505050565b613d07816136ef565b8114613d1257600080fd5b50565b600081519050613d2481613cfe565b92915050565b600060208284031215613d4057613d3f613616565b5b6000613d4e84828501613d15565b91505092915050565b7f5472616e736665722066726f6d206572726f7200000000000000000000000000600082015250565b6000613d8d601383613566565b9150613d9882613d57565b602082019050919050565b60006020820190508181036000830152613dbc81613d80565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613dfd8261377c565b9150613e088361377c565b925082821015613e1b57613e1a613dc3565b5b828203905092915050565b6000608082019050613e3b6000830187613919565b613e486020830186613919565b613e5560408301856138e1565b613e626060830184613752565b95945050505050565b7f5468697320746f6b656e20616c72656164792065786973742e00000000000000600082015250565b6000613ea1601983613566565b9150613eac82613e6b565b602082019050919050565b60006020820190508181036000830152613ed081613e94565b9050919050565b6000613ee282613679565b9150613eed83613679565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613f2257613f21613dc3565b5b828201905092915050565b6000606082019050613f426000830186613919565b613f4f6020830185613919565b613f5c6040830184613cc6565b949350505050565b6000613f6f8261377c565b9150613f7a8361377c565b9250826fffffffffffffffffffffffffffffffff03821115613f9f57613f9e613dc3565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000614006602583613566565b915061401182613faa565b604082019050919050565b6000602082019050818103600083015261403581613ff9565b9050919050565b7f596f7520616c7265616479207374616b65207468697320706f6f6c0000000000600082015250565b6000614072601b83613566565b915061407d8261403c565b602082019050919050565b600060208201905081810360008301526140a181614065565b9050919050565b60006140b38261377c565b91506140be8361377c565b9250816fffffffffffffffffffffffffffffffff04831182151516156140e7576140e6613dc3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061412c8261377c565b91506141378361377c565b925082614147576141466140f2565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061418c82613679565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036141be576141bd613dc3565b5b600182019050919050565b60006141d482613679565b91506141df83613679565b9250828210156141f2576141f1613dc3565b5b828203905092915050565b600061420882613679565b915061421383613679565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561424c5761424b613dc3565b5b828202905092915050565b600061426282613679565b915061426d83613679565b92508261427d5761427c6140f2565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006142e4602683613566565b91506142ef82614288565b604082019050919050565b60006020820190508181036000830152614313816142d7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000614376602483613566565b91506143818261431a565b604082019050919050565b600060208201905081810360008301526143a581614369565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000614408602283613566565b9150614413826143ac565b604082019050919050565b60006020820190508181036000830152614437816143fb565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000614474602083613566565b915061447f8261443e565b602082019050919050565b600060208201905081810360008301526144a381614467565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006144e0601d83613566565b91506144eb826144aa565b602082019050919050565b6000602082019050818103600083015261450f816144d3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000614572602583613566565b915061457d82614516565b604082019050919050565b600060208201905081810360008301526145a181614565565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000614604602383613566565b915061460f826145a8565b604082019050919050565b60006020820190508181036000830152614633816145f7565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000614696602683613566565b91506146a18261463a565b604082019050919050565b600060208201905081810360008301526146c581614689565b9050919050565b600069ffffffffffffffffffff82169050919050565b6146eb816146cc565b81146146f657600080fd5b50565b600081519050614708816146e2565b92915050565b6000819050919050565b6147218161470e565b811461472c57600080fd5b50565b60008151905061473e81614718565b92915050565b60008151905061475381613683565b92915050565b600080600080600060a0868803121561477557614774613616565b5b6000614783888289016146f9565b95505060206147948882890161472f565b94505060406147a588828901614744565b93505060606147b688828901614744565b92505060806147c7888289016146f9565b9150509295509295909350565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061480a601f83613566565b9150614815826147d4565b602082019050919050565b60006020820190508181036000830152614839816147fd565b905091905056fea26469706673582212207fa054f1c1a1c39ff53ba766ce72c2da9d8e8b12f7f37386a3962d59a37cfbf764736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de578063a457c2d711610097578063d82e396211610071578063d82e396214610485578063dd62ed3e146104b5578063ef5cfb8c146104e5578063f2fde38b1461050157610173565b8063a457c2d714610409578063a9059cbb14610439578063b166dfdd1461046957610173565b806370a0823114610347578063715018a61461037757806377cff6cf146103815780637ae15a731461039d5780638da5cb5b146103cd57806395d89b41146103eb57610173565b806323b872dd1161013057806323b872dd1461024c5780632bf8f7561461027c578063313ce5671461029857806339509351146102b65780636f005df3146102e65780636f1e85331461031757610173565b806306fdde0314610178578063095ea7b31461019657806311c88633146101c6578063156e28b8146101f657806318160ddd146102125780631d9b078314610230575b600080fd5b61018061051d565b60405161018d91906135f4565b60405180910390f35b6101b060048036038101906101ab91906136af565b6105af565b6040516101bd919061370a565b60405180910390f35b6101e060048036038101906101db9190613725565b6105d2565b6040516101ed9190613761565b60405180910390f35b610210600480360381019061020b9190613725565b610689565b005b61021a6107fe565b6040516102279190613761565b60405180910390f35b61024a600480360381019061024591906137c4565b610808565b005b61026660048036038101906102619190613804565b610e0f565b604051610273919061370a565b60405180910390f35b61029660048036038101906102919190613857565b610e3e565b005b6102a0611069565b6040516102ad91906138c6565b60405180910390f35b6102d060048036038101906102cb91906136af565b611072565b6040516102dd919061370a565b60405180910390f35b61030060048036038101906102fb91906136af565b6110a9565b60405161030e9291906138f0565b60405180910390f35b610331600480360381019061032c9190613725565b611106565b60405161033e919061370a565b60405180910390f35b610361600480360381019061035c9190613725565b6111d0565b60405161036e9190613761565b60405180910390f35b61037f611219565b005b61039b600480360381019061039691906137c4565b61122d565b005b6103b760048036038101906103b29190613725565b611734565b6040516103c49190613761565b60405180910390f35b6103d56117ae565b6040516103e29190613928565b60405180910390f35b6103f36117d7565b60405161040091906135f4565b60405180910390f35b610423600480360381019061041e91906136af565b611869565b604051610430919061370a565b60405180910390f35b610453600480360381019061044e91906136af565b6118e0565b604051610460919061370a565b60405180910390f35b610483600480360381019061047e91906137c4565b611903565b005b61049f600480360381019061049a9190613725565b611e11565b6040516104ac9190613761565b60405180910390f35b6104cf60048036038101906104ca9190613943565b612b4b565b6040516104dc9190613761565b60405180910390f35b6104ff60048036038101906104fa9190613725565b612bd2565b005b61051b60048036038101906105169190613725565b612cc6565b005b60606004805461052c906139b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610558906139b2565b80156105a55780601f1061057a576101008083540402835291602001916105a5565b820191906000526020600020905b81548152906001019060200180831161058857829003601f168201915b5050505050905090565b6000806105ba612d49565b90506105c7818585612d51565b600191505092915050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b610691612f1a565b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790613a55565b60405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555042600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d481426040516107f3929190613a75565b60405180910390a150565b6000600354905090565b61081181611106565b610850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084790613aea565b60405180910390fd5b6000826fffffffffffffffffffffffffffffffff16116108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90613b7c565b60405180910390fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff1610156109a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099e90613c0e565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90613c7a565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a73929190613cd5565b6020604051808303816000875af1158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab69190613d2a565b905080610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef90613da3565b60405180910390fd5b610b0182612bd2565b82600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff16610bab9190613df2565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000604051806040016040528042815260200185600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff16610c5e9190613df2565b6fffffffffffffffffffffffffffffffff168152509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505083600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160108282829054906101000a90046fffffffffffffffffffffffffffffffff16610d969190613df2565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507fbd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f333848642604051610e019493929190613e26565b60405180910390a150505050565b600080610e1a612d49565b9050610e27858285612f98565b610e32858585613024565b60019150509392505050565b610e46612f1a565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecd90613eb7565b60405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31838360405161105c929190613cd5565b60405180910390a1505050565b60006012905090565b60008061107d612d49565b905061109e81858561108f8589612b4b565b6110999190613ed7565b612d51565b600191505092915050565b600960205281600052604060002081815481106110c557600080fd5b9060005260206000209060020201600091509150508060000154908060010160009054906101000a90046fffffffffffffffffffffffffffffffff16905082565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1611156111c657600190506111cb565b600090505b919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611221612f1a565b61122b60006132a6565b565b61123681611106565b611275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126c90613aea565b60405180910390fd5b6000826fffffffffffffffffffffffffffffffff16116112ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c190613b7c565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16611359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135090613c7a565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161139893929190613f2d565b6020604051808303816000875af11580156113b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113db9190613d2a565b90508061141d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141490613da3565b60405180910390fd5b82600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff166114c79190613f64565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000604051806040016040528042815260200185600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff1661157a9190613f64565b6fffffffffffffffffffffffffffffffff168152509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505083600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160108282829054906101000a90046fffffffffffffffffffffffffffffffff166116b29190613f64565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506116f183612bd2565b7f1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca338486426040516117269493929190613e26565b60405180910390a150505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546117e6906139b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611812906139b2565b801561185f5780601f106118345761010080835404028352916020019161185f565b820191906000526020600020905b81548152906001019060200180831161184257829003601f168201915b5050505050905090565b600080611874612d49565b905060006118828286612b4b565b9050838110156118c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118be9061401c565b60405180910390fd5b6118d48286868403612d51565b60019250505092915050565b6000806118eb612d49565b90506118f8818585613024565b600191505092915050565b61190c81611106565b1561194c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194390614088565b60405180910390fd5b6000826fffffffffffffffffffffffffffffffff16116119a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199890613b7c565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16611a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2790613c7a565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401611a6f93929190613f2d565b6020604051808303816000875af1158015611a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab29190613d2a565b905080611af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aeb90613da3565b60405180910390fd5b6040518060400160405280846fffffffffffffffffffffffffffffffff16815260200142815250600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550602082015181600101559050506000604051806040016040528042815260200185600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff16611c609190613f64565b6fffffffffffffffffffffffffffffffff168152509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505083600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160108282829054906101000a90046fffffffffffffffffffffffffffffffff16611d989190613f64565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507f1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca33848642604051611e039493929190613e26565b60405180910390a150505050565b6000611e1c82611106565b611e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5290613aea565b60405180910390fd5b6000611ec8600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661336a565b905060006301e133806305f5e100600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a90046fffffffffffffffffffffffffffffffff16611f3f91906140a8565b611f499190614121565b6fffffffffffffffffffffffffffffffff169050600080600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600080600090505b828110156120b457600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061208657612085614152565b5b906000526020600020906002020160000154036120a1578091505b80806120ac90614181565b915050611fad565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156125d957600182036121af57600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261219d91906141c9565b836121a89190613ed7565b92506125d4565b60008190505b6001836121c291906141c9565b81101561241857600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061221a57612219614152565b5b906000526020600020906002020160010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061235957612358614152565b5b906000526020600020906002020160000154600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001856123b79190613ed7565b815481106123c8576123c7614152565b5b9060005260206000209060020201600001546123e491906141c9565b6123ee91906141fd565b6123f89190614257565b846124039190613ed7565b9350808061241090614181565b9150506121b5565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018561258491906141c9565b8154811061259557612594614152565b5b906000526020600020906002020160000154426125b291906141c9565b6125bc91906141fd565b6125c69190614257565b836125d19190613ed7565b92505b612b28565b600182036126c057600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546126ae91906141c9565b836126b99190613ed7565b9250612b27565b60008190505b6001836126d391906141c9565b81101561292957600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061272b5761272a614152565b5b906000526020600020906002020160010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061286a57612869614152565b5b906000526020600020906002020160000154600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001856128c89190613ed7565b815481106128d9576128d8614152565b5b9060005260206000209060020201600001546128f591906141c9565b6128ff91906141fd565b6129099190614257565b846129149190613ed7565b9350808061292190614181565b9150506126c6565b50600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16600960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600185612a9591906141c9565b81548110612aa657612aa5614152565b5b906000526020600020906002020160000154600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154612b0591906141c9565b612b0f91906141fd565b612b199190614257565b83612b249190613ed7565b92505b5b838584612b3591906141fd565b612b3f91906141fd565b95505050505050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b612bdb81611106565b612c1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c1190613aea565b60405180910390fd5b6000600654612c2883611e11565b612c329190614257565b905042600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550612cc233826133f1565b5050565b612cce612f1a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d34906142fa565b60405180910390fd5b612d46816132a6565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db79061438c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e269061441e565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051612f0d9190613761565b60405180910390a3505050565b612f22612d49565b73ffffffffffffffffffffffffffffffffffffffff16612f406117ae565b73ffffffffffffffffffffffffffffffffffffffff1614612f96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f8d9061448a565b60405180910390fd5b565b6000612fa48484612b4b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461301e5781811015613010576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613007906144f6565b60405180910390fd5b61301d8484848403612d51565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603613093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161308a90614588565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613102576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130f99061461a565b60405180910390fd5b61310d838383613551565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015613194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161318b906146ac565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546132299190613ed7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161328d9190613761565b60405180910390a36132a0848484613556565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156133bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133e19190614759565b5050509150508092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603613460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161345790614820565b60405180910390fd5b61346c60008383613551565b806003600082825461347e9190613ed7565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546134d49190613ed7565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516135399190613761565b60405180910390a361354d60008383613556565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561359557808201518184015260208101905061357a565b838111156135a4576000848401525b50505050565b6000601f19601f8301169050919050565b60006135c68261355b565b6135d08185613566565b93506135e0818560208601613577565b6135e9816135aa565b840191505092915050565b6000602082019050818103600083015261360e81846135bb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006136468261361b565b9050919050565b6136568161363b565b811461366157600080fd5b50565b6000813590506136738161364d565b92915050565b6000819050919050565b61368c81613679565b811461369757600080fd5b50565b6000813590506136a981613683565b92915050565b600080604083850312156136c6576136c5613616565b5b60006136d485828601613664565b92505060206136e58582860161369a565b9150509250929050565b60008115159050919050565b613704816136ef565b82525050565b600060208201905061371f60008301846136fb565b92915050565b60006020828403121561373b5761373a613616565b5b600061374984828501613664565b91505092915050565b61375b81613679565b82525050565b60006020820190506137766000830184613752565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6137a18161377c565b81146137ac57600080fd5b50565b6000813590506137be81613798565b92915050565b600080604083850312156137db576137da613616565b5b60006137e9858286016137af565b92505060206137fa85828601613664565b9150509250929050565b60008060006060848603121561381d5761381c613616565b5b600061382b86828701613664565b935050602061383c86828701613664565b925050604061384d8682870161369a565b9150509250925092565b6000806000606084860312156138705761386f613616565b5b600061387e86828701613664565b935050602061388f868287016137af565b92505060406138a086828701613664565b9150509250925092565b600060ff82169050919050565b6138c0816138aa565b82525050565b60006020820190506138db60008301846138b7565b92915050565b6138ea8161377c565b82525050565b60006040820190506139056000830185613752565b61391260208301846138e1565b9392505050565b6139228161363b565b82525050565b600060208201905061393d6000830184613919565b92915050565b6000806040838503121561395a57613959613616565b5b600061396885828601613664565b925050602061397985828601613664565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806139ca57607f821691505b6020821081036139dd576139dc613983565b5b50919050565b7f506f6f6c206973206e6f7420616374697665206f7220646f65736e277420657860008201527f6973742e00000000000000000000000000000000000000000000000000000000602082015250565b6000613a3f602483613566565b9150613a4a826139e3565b604082019050919050565b60006020820190508181036000830152613a6e81613a32565b9050919050565b6000604082019050613a8a6000830185613919565b613a976020830184613752565b9392505050565b7f596f7520617265206e6f742061207374616b6572000000000000000000000000600082015250565b6000613ad4601483613566565b9150613adf82613a9e565b602082019050919050565b60006020820190508181036000830152613b0381613ac7565b9050919050565b7f54686520616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f2e000000000000000000000000000000000000000000000000000000602082015250565b6000613b66602583613566565b9150613b7182613b0a565b604082019050919050565b60006020820190508181036000830152613b9581613b59565b9050919050565b7f596f7520646f6e27742068617665207468697320616d6f756e74206f6620746f60008201527f6b656e0000000000000000000000000000000000000000000000000000000000602082015250565b6000613bf8602383613566565b9150613c0382613b9c565b604082019050919050565b60006020820190508181036000830152613c2781613beb565b9050919050565b7f5468697320746f6b656e2069736e277420617661696c61626c652e0000000000600082015250565b6000613c64601b83613566565b9150613c6f82613c2e565b602082019050919050565b60006020820190508181036000830152613c9381613c57565b9050919050565b6000819050919050565b6000613cbf613cba613cb58461377c565b613c9a565b613679565b9050919050565b613ccf81613ca4565b82525050565b6000604082019050613cea6000830185613919565b613cf76020830184613cc6565b9392505050565b613d07816136ef565b8114613d1257600080fd5b50565b600081519050613d2481613cfe565b92915050565b600060208284031215613d4057613d3f613616565b5b6000613d4e84828501613d15565b91505092915050565b7f5472616e736665722066726f6d206572726f7200000000000000000000000000600082015250565b6000613d8d601383613566565b9150613d9882613d57565b602082019050919050565b60006020820190508181036000830152613dbc81613d80565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613dfd8261377c565b9150613e088361377c565b925082821015613e1b57613e1a613dc3565b5b828203905092915050565b6000608082019050613e3b6000830187613919565b613e486020830186613919565b613e5560408301856138e1565b613e626060830184613752565b95945050505050565b7f5468697320746f6b656e20616c72656164792065786973742e00000000000000600082015250565b6000613ea1601983613566565b9150613eac82613e6b565b602082019050919050565b60006020820190508181036000830152613ed081613e94565b9050919050565b6000613ee282613679565b9150613eed83613679565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613f2257613f21613dc3565b5b828201905092915050565b6000606082019050613f426000830186613919565b613f4f6020830185613919565b613f5c6040830184613cc6565b949350505050565b6000613f6f8261377c565b9150613f7a8361377c565b9250826fffffffffffffffffffffffffffffffff03821115613f9f57613f9e613dc3565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000614006602583613566565b915061401182613faa565b604082019050919050565b6000602082019050818103600083015261403581613ff9565b9050919050565b7f596f7520616c7265616479207374616b65207468697320706f6f6c0000000000600082015250565b6000614072601b83613566565b915061407d8261403c565b602082019050919050565b600060208201905081810360008301526140a181614065565b9050919050565b60006140b38261377c565b91506140be8361377c565b9250816fffffffffffffffffffffffffffffffff04831182151516156140e7576140e6613dc3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061412c8261377c565b91506141378361377c565b925082614147576141466140f2565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061418c82613679565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036141be576141bd613dc3565b5b600182019050919050565b60006141d482613679565b91506141df83613679565b9250828210156141f2576141f1613dc3565b5b828203905092915050565b600061420882613679565b915061421383613679565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561424c5761424b613dc3565b5b828202905092915050565b600061426282613679565b915061426d83613679565b92508261427d5761427c6140f2565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006142e4602683613566565b91506142ef82614288565b604082019050919050565b60006020820190508181036000830152614313816142d7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000614376602483613566565b91506143818261431a565b604082019050919050565b600060208201905081810360008301526143a581614369565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000614408602283613566565b9150614413826143ac565b604082019050919050565b60006020820190508181036000830152614437816143fb565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000614474602083613566565b915061447f8261443e565b602082019050919050565b600060208201905081810360008301526144a381614467565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006144e0601d83613566565b91506144eb826144aa565b602082019050919050565b6000602082019050818103600083015261450f816144d3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000614572602583613566565b915061457d82614516565b604082019050919050565b600060208201905081810360008301526145a181614565565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000614604602383613566565b915061460f826145a8565b604082019050919050565b60006020820190508181036000830152614633816145f7565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000614696602683613566565b91506146a18261463a565b604082019050919050565b600060208201905081810360008301526146c581614689565b9050919050565b600069ffffffffffffffffffff82169050919050565b6146eb816146cc565b81146146f657600080fd5b50565b600081519050614708816146e2565b92915050565b6000819050919050565b6147218161470e565b811461472c57600080fd5b50565b60008151905061473e81614718565b92915050565b60008151905061475381613683565b92915050565b600080600080600060a0868803121561477557614774613616565b5b6000614783888289016146f9565b95505060206147948882890161472f565b94505060406147a588828901614744565b93505060606147b688828901614744565b92505060806147c7888289016146f9565b9150509295509295909350565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061480a601f83613566565b9150614815826147d4565b602082019050919050565b60006020820190508181036000830152614839816147fd565b905091905056fea26469706673582212207fa054f1c1a1c39ff53ba766ce72c2da9d8e8b12f7f37386a3962d59a37cfbf764736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:516:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:8",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:8"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "244:269:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "254:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "268:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "274:1:8",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "264:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "285:38:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "315:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "311:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "311:12:8"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "289:18:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "362:51:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "376:27:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "390:6:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:4:8",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "386:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "386:17:8"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "376:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "342:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "335:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:26:8"
                  },
                  "nodeType": "YulIf",
                  "src": "332:81:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "465:42:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "479:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "479:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "479:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "429:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "452:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "449:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "449:14:8"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "426:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "426:38:8"
                  },
                  "nodeType": "YulIf",
                  "src": "423:84:8"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "228:4:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "237:6:8",
                "type": ""
              }
            ],
            "src": "193:320:8"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:33992:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:8",
                "type": ""
              }
            ],
            "src": "7:99:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "208:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "225:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "218:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "218:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "246:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "180:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "185:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "196:11:8",
                "type": ""
              }
            ],
            "src": "112:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "336:258:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "346:10:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "355:1:8",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "350:1:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:63:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:3:8"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:1:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "436:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "436:11:8"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "459:3:8"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "464:1:8"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "455:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "455:11:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "449:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:18:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "429:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "429:39:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "429:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "376:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "373:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "387:19:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "389:15:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "398:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:2:8",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "394:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "394:10:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "389:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "369:3:8",
                    "statements": []
                  },
                  "src": "365:113:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:76:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:3:8"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:6:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "558:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "558:16:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "576:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:27:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:27:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "493:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "496:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "490:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:13:8"
                  },
                  "nodeType": "YulIf",
                  "src": "487:101:8"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "318:3:8",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "323:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "328:6:8",
                "type": ""
              }
            ],
            "src": "287:307:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:54:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "658:38:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "676:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:8",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:14:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "692:2:8",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:7:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:28:8"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "658:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "631:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "641:6:8",
                "type": ""
              }
            ],
            "src": "600:102:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:272:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:53:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "857:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "824:32:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:39:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "814:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "872:78:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "938:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "943:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "879:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:71:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "985:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "992:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:16:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "999:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1004:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "959:21:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "959:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:46:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1031:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1058:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1036:21:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:29:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:39:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1020:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "781:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "788:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "796:3:8",
                "type": ""
              }
            ],
            "src": "708:364:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1196:195:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1218:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1214:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1206:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1253:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1264:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1272:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1278:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:86:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1370:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1379:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1306:63:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:78:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1298:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1168:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1180:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1191:4:8",
                "type": ""
              }
            ],
            "src": "1078:313:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1437:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1447:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1463:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1457:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1457:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1447:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1430:6:8",
                "type": ""
              }
            ],
            "src": "1397:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1584:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1587:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1577:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1577:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1478:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1690:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1710:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1700:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1700:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1601:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1769:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1779:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1794:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1801:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1790:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1779:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1751:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1761:7:8",
                "type": ""
              }
            ],
            "src": "1724:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1901:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1911:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1940:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1922:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1911:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1883:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1893:7:8",
                "type": ""
              }
            ],
            "src": "1856:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2001:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2058:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2067:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2070:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2060:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2060:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2060:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2024:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2049:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2031:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2031:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2021:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2011:63:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1994:5:8",
                "type": ""
              }
            ],
            "src": "1958:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2138:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2148:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2170:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2157:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2148:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2213:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2186:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2186:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2116:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2124:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2132:5:8",
                "type": ""
              }
            ],
            "src": "2086:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2276:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2286:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2297:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2286:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2258:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2268:7:8",
                "type": ""
              }
            ],
            "src": "2231:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2414:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2423:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2426:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2416:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2416:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2416:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2380:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2405:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2387:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2387:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2377:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2377:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2370:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2367:63:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2350:5:8",
                "type": ""
              }
            ],
            "src": "2314:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2494:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2504:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2526:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2513:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2513:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2504:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2569:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2542:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2542:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2472:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2480:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2488:5:8",
                "type": ""
              }
            ],
            "src": "2442:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2670:391:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2716:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2718:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2718:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2718:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2691:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2700:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2687:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2687:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2712:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2683:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2680:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2809:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2824:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2838:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2828:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2853:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2888:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2899:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2884:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2884:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2908:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2863:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2863:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2853:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2936:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2951:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2965:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2955:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2981:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3016:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3027:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3012:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3012:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3036:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2991:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2991:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2981:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2632:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2643:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2655:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2663:6:8",
                "type": ""
              }
            ],
            "src": "2587:474:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3109:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3119:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3144:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3137:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3137:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3130:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3130:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3119:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3091:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3101:7:8",
                "type": ""
              }
            ],
            "src": "3067:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3222:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3239:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3259:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3244:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3232:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3232:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3210:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3217:3:8",
                "type": ""
              }
            ],
            "src": "3163:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3370:118:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3380:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3392:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3403:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3388:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3380:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3454:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3467:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3478:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3463:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3463:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3416:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3416:65:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3354:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3365:4:8",
                "type": ""
              }
            ],
            "src": "3278:210:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3560:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3606:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3608:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3608:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3608:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3581:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3590:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3577:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3577:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3602:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3573:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3573:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3570:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3699:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3714:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3728:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3718:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3743:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3778:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3789:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3774:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3774:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3798:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3753:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3753:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3743:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3530:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3541:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3553:6:8",
                "type": ""
              }
            ],
            "src": "3494:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3894:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3911:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3934:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3916:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3916:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3904:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3904:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3904:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3882:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3889:3:8",
                "type": ""
              }
            ],
            "src": "3829:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4051:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4061:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4073:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4084:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4069:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4069:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4061:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4141:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4154:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4165:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4150:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4150:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4097:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4097:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4023:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4035:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4046:4:8",
                "type": ""
              }
            ],
            "src": "3953:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4226:73:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4236:57:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4251:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4258:34:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4247:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4247:46:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4236:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4208:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4218:7:8",
                "type": ""
              }
            ],
            "src": "4181:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4348:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4405:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4414:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4417:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4407:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4407:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4407:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4371:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4396:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint128",
                              "nodeType": "YulIdentifier",
                              "src": "4378:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4378:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4368:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4368:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4361:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4361:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4358:63:8"
                }
              ]
            },
            "name": "validator_revert_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4341:5:8",
                "type": ""
              }
            ],
            "src": "4305:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4485:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4495:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4517:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4504:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4504:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4495:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4560:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "4533:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4533:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4533:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4463:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4471:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4479:5:8",
                "type": ""
              }
            ],
            "src": "4433:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4661:391:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4707:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4709:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4709:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4709:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4682:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4691:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4678:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4678:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4703:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4674:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4674:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4671:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4800:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4815:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4829:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4819:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4844:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4879:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4890:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4875:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4875:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4899:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint128",
                          "nodeType": "YulIdentifier",
                          "src": "4854:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4854:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4844:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4927:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4942:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4956:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4946:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4972:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5007:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5018:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5003:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5003:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5027:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4982:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4982:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4972:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint128t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4623:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4634:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4646:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4654:6:8",
                "type": ""
              }
            ],
            "src": "4578:474:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5158:519:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5204:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5206:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5206:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5206:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5179:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5188:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5175:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5175:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5200:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5171:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5171:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "5168:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5297:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5312:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5326:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5316:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5341:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5376:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5387:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5372:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5372:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5396:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5351:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5351:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5341:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5424:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5439:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5453:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5443:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5469:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5504:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5515:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5500:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5500:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5524:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5479:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5479:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5469:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5552:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5567:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5581:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5571:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5597:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5632:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5643:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5628:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5628:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5652:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5607:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5607:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5597:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5112:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5123:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5135:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5143:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5151:6:8",
                "type": ""
              }
            ],
            "src": "5058:619:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5783:519:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5829:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5831:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5831:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5831:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5804:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5813:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5800:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5800:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5825:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5796:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5796:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "5793:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5922:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5937:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5951:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5941:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5966:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6001:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6012:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5997:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5997:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6021:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5976:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5976:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5966:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6049:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6064:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6078:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6068:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6094:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6129:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6140:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6125:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6125:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6149:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint128",
                          "nodeType": "YulIdentifier",
                          "src": "6104:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6104:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6094:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6177:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6192:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6206:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6196:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6222:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6257:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6268:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6253:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6253:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6277:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6232:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6232:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6222:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint128t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5737:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5748:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5760:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5768:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5776:6:8",
                "type": ""
              }
            ],
            "src": "5683:619:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6351:43:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6361:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6376:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6383:4:8",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6372:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6372:16:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6361:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6333:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6343:7:8",
                "type": ""
              }
            ],
            "src": "6308:86:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6461:51:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6478:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6499:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6483:15:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6483:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6471:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6471:35:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6471:35:8"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6449:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6456:3:8",
                "type": ""
              }
            ],
            "src": "6400:112:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6612:120:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6622:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6634:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6645:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6630:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6622:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6698:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6711:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6722:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6707:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6707:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6658:39:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:67:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:67:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6584:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6596:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6607:4:8",
                "type": ""
              }
            ],
            "src": "6518:214:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6803:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6820:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6843:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint128",
                          "nodeType": "YulIdentifier",
                          "src": "6825:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6825:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6813:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6813:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6813:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6791:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6798:3:8",
                "type": ""
              }
            ],
            "src": "6738:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6988:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6998:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7010:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7021:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7006:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7006:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6998:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7078:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7091:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7102:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7087:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7087:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7034:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7034:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7034:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7159:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7172:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7183:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7168:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7168:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7115:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7115:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7115:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint128__to_t_uint256_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6952:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6964:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6972:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6983:4:8",
                "type": ""
              }
            ],
            "src": "6862:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7265:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7282:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7305:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7287:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7287:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7275:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7275:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7275:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7253:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7260:3:8",
                "type": ""
              }
            ],
            "src": "7200:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7422:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7432:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7444:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7455:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7440:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7440:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7432:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7512:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7525:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7536:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7521:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7521:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7468:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7468:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7468:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7394:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7406:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7417:4:8",
                "type": ""
              }
            ],
            "src": "7324:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7635:391:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7681:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7683:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7683:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7683:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7656:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7665:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7652:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7652:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7677:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7648:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7648:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "7645:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7774:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7789:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7803:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7793:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7818:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7853:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7864:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7849:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7849:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7873:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7828:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7828:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7818:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7901:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7916:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7930:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7920:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7946:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7981:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7992:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7977:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7977:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8001:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7956:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7956:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7946:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7597:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7608:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7620:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7628:6:8",
                "type": ""
              }
            ],
            "src": "7552:474:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8060:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8077:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8080:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8070:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8070:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8070:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8174:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8177:4:8",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8167:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8167:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8167:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8198:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8201:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8191:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8191:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8191:15:8"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "8032:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8269:269:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8279:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8293:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8299:1:8",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8289:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8289:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8279:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8310:38:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8340:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8346:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8336:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8336:12:8"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "8314:18:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8387:51:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8401:27:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "8415:6:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8423:4:8",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "8411:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8411:17:8"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8401:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8367:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8360:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8360:26:8"
                  },
                  "nodeType": "YulIf",
                  "src": "8357:81:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8490:42:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "8504:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8504:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8504:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8454:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8477:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8485:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8474:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8474:14:8"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8451:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8451:38:8"
                  },
                  "nodeType": "YulIf",
                  "src": "8448:84:8"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8253:4:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8262:6:8",
                "type": ""
              }
            ],
            "src": "8218:320:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8650:117:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8672:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8680:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8668:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8668:14:8"
                      },
                      {
                        "hexValue": "506f6f6c206973206e6f7420616374697665206f7220646f65736e2774206578",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8684:34:8",
                        "type": "",
                        "value": "Pool is not active or doesn't ex"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8661:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8661:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8661:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8740:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8748:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8736:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8736:15:8"
                      },
                      {
                        "hexValue": "6973742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8753:6:8",
                        "type": "",
                        "value": "ist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8729:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8729:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8729:31:8"
                }
              ]
            },
            "name": "store_literal_in_memory_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8642:6:8",
                "type": ""
              }
            ],
            "src": "8544:223:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8919:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8929:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8995:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9000:2:8",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8936:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8936:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8929:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9101:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f",
                      "nodeType": "YulIdentifier",
                      "src": "9012:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9012:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9012:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9114:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9125:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9130:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9121:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9121:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9114:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8907:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8915:3:8",
                "type": ""
              }
            ],
            "src": "8773:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9316:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9326:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9338:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9349:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9334:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9334:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9326:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9373:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9384:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9369:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9369:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9392:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9398:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9388:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9388:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9362:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9362:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9362:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9418:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9552:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9426:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9426:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9418:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9296:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9311:4:8",
                "type": ""
              }
            ],
            "src": "9145:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9696:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9706:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9718:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9729:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9714:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9714:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9706:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9786:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9799:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9810:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9795:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9795:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9742:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9742:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9742:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9867:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9880:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9891:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9876:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9876:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9823:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9823:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9823:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9660:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9672:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9680:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9691:4:8",
                "type": ""
              }
            ],
            "src": "9570:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10014:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10036:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10044:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10032:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10032:14:8"
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10048:22:8",
                        "type": "",
                        "value": "You are not a staker"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10025:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10025:46:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10025:46:8"
                }
              ]
            },
            "name": "store_literal_in_memory_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10006:6:8",
                "type": ""
              }
            ],
            "src": "9908:170:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10230:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10240:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10306:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10311:2:8",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10247:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10247:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10240:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10412:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                      "nodeType": "YulIdentifier",
                      "src": "10323:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10323:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10323:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10425:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10436:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10441:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10432:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10432:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10425:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10218:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10226:3:8",
                "type": ""
              }
            ],
            "src": "10084:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10627:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10637:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10649:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10660:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10645:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10645:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10637:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10684:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10695:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10680:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10680:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10703:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10709:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10699:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10699:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10673:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10673:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10673:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10729:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10863:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10737:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10737:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10729:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10607:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10622:4:8",
                "type": ""
              }
            ],
            "src": "10456:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10987:118:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11009:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11017:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11005:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11005:14:8"
                      },
                      {
                        "hexValue": "54686520616d6f756e74206d7573742062652067726561746572207468616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11021:34:8",
                        "type": "",
                        "value": "The amount must be greater than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10998:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10998:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10998:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11077:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11085:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11073:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11073:15:8"
                      },
                      {
                        "hexValue": "7a65726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11090:7:8",
                        "type": "",
                        "value": "zero."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11066:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11066:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11066:32:8"
                }
              ]
            },
            "name": "store_literal_in_memory_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10979:6:8",
                "type": ""
              }
            ],
            "src": "10881:224:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11257:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11267:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11333:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11338:2:8",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11274:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11274:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11267:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11439:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                      "nodeType": "YulIdentifier",
                      "src": "11350:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11350:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11350:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11452:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11463:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11468:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11459:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11459:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11452:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11245:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11253:3:8",
                "type": ""
              }
            ],
            "src": "11111:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11654:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11664:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11676:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11687:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11672:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11672:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11664:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11711:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11722:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11707:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11707:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11730:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11736:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11726:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11726:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11700:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11700:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11700:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11756:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11890:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11764:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11764:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11756:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11634:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11649:4:8",
                "type": ""
              }
            ],
            "src": "11483:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12014:116:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12036:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12044:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12032:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12032:14:8"
                      },
                      {
                        "hexValue": "596f7520646f6e27742068617665207468697320616d6f756e74206f6620746f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12048:34:8",
                        "type": "",
                        "value": "You don't have this amount of to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12025:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12025:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12025:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12104:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12112:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12100:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12100:15:8"
                      },
                      {
                        "hexValue": "6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12117:5:8",
                        "type": "",
                        "value": "ken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12093:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12093:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12093:30:8"
                }
              ]
            },
            "name": "store_literal_in_memory_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12006:6:8",
                "type": ""
              }
            ],
            "src": "11908:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12282:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12292:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12358:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12363:2:8",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12299:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12299:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12292:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12464:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6",
                      "nodeType": "YulIdentifier",
                      "src": "12375:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12375:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12375:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12477:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12488:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12493:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12484:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12484:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12477:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12270:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12278:3:8",
                "type": ""
              }
            ],
            "src": "12136:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12679:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12689:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12701:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12712:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12697:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12697:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12689:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12736:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12747:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12732:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12732:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12755:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12761:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12751:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12751:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12725:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12725:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12725:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12781:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12915:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12789:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12789:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12781:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12659:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12674:4:8",
                "type": ""
              }
            ],
            "src": "12508:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13039:71:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13061:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13069:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13057:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13057:14:8"
                      },
                      {
                        "hexValue": "5468697320746f6b656e2069736e277420617661696c61626c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13073:29:8",
                        "type": "",
                        "value": "This token isn't available."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13050:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13050:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13050:53:8"
                }
              ]
            },
            "name": "store_literal_in_memory_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13031:6:8",
                "type": ""
              }
            ],
            "src": "12933:177:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13262:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13272:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13338:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13343:2:8",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13279:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13279:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13272:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13444:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                      "nodeType": "YulIdentifier",
                      "src": "13355:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13355:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13355:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13457:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13468:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13473:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13464:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13464:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13457:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13250:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13258:3:8",
                "type": ""
              }
            ],
            "src": "13116:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13659:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13669:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13681:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13692:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13677:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13677:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13669:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13716:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13727:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13712:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13712:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13735:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13741:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13731:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13731:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13705:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13705:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13705:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13761:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13895:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13769:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13769:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13761:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13639:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13654:4:8",
                "type": ""
              }
            ],
            "src": "13488:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13945:28:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13955:12:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13962:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "13955:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13931:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "13941:3:8",
                "type": ""
              }
            ],
            "src": "13913:60:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14039:82:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14049:66:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14107:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint128",
                              "nodeType": "YulIdentifier",
                              "src": "14089:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14089:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "14080:8:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14080:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14062:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14062:53:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "14049:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint128_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14019:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "14029:9:8",
                "type": ""
              }
            ],
            "src": "13979:142:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14192:66:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14209:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14245:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_uint128_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "14214:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14214:37:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14202:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14202:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14202:50:8"
                }
              ]
            },
            "name": "abi_encode_t_uint128_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14180:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14187:3:8",
                "type": ""
              }
            ],
            "src": "14127:131:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14390:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14400:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14412:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14423:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14408:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14408:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14400:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14480:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14493:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14504:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14489:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14489:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14436:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14436:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14436:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14561:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14574:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14585:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14570:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14570:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint128_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14517:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14517:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14517:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14354:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14366:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14374:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14385:4:8",
                "type": ""
              }
            ],
            "src": "14264:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14642:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14696:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14705:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14708:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14698:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14698:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14698:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14665:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14687:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "14672:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14672:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14662:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14662:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14655:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14655:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14652:60:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14635:5:8",
                "type": ""
              }
            ],
            "src": "14602:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14784:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14794:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "14809:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14803:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14803:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14794:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14849:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "14825:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14825:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14825:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "14762:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14770:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14778:5:8",
                "type": ""
              }
            ],
            "src": "14724:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14941:271:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14987:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "14989:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14989:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14989:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14962:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14971:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14958:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14958:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14983:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "14954:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14954:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14951:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15080:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15095:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15109:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "15099:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15124:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15167:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "15178:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15163:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15163:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15187:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "15134:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15134:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "15124:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14911:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "14922:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14934:6:8",
                "type": ""
              }
            ],
            "src": "14867:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15324:63:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15346:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15354:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15342:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15342:14:8"
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15358:21:8",
                        "type": "",
                        "value": "Transfer from error"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15335:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15335:45:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15335:45:8"
                }
              ]
            },
            "name": "store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15316:6:8",
                "type": ""
              }
            ],
            "src": "15218:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15539:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15549:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15615:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15620:2:8",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15556:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15556:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15549:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15721:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                      "nodeType": "YulIdentifier",
                      "src": "15632:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15632:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15632:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15734:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15745:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15750:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15741:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15741:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15734:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15527:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15535:3:8",
                "type": ""
              }
            ],
            "src": "15393:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15936:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15946:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15958:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15969:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15954:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15954:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15946:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15993:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16004:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15989:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15989:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16012:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16018:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16008:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16008:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15982:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15982:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15982:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16038:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16172:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16046:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16046:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16038:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15916:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15931:4:8",
                "type": ""
              }
            ],
            "src": "15765:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16218:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16235:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16238:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16228:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16228:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16228:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16332:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16335:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16325:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16325:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16325:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16356:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16359:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16349:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16349:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16349:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "16190:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16421:146:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16431:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16454:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "16436:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16436:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16431:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16465:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16488:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "16470:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16470:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16465:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16512:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16514:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16514:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16514:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16506:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16509:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "16503:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16503:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "16500:34:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16544:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16556:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16559:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "16552:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16552:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "16544:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16407:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16410:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "16416:4:8",
                "type": ""
              }
            ],
            "src": "16376:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16755:371:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16765:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16777:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16788:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16773:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16773:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16765:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16846:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16859:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16870:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16855:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16855:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16802:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16802:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16802:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16927:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16940:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16951:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16936:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16936:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16883:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16883:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16883:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "17009:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17022:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17033:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17018:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17018:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16965:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16965:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16965:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17091:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17104:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17115:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17100:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17100:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17047:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17047:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17047:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint128_t_uint256__to_t_address_t_address_t_uint128_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16703:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16715:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16723:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16731:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16739:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16750:4:8",
                "type": ""
              }
            ],
            "src": "16573:553:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17238:69:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17260:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17268:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17256:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17256:14:8"
                      },
                      {
                        "hexValue": "5468697320746f6b656e20616c72656164792065786973742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17272:27:8",
                        "type": "",
                        "value": "This token already exist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17249:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17249:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17249:51:8"
                }
              ]
            },
            "name": "store_literal_in_memory_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17230:6:8",
                "type": ""
              }
            ],
            "src": "17132:175:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17459:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17469:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17535:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17540:2:8",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17476:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17476:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17469:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17641:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3",
                      "nodeType": "YulIdentifier",
                      "src": "17552:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17552:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17552:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17654:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17665:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17670:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17661:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17661:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17654:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17447:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17455:3:8",
                "type": ""
              }
            ],
            "src": "17313:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17856:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17866:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17878:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17889:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17874:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17874:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17866:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17913:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17924:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17909:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17909:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17932:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17938:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17928:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17928:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17902:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17902:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17902:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17958:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18092:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17966:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17966:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17958:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17836:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17851:4:8",
                "type": ""
              }
            ],
            "src": "17685:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18154:261:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18164:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18187:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18169:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18169:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18164:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18198:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18221:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18203:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18203:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18198:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18361:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18363:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18363:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18363:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18282:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18289:66:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18357:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18285:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18285:74:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "18279:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18279:81:8"
                  },
                  "nodeType": "YulIf",
                  "src": "18276:107:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18393:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18404:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18407:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18400:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18400:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "18393:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18141:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18144:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "18150:3:8",
                "type": ""
              }
            ],
            "src": "18110:305:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18575:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18585:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18597:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18608:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18593:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18593:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18585:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18665:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18678:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18689:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18674:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18674:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18621:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18621:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18621:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18746:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18759:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18770:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18755:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18755:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18702:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18702:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18702:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "18828:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18841:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18852:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18837:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18837:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint128_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18784:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18784:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18784:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint128__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18531:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18543:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18551:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18559:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18570:4:8",
                "type": ""
              }
            ],
            "src": "18421:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18913:229:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18923:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18946:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "18928:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18928:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18923:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18957:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18980:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "18962:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18962:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18957:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19088:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19090:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19090:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19090:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19041:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19048:34:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19084:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19044:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19044:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19038:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19038:49:8"
                  },
                  "nodeType": "YulIf",
                  "src": "19035:75:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19120:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19131:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19134:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19127:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19127:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "19120:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18900:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18903:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "18909:3:8",
                "type": ""
              }
            ],
            "src": "18869:273:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19254:118:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19276:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19284:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19272:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19272:14:8"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19288:34:8",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19265:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19265:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19265:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19344:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19352:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19340:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19340:15:8"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19357:7:8",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19333:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19333:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19333:32:8"
                }
              ]
            },
            "name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19246:6:8",
                "type": ""
              }
            ],
            "src": "19148:224:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19524:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19534:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19600:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19605:2:8",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19541:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19541:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19534:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19706:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                      "nodeType": "YulIdentifier",
                      "src": "19617:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19617:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19617:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19719:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19730:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19735:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19726:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19726:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19719:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19512:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19520:3:8",
                "type": ""
              }
            ],
            "src": "19378:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19921:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19931:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19943:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19954:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19939:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19939:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19931:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19978:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19989:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19974:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19974:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19997:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20003:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19993:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19993:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19967:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19967:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19967:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20023:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20157:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20031:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20031:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20023:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19901:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19916:4:8",
                "type": ""
              }
            ],
            "src": "19750:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20281:71:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20303:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20311:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20299:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20299:14:8"
                      },
                      {
                        "hexValue": "596f7520616c7265616479207374616b65207468697320706f6f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20315:29:8",
                        "type": "",
                        "value": "You already stake this pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20292:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20292:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20292:53:8"
                }
              ]
            },
            "name": "store_literal_in_memory_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20273:6:8",
                "type": ""
              }
            ],
            "src": "20175:177:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20504:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20514:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20580:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20585:2:8",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20521:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20521:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20514:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20686:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f",
                      "nodeType": "YulIdentifier",
                      "src": "20597:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20597:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20597:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20699:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20710:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20715:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20706:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20706:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20699:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20492:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20500:3:8",
                "type": ""
              }
            ],
            "src": "20358:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20901:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20911:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20923:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20934:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20919:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20919:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20911:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20958:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20969:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20954:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20954:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20977:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20983:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20973:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20973:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20947:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20947:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20947:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21003:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21137:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21011:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21011:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21003:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20881:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20896:4:8",
                "type": ""
              }
            ],
            "src": "20730:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21203:268:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21213:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21236:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "21218:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21218:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "21213:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21247:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21270:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "21252:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21252:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "21247:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21413:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21415:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21415:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21415:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21357:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "21350:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21350:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "21343:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21343:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "21365:1:8"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21372:34:8",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21408:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "21368:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21368:42:8"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "21362:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21362:49:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21339:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21339:73:8"
                  },
                  "nodeType": "YulIf",
                  "src": "21336:99:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21445:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21460:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21463:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "21456:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21456:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "21445:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "21186:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "21189:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "21195:7:8",
                "type": ""
              }
            ],
            "src": "21155:316:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21505:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21522:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21525:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21515:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21515:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21515:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21619:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21622:4:8",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21612:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21612:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21612:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21643:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21646:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21636:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21636:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21636:15:8"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "21477:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21705:143:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21715:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21738:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "21720:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21720:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "21715:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21749:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21772:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "21754:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21754:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "21749:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21796:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "21798:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21798:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21798:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21793:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21786:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21786:9:8"
                  },
                  "nodeType": "YulIf",
                  "src": "21783:35:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21828:14:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21837:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21840:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "21833:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21833:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "21828:1:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "21694:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "21697:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "21703:1:8",
                "type": ""
              }
            ],
            "src": "21663:185:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21882:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21899:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21902:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21892:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21892:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21892:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21996:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21999:4:8",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21989:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21989:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21989:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22020:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22023:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22013:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22013:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22013:15:8"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "21854:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22083:190:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22093:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22120:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22102:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22102:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "22093:5:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22216:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22218:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22218:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22218:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22141:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22148:66:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "22138:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22138:77:8"
                  },
                  "nodeType": "YulIf",
                  "src": "22135:103:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22247:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22258:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22265:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22254:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22254:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "22247:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22069:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "22079:3:8",
                "type": ""
              }
            ],
            "src": "22040:233:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22324:146:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22334:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22357:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22339:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22339:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "22334:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22368:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22391:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22373:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22373:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "22368:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22415:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22417:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22417:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22417:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22409:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22412:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "22406:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22406:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "22403:34:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22447:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22459:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22462:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "22455:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22455:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "22447:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22310:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22313:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "22319:4:8",
                "type": ""
              }
            ],
            "src": "22279:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22524:300:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22534:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22557:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22539:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22539:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "22534:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22568:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22591:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22573:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22573:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "22568:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22766:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22768:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22768:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22768:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "22678:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "22671:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22671:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "22664:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22664:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "22686:1:8"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22693:66:8",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "22761:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "22689:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22689:74:8"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "22683:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22683:81:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "22660:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22660:105:8"
                  },
                  "nodeType": "YulIf",
                  "src": "22657:131:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22798:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22813:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22816:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "22809:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22809:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "22798:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22507:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22510:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "22516:7:8",
                "type": ""
              }
            ],
            "src": "22476:348:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22872:143:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22882:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22905:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22887:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22887:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "22882:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22916:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22939:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22921:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22921:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "22916:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22963:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "22965:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22965:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22965:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22960:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22953:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22953:9:8"
                  },
                  "nodeType": "YulIf",
                  "src": "22950:35:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22995:14:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23004:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23007:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "23000:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23000:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "22995:1:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22861:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22864:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "22870:1:8",
                "type": ""
              }
            ],
            "src": "22830:185:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23127:119:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23149:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23157:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23145:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23145:14:8"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23161:34:8",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23138:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23138:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23138:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23217:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23225:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23213:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23213:15:8"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23230:8:8",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23206:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23206:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23206:33:8"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23119:6:8",
                "type": ""
              }
            ],
            "src": "23021:225:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23398:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23408:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23474:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23479:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23415:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23415:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "23408:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23580:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "23491:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23491:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23491:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23593:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23604:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23609:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23600:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23600:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23593:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23386:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23394:3:8",
                "type": ""
              }
            ],
            "src": "23252:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23795:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23805:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23817:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23828:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23813:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23813:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23805:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23852:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23863:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23848:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23848:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23871:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23877:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23867:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23867:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23841:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23841:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23841:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23897:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "24031:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23905:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23905:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23897:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23775:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23790:4:8",
                "type": ""
              }
            ],
            "src": "23624:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24155:117:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24177:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24185:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24173:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24173:14:8"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24189:34:8",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24166:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24166:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24166:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24245:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24253:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24241:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24241:15:8"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24258:6:8",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24234:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24234:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24234:31:8"
                }
              ]
            },
            "name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24147:6:8",
                "type": ""
              }
            ],
            "src": "24049:223:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24424:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24434:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24500:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24505:2:8",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24441:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24441:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24434:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24606:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                      "nodeType": "YulIdentifier",
                      "src": "24517:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24517:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24517:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24619:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24630:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24635:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24626:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24626:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24619:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24412:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24420:3:8",
                "type": ""
              }
            ],
            "src": "24278:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24821:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24831:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24843:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24854:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24839:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24839:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24831:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24878:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24889:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24874:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24874:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "24897:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24903:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24893:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24893:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24867:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24867:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24867:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24923:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25057:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24931:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24931:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24923:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24801:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24816:4:8",
                "type": ""
              }
            ],
            "src": "24650:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25181:115:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25203:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25211:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25199:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25199:14:8"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25215:34:8",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25192:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25192:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25192:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25271:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25279:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25267:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25267:15:8"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25284:4:8",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25260:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25260:29:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25260:29:8"
                }
              ]
            },
            "name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25173:6:8",
                "type": ""
              }
            ],
            "src": "25075:221:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25448:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25458:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25524:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25529:2:8",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25465:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25465:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25458:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25630:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                      "nodeType": "YulIdentifier",
                      "src": "25541:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25541:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25541:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25643:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25654:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25659:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25650:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25650:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25643:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25436:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25444:3:8",
                "type": ""
              }
            ],
            "src": "25302:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25845:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25855:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25867:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25878:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25863:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25863:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25855:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25902:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25913:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25898:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25898:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25921:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25927:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25917:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25917:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25891:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25891:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25891:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25947:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26081:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25955:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25955:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25947:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25825:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25840:4:8",
                "type": ""
              }
            ],
            "src": "25674:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26205:76:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26227:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26235:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26223:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26223:14:8"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26239:34:8",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26216:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26216:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26216:58:8"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26197:6:8",
                "type": ""
              }
            ],
            "src": "26099:182:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26433:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26443:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26509:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26514:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26450:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26450:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "26443:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26615:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "26526:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26526:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26526:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26628:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26639:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26644:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26635:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26635:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "26628:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "26421:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "26429:3:8",
                "type": ""
              }
            ],
            "src": "26287:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26830:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26840:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26852:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26863:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26848:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26848:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26840:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26887:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26898:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26883:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26883:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26906:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26912:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26902:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26902:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26876:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26876:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26876:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26932:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27066:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26940:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26940:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26932:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26810:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26825:4:8",
                "type": ""
              }
            ],
            "src": "26659:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27190:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27212:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27220:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27208:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27208:14:8"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27224:31:8",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27201:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27201:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27201:55:8"
                }
              ]
            },
            "name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27182:6:8",
                "type": ""
              }
            ],
            "src": "27084:179:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27415:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27425:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27491:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27496:2:8",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27432:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27432:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27425:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27597:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                      "nodeType": "YulIdentifier",
                      "src": "27508:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27508:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27508:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27610:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27621:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27626:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27617:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27617:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "27610:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27403:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27411:3:8",
                "type": ""
              }
            ],
            "src": "27269:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27812:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27822:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27834:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27845:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27830:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27830:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27822:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27869:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27880:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27865:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27865:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27888:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27894:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27884:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27884:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27858:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27858:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27858:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27914:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28048:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27922:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27922:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27914:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27792:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27807:4:8",
                "type": ""
              }
            ],
            "src": "27641:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28172:118:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28194:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28202:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28190:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28190:14:8"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28206:34:8",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28183:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28183:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28183:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28262:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28270:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28258:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28258:15:8"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28275:7:8",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28251:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28251:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28251:32:8"
                }
              ]
            },
            "name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "28164:6:8",
                "type": ""
              }
            ],
            "src": "28066:224:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28442:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28452:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28518:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28523:2:8",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28459:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28459:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "28452:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28624:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                      "nodeType": "YulIdentifier",
                      "src": "28535:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28535:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28535:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28637:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28648:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28653:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28644:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28644:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "28637:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "28430:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "28438:3:8",
                "type": ""
              }
            ],
            "src": "28296:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28839:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28849:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28861:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28872:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28857:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28857:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28849:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28896:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28907:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28892:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28892:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28915:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28921:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28911:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28911:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28885:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28885:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28885:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28941:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29075:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28949:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28949:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28941:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28819:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28834:4:8",
                "type": ""
              }
            ],
            "src": "28668:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29199:116:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29221:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29229:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29217:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29217:14:8"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29233:34:8",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29210:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29210:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29210:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29289:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29297:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29285:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29285:15:8"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29302:5:8",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29278:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29278:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29278:30:8"
                }
              ]
            },
            "name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "29191:6:8",
                "type": ""
              }
            ],
            "src": "29093:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29467:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29477:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29543:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29548:2:8",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29484:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29484:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "29477:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29649:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                      "nodeType": "YulIdentifier",
                      "src": "29560:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29560:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29560:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29662:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29673:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29678:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29669:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29669:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "29662:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "29455:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "29463:3:8",
                "type": ""
              }
            ],
            "src": "29321:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29864:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29874:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29886:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29897:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29882:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29882:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29874:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29921:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29932:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29917:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29917:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29940:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29946:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29936:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29936:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29910:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29910:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29910:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29966:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "30100:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29974:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29974:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29966:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29844:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29859:4:8",
                "type": ""
              }
            ],
            "src": "29693:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30224:119:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "30246:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30254:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30242:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30242:14:8"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30258:34:8",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30235:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30235:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30235:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "30314:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30322:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30310:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30310:15:8"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30327:8:8",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30303:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30303:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30303:33:8"
                }
              ]
            },
            "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "30216:6:8",
                "type": ""
              }
            ],
            "src": "30118:225:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30495:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30505:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30571:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30576:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30512:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30512:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "30505:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30677:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                      "nodeType": "YulIdentifier",
                      "src": "30588:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30588:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30588:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30690:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30701:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30706:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30697:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30697:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "30690:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "30483:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "30491:3:8",
                "type": ""
              }
            ],
            "src": "30349:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30892:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30902:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30914:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30925:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30910:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30910:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30902:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30949:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30960:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30945:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30945:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "30968:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30974:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "30964:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30964:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30938:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30938:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30938:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30994:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "31128:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31002:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31002:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30994:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30872:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30887:4:8",
                "type": ""
              }
            ],
            "src": "30721:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31190:61:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31200:45:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "31215:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31222:22:8",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "31211:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31211:34:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "31200:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31172:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "31182:7:8",
                "type": ""
              }
            ],
            "src": "31146:105:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31299:78:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "31355:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "31364:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "31367:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "31357:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31357:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "31357:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "31322:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "31346:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "31329:16:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31329:23:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "31319:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31319:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "31312:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31312:42:8"
                  },
                  "nodeType": "YulIf",
                  "src": "31309:62:8"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31292:5:8",
                "type": ""
              }
            ],
            "src": "31257:120:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31445:79:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31455:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "31470:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "31464:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31464:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "31455:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "31512:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "31486:25:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31486:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31486:32:8"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "31423:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "31431:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31439:5:8",
                "type": ""
              }
            ],
            "src": "31383:141:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31574:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31584:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "31595:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "31584:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31556:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "31566:7:8",
                "type": ""
              }
            ],
            "src": "31530:76:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31654:78:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "31710:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "31719:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "31722:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "31712:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31712:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "31712:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "31677:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "31701:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "31684:16:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "31684:23:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "31674:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31674:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "31667:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31667:42:8"
                  },
                  "nodeType": "YulIf",
                  "src": "31664:62:8"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31647:5:8",
                "type": ""
              }
            ],
            "src": "31612:120:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31800:79:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31810:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "31825:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "31819:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31819:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "31810:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "31867:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "31841:25:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31841:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31841:32:8"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "31778:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "31786:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31794:5:8",
                "type": ""
              }
            ],
            "src": "31738:141:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31948:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31958:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "31973:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "31967:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31967:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "31958:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "32016:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "31989:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31989:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31989:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "31926:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "31934:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31942:5:8",
                "type": ""
              }
            ],
            "src": "31885:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32176:829:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "32223:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "32225:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "32225:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "32225:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "32197:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32206:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "32193:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32193:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32218:3:8",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "32189:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32189:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "32186:120:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "32316:127:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "32331:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32345:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "32335:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "32360:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32405:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "32416:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32401:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32401:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "32425:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "32370:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32370:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "32360:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "32453:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "32468:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32482:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "32472:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "32498:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32543:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "32554:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32539:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32539:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "32563:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "32508:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32508:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "32498:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "32591:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "32606:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32620:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "32610:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "32636:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32682:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "32693:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32678:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32678:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "32702:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "32646:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32646:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "32636:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "32730:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "32745:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32759:2:8",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "32749:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "32775:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32821:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "32832:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32817:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32817:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "32841:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "32785:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32785:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "32775:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "32869:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "32884:17:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32898:3:8",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "32888:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "32915:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "32960:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "32971:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "32956:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "32956:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "32980:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "32925:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32925:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "32915:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32114:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "32125:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "32137:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "32145:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "32153:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "32161:6:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "32169:6:8",
                "type": ""
              }
            ],
            "src": "32034:971:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33117:75:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "33139:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33147:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33135:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33135:14:8"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33151:33:8",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33128:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33128:57:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33128:57:8"
                }
              ]
            },
            "name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "33109:6:8",
                "type": ""
              }
            ],
            "src": "33011:181:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33344:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33354:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33420:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33425:2:8",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33361:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33361:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "33354:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33526:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                      "nodeType": "YulIdentifier",
                      "src": "33437:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33437:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33437:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33539:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "33550:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33555:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33546:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33546:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "33539:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "33332:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "33340:3:8",
                "type": ""
              }
            ],
            "src": "33198:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33741:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "33751:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33763:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33774:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33759:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33759:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33751:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33798:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33809:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33794:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33794:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "33817:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33823:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "33813:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33813:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33787:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33787:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33787:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33843:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "33977:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "33851:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33851:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33843:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33721:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33736:4:8",
                "type": ""
              }
            ],
            "src": "33570:419:8"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint128t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint128t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint128__to_t_uint256_t_uint128__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pool is not active or doesn't ex\")\n\n        mstore(add(memPtr, 32), \"ist.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not a staker\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266(memPtr) {\n\n        mstore(add(memPtr, 0), \"The amount must be greater than \")\n\n        mstore(add(memPtr, 32), \"zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't have this amount of to\")\n\n        mstore(add(memPtr, 32), \"ken\")\n\n    }\n\n    function abi_encode_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token isn't available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint128_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint128(value)))\n    }\n\n    function abi_encode_t_uint128_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint128_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer from error\")\n\n    }\n\n    function abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint128(x, y) -> diff {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint128_t_uint256__to_t_address_t_address_t_uint128_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token already exist.\")\n\n    }\n\n    function abi_encode_t_stringliteral_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint128__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint128_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint128(x, y) -> sum {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f(memPtr) {\n\n        mstore(add(memPtr, 0), \"You already stake this pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint128(x, y) -> product {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint128(x, y) -> r {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "425:10165:1:-:0;;;537:1;502:36;;425:10165;;;;;;;;;;1978:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:32:3;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;2052:5:4;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;425:10165:1;;640:96:7;693:7;719:10;712:17;;640:96;:::o;2433:187:3:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;425:10165:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:8:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;425:10165:1:-;;;;;;;",
  "deployedSourceMap": "425:10165:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9836:128:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2434:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3244:106:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5050:976:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5192:286:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1924:376:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3093:91:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1231:57:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;10159:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:3;;;:::i;:::-;;4030:862:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10461:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2932:919:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6704:2452;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9343:344:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2156:98:4;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;9836:128:1:-;9895:7;9922;:15;9930:6;9922:15;;;;;;;;;;;;;;;:27;9938:10;9922:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;9915:41;;;;9836:128;;;:::o;2434:327::-;1094:13:3;:11;:13::i;:::-;2520:5:1::1;:13;2526:6;2520:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;2498:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;2646:5;2619;:13;2625:6;2619:13;;;;;;;;;;;;;;;:24;;;:32;;;;;;;;;;;;;;;;;;2687:15;2662:5;:13;2668:6;2662:13;;;;;;;;;;;;;;;:22;;:40;;;;2720:33;2729:6;2737:15;2720:33;;;;;;;:::i;:::-;;;;;;;;2434:327:::0;:::o;3244:106:4:-;3305:7;3331:12;;3324:19;;3244:106;:::o;5050:976:1:-;5129:16;5138:6;5129:8;:16::i;:::-;5121:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;5199:1;5189:7;:11;;;5181:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5272:7;:15;5280:6;5272:15;;;;;;;;;;;;;;;:27;5288:10;5272:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;5261:45;;:7;:45;;;;5253:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;5365:5;:13;5371:6;5365:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;5357:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;5469:11;5490:6;5483:23;;;5507:10;5519:7;5483:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5469:58;;5546:6;5538:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;5589:20;5602:6;5589:12;:20::i;:::-;5702:7;5664;:15;5672:6;5664:15;;;;;;;;;;;;;;;:27;5680:10;5664:27;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5722:26;5751:106;;;;;;;;5781:15;5751:106;;;;5839:7;5811:5;:13;5817:6;5811:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:35;;;;:::i;:::-;5751:106;;;;;5722:135;;5868:12;:20;5881:6;5868:20;;;;;;;;;;;;;;;5894:3;5868:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5940:7;5911:5;:13;5917:6;5911:13;;;;;;;;;;;;;;;:25;;;:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5965:53;5973:10;5985:6;5993:7;6002:15;5965:53;;;;;;;;;:::i;:::-;;;;;;;;5110:916;;5050:976;;:::o;5192:286:4:-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;1924:376:1:-;1094:13:3;:11;:13::i;:::-;2067:5:1::1;:13;2073:6;2067:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;2066:25;2058:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2161:4;2134:5;:13;2140:6;2134:13;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;2196:4;2176:5;:13;2182:6;2176:13;;;;;;;;;;;;;;;:17;;;:24;;;;;;;;;;;;;;;;;;2240:13;2211:5;:13;2217:6;2211:13;;;;;;;;;;;;;;;:26;;;:42;;;;;;;;;;;;;;;;;;2271:21;2279:6;2287:4;2271:21;;;;;;;:::i;:::-;;;;;;;;1924:376:::0;;;:::o;3093:91:4:-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;1231:57:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10159:184::-;10214:4;10272:1;10235:7;:15;10243:6;10235:15;;;;;;;;;;;;;;;:27;10251:10;10235:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:38;;;10231:82;;;10297:4;10290:11;;;;10231:82;10330:5;10323:12;;10159:184;;;;:::o;3408:125:4:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;1831:101:3:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4030:862:1:-;4109:16;4118:6;4109:8;:16::i;:::-;4101:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4179:1;4169:7;:11;;;4161:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4241:5;:13;4247:6;4241:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;4233:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4310:11;4331:6;4324:27;;;4366:10;4399:4;4419:7;4324:113;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4310:127;;4456:6;4448:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;4537:7;4499;:15;4507:6;4499:15;;;;;;;;;;;;;;;:27;4515:10;4499:27;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4557:26;4586:106;;;;;;;;4616:15;4586:106;;;;4674:7;4646:5;:13;4652:6;4646:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:35;;;;:::i;:::-;4586:106;;;;;4557:135;;4703:12;:20;4716:6;4703:20;;;;;;;;;;;;;;;4729:3;4703:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4775:7;4746:5;:13;4752:6;4746:13;;;;;;;;;;;;;;;:25;;;:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4795:20;4808:6;4795:12;:20::i;:::-;4833:51;4839:10;4851:6;4859:7;4868:15;4833:51;;;;;;;;;:::i;:::-;;;;;;;;4090:802;;4030:862;;:::o;10461:124::-;10525:7;10552:5;:13;10558:6;10552:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;10545:32;;;;10461:124;;;:::o;1201:85:3:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2367:102:4:-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;2932:919:1:-;3009:16;3018:6;3009:8;:16::i;:::-;3008:17;3000:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3154:1;3144:7;:11;;;3136:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3216:5;:13;3222:6;3216:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;3208:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3285:11;3306:6;3299:27;;;3341:10;3374:4;3394:7;3299:113;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3285:127;;3431:6;3423:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;3504:32;;;;;;;;3511:7;3504:32;;;;;;3520:15;3504:32;;;3474:7;:15;3482:6;3474:15;;;;;;;;;;;;;;;:27;3490:10;3474:27;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3549:26;3578:106;;;;;;;;3608:15;3578:106;;;;3666:7;3638:5;:13;3644:6;3638:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:35;;;;:::i;:::-;3578:106;;;;;3549:135;;3695:12;:20;3708:6;3695:20;;;;;;;;;;;;;;;3721:3;3695:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3767:7;3738:5;:13;3744:6;3738:13;;;;;;;;;;;;;;;:25;;;:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3792:51;3798:10;3810:6;3818:7;3827:15;3792:51;;;;;;;;;:::i;:::-;;;;;;;;2989:862;;2932:919;;:::o;6704:2452::-;6766:7;6794:16;6803:6;6794:8;:16::i;:::-;6786:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;6846:18;6867:43;6883:5;:13;6889:6;6883:13;;;;;;;;;;;;;;;:26;;;;;;;;;;;;6867:15;:43::i;:::-;6846:64;;6921:21;6991:15;6968:5;6947;:13;6953:6;6947:13;;;;;;;;;;;;;;;:17;;;;;;;;;;;;6946:27;;;;:::i;:::-;6945:62;;;;:::i;:::-;6921:86;;;;7018:26;7055:9;7067:12;:20;7080:6;7067:20;;;;;;;;;;;;;;;:27;;;;7055:39;;7105:18;7139:9;7151:1;7139:13;;7134:231;7158:1;7154;:5;7134:231;;;7257:7;:15;7265:6;7257:15;;;;;;;;;;;;;;;:27;7273:10;7257:27;;;;;;;;;;;;;;;:32;;;7203:12;:20;7216:6;7203:20;;;;;;;;;;;;;;;7224:1;7203:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;;:86;7181:173;;7337:1;7324:14;;7181:173;7161:3;;;;;:::i;:::-;;;;7134:231;;;;7381:5;:13;7387:6;7381:13;;;;;;;;;;;;;;;:24;;;;;;;;;;;;7377:1705;;;7431:1;7426;:6;7422:789;;7515:7;:15;7523:6;7515:15;;;;;;;;;;;;;;;:27;7531:10;7515:27;;;;;;;;;;;;;;;:32;;;7476:15;:71;;;;:::i;:::-;7453:95;;;;;:::i;:::-;;;7422:789;;;7594:9;7606:10;7594:22;;7589:375;7626:1;7622;:5;;;;:::i;:::-;7618:1;:9;7589:375;;;7904:12;:20;7917:6;7904:20;;;;;;;;;;;;;;;7925:1;7904:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:40;;;;;;;;;;;;7704:240;;7841:7;:15;7849:6;7841:15;;;;;;;;;;;;;;;:27;7857:10;7841:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;7705:170;;7775:12;:20;7788:6;7775:20;;;;;;;;;;;;;;;7796:1;7775:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;;7706:12;:20;7719:6;7706:20;;;;;;;;;;;;;;;7731:1;7727;:5;;;;:::i;:::-;7706:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;:102;;;;:::i;:::-;7705:170;;;;:::i;:::-;7704:240;;;;:::i;:::-;7657:287;;;;;:::i;:::-;;;7629:3;;;;;:::i;:::-;;;;7589:375;;;;8170:5;:13;8176:6;8170:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;8025:170;;8111:7;:15;8119:6;8111:15;;;;;;;;;;;;;;;:27;8127:10;8111:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;8026:119;;8045:12;:20;8058:6;8045:20;;;;;;;;;;;;;;;8070:1;8066;:5;;;;:::i;:::-;8045:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;8027:15;:55;;;;:::i;:::-;8026:119;;;;:::i;:::-;8025:170;;;;:::i;:::-;7982:213;;;;;:::i;:::-;;;7422:789;7377:1705;;;8252:1;8247;:6;8243:828;;8343:7;:15;8351:6;8343:15;;;;;;;;;;;;;;;:27;8359:10;8343:27;;;;;;;;;;;;;;;:32;;;8297:5;:13;8303:6;8297:13;;;;;;;;;;;;;;;:22;;;:78;;;;:::i;:::-;8274:102;;;;;:::i;:::-;;;8243:828;;;8422:9;8434:10;8422:22;;8417:375;8454:1;8450;:5;;;;:::i;:::-;8446:1;:9;8417:375;;;8732:12;:20;8745:6;8732:20;;;;;;;;;;;;;;;8753:1;8732:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:40;;;;;;;;;;;;8532:240;;8669:7;:15;8677:6;8669:15;;;;;;;;;;;;;;;:27;8685:10;8669:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;8533:170;;8603:12;:20;8616:6;8603:20;;;;;;;;;;;;;;;8624:1;8603:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;;8534:12;:20;8547:6;8534:20;;;;;;;;;;;;;;;8559:1;8555;:5;;;;:::i;:::-;8534:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;:102;;;;:::i;:::-;8533:170;;;;:::i;:::-;8532:240;;;;:::i;:::-;8485:287;;;;;:::i;:::-;;;8457:3;;;;;:::i;:::-;;;;8417:375;;;;9030:5;:13;9036:6;9030:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;8853:202;;8971:7;:15;8979:6;8971:15;;;;;;;;;;;;;;;:27;8987:10;8971:27;;;;;;;;;;;;;;;:34;;;;;;;;;;;;8854:151;;8905:12;:20;8918:6;8905:20;;;;;;;;;;;;;;;8930:1;8926;:5;;;;:::i;:::-;8905:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;8855:5;:13;8861:6;8855:13;;;;;;;;;;;;;;;:22;;;:87;;;;:::i;:::-;8854:151;;;;:::i;:::-;8853:202;;;;:::i;:::-;8810:245;;;;;:::i;:::-;;;8243:828;7377:1705;9135:13;9122:10;9101:18;:31;;;;:::i;:::-;:47;;;;:::i;:::-;9094:54;;;;;;;6704:2452;;;:::o;3976:149:4:-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;9343:344:1:-;9407:16;9416:6;9407:8;:16::i;:::-;9399:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;9461:20;9523:24;;9484:23;9500:6;9484:15;:23::i;:::-;:63;;;;:::i;:::-;9461:86;;9593:15;9558:7;:15;9566:6;9558:15;;;;;;;;;;;;;;;:27;9574:10;9558:27;;;;;;;;;;;;;;;:32;;:50;;;;9648:31;9654:10;9666:12;9648:5;:31::i;:::-;9388:299;9343:344;:::o;2081:198:3:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;10110:370:4:-;10258:1;10241:19;;:5;:19;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;1359:130:3:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;10761:441:4:-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7583:543;7475:651;;;:::o;2433:187:3:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;6163:337:1:-;6268:7;6293:31;6363:21;6293:102;;6409:12;6431:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6406:52;;;;;;6486:5;6471:21;;;;6163:337;;;:::o;8402:389:4:-;8504:1;8485:21;;:7;:21;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;:48::i;:::-;8402:389;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:329::-;3553:6;3602:2;3590:9;3581:7;3577:23;3573:32;3570:119;;;3608:79;;:::i;:::-;3570:119;3728:1;3753:53;3798:7;3789:6;3778:9;3774:22;3753:53;:::i;:::-;3743:63;;3699:117;3494:329;;;;:::o;3829:118::-;3916:24;3934:5;3916:24;:::i;:::-;3911:3;3904:37;3829:118;;:::o;3953:222::-;4046:4;4084:2;4073:9;4069:18;4061:26;;4097:71;4165:1;4154:9;4150:17;4141:6;4097:71;:::i;:::-;3953:222;;;;:::o;4181:118::-;4218:7;4258:34;4251:5;4247:46;4236:57;;4181:118;;;:::o;4305:122::-;4378:24;4396:5;4378:24;:::i;:::-;4371:5;4368:35;4358:63;;4417:1;4414;4407:12;4358:63;4305:122;:::o;4433:139::-;4479:5;4517:6;4504:20;4495:29;;4533:33;4560:5;4533:33;:::i;:::-;4433:139;;;;:::o;4578:474::-;4646:6;4654;4703:2;4691:9;4682:7;4678:23;4674:32;4671:119;;;4709:79;;:::i;:::-;4671:119;4829:1;4854:53;4899:7;4890:6;4879:9;4875:22;4854:53;:::i;:::-;4844:63;;4800:117;4956:2;4982:53;5027:7;5018:6;5007:9;5003:22;4982:53;:::i;:::-;4972:63;;4927:118;4578:474;;;;;:::o;5058:619::-;5135:6;5143;5151;5200:2;5188:9;5179:7;5175:23;5171:32;5168:119;;;5206:79;;:::i;:::-;5168:119;5326:1;5351:53;5396:7;5387:6;5376:9;5372:22;5351:53;:::i;:::-;5341:63;;5297:117;5453:2;5479:53;5524:7;5515:6;5504:9;5500:22;5479:53;:::i;:::-;5469:63;;5424:118;5581:2;5607:53;5652:7;5643:6;5632:9;5628:22;5607:53;:::i;:::-;5597:63;;5552:118;5058:619;;;;;:::o;5683:::-;5760:6;5768;5776;5825:2;5813:9;5804:7;5800:23;5796:32;5793:119;;;5831:79;;:::i;:::-;5793:119;5951:1;5976:53;6021:7;6012:6;6001:9;5997:22;5976:53;:::i;:::-;5966:63;;5922:117;6078:2;6104:53;6149:7;6140:6;6129:9;6125:22;6104:53;:::i;:::-;6094:63;;6049:118;6206:2;6232:53;6277:7;6268:6;6257:9;6253:22;6232:53;:::i;:::-;6222:63;;6177:118;5683:619;;;;;:::o;6308:86::-;6343:7;6383:4;6376:5;6372:16;6361:27;;6308:86;;;:::o;6400:112::-;6483:22;6499:5;6483:22;:::i;:::-;6478:3;6471:35;6400:112;;:::o;6518:214::-;6607:4;6645:2;6634:9;6630:18;6622:26;;6658:67;6722:1;6711:9;6707:17;6698:6;6658:67;:::i;:::-;6518:214;;;;:::o;6738:118::-;6825:24;6843:5;6825:24;:::i;:::-;6820:3;6813:37;6738:118;;:::o;6862:332::-;6983:4;7021:2;7010:9;7006:18;6998:26;;7034:71;7102:1;7091:9;7087:17;7078:6;7034:71;:::i;:::-;7115:72;7183:2;7172:9;7168:18;7159:6;7115:72;:::i;:::-;6862:332;;;;;:::o;7200:118::-;7287:24;7305:5;7287:24;:::i;:::-;7282:3;7275:37;7200:118;;:::o;7324:222::-;7417:4;7455:2;7444:9;7440:18;7432:26;;7468:71;7536:1;7525:9;7521:17;7512:6;7468:71;:::i;:::-;7324:222;;;;:::o;7552:474::-;7620:6;7628;7677:2;7665:9;7656:7;7652:23;7648:32;7645:119;;;7683:79;;:::i;:::-;7645:119;7803:1;7828:53;7873:7;7864:6;7853:9;7849:22;7828:53;:::i;:::-;7818:63;;7774:117;7930:2;7956:53;8001:7;7992:6;7981:9;7977:22;7956:53;:::i;:::-;7946:63;;7901:118;7552:474;;;;;:::o;8032:180::-;8080:77;8077:1;8070:88;8177:4;8174:1;8167:15;8201:4;8198:1;8191:15;8218:320;8262:6;8299:1;8293:4;8289:12;8279:22;;8346:1;8340:4;8336:12;8367:18;8357:81;;8423:4;8415:6;8411:17;8401:27;;8357:81;8485:2;8477:6;8474:14;8454:18;8451:38;8448:84;;8504:18;;:::i;:::-;8448:84;8269:269;8218:320;;;:::o;8544:223::-;8684:34;8680:1;8672:6;8668:14;8661:58;8753:6;8748:2;8740:6;8736:15;8729:31;8544:223;:::o;8773:366::-;8915:3;8936:67;9000:2;8995:3;8936:67;:::i;:::-;8929:74;;9012:93;9101:3;9012:93;:::i;:::-;9130:2;9125:3;9121:12;9114:19;;8773:366;;;:::o;9145:419::-;9311:4;9349:2;9338:9;9334:18;9326:26;;9398:9;9392:4;9388:20;9384:1;9373:9;9369:17;9362:47;9426:131;9552:4;9426:131;:::i;:::-;9418:139;;9145:419;;;:::o;9570:332::-;9691:4;9729:2;9718:9;9714:18;9706:26;;9742:71;9810:1;9799:9;9795:17;9786:6;9742:71;:::i;:::-;9823:72;9891:2;9880:9;9876:18;9867:6;9823:72;:::i;:::-;9570:332;;;;;:::o;9908:170::-;10048:22;10044:1;10036:6;10032:14;10025:46;9908:170;:::o;10084:366::-;10226:3;10247:67;10311:2;10306:3;10247:67;:::i;:::-;10240:74;;10323:93;10412:3;10323:93;:::i;:::-;10441:2;10436:3;10432:12;10425:19;;10084:366;;;:::o;10456:419::-;10622:4;10660:2;10649:9;10645:18;10637:26;;10709:9;10703:4;10699:20;10695:1;10684:9;10680:17;10673:47;10737:131;10863:4;10737:131;:::i;:::-;10729:139;;10456:419;;;:::o;10881:224::-;11021:34;11017:1;11009:6;11005:14;10998:58;11090:7;11085:2;11077:6;11073:15;11066:32;10881:224;:::o;11111:366::-;11253:3;11274:67;11338:2;11333:3;11274:67;:::i;:::-;11267:74;;11350:93;11439:3;11350:93;:::i;:::-;11468:2;11463:3;11459:12;11452:19;;11111:366;;;:::o;11483:419::-;11649:4;11687:2;11676:9;11672:18;11664:26;;11736:9;11730:4;11726:20;11722:1;11711:9;11707:17;11700:47;11764:131;11890:4;11764:131;:::i;:::-;11756:139;;11483:419;;;:::o;11908:222::-;12048:34;12044:1;12036:6;12032:14;12025:58;12117:5;12112:2;12104:6;12100:15;12093:30;11908:222;:::o;12136:366::-;12278:3;12299:67;12363:2;12358:3;12299:67;:::i;:::-;12292:74;;12375:93;12464:3;12375:93;:::i;:::-;12493:2;12488:3;12484:12;12477:19;;12136:366;;;:::o;12508:419::-;12674:4;12712:2;12701:9;12697:18;12689:26;;12761:9;12755:4;12751:20;12747:1;12736:9;12732:17;12725:47;12789:131;12915:4;12789:131;:::i;:::-;12781:139;;12508:419;;;:::o;12933:177::-;13073:29;13069:1;13061:6;13057:14;13050:53;12933:177;:::o;13116:366::-;13258:3;13279:67;13343:2;13338:3;13279:67;:::i;:::-;13272:74;;13355:93;13444:3;13355:93;:::i;:::-;13473:2;13468:3;13464:12;13457:19;;13116:366;;;:::o;13488:419::-;13654:4;13692:2;13681:9;13677:18;13669:26;;13741:9;13735:4;13731:20;13727:1;13716:9;13712:17;13705:47;13769:131;13895:4;13769:131;:::i;:::-;13761:139;;13488:419;;;:::o;13913:60::-;13941:3;13962:5;13955:12;;13913:60;;;:::o;13979:142::-;14029:9;14062:53;14080:34;14089:24;14107:5;14089:24;:::i;:::-;14080:34;:::i;:::-;14062:53;:::i;:::-;14049:66;;13979:142;;;:::o;14127:131::-;14214:37;14245:5;14214:37;:::i;:::-;14209:3;14202:50;14127:131;;:::o;14264:332::-;14385:4;14423:2;14412:9;14408:18;14400:26;;14436:71;14504:1;14493:9;14489:17;14480:6;14436:71;:::i;:::-;14517:72;14585:2;14574:9;14570:18;14561:6;14517:72;:::i;:::-;14264:332;;;;;:::o;14602:116::-;14672:21;14687:5;14672:21;:::i;:::-;14665:5;14662:32;14652:60;;14708:1;14705;14698:12;14652:60;14602:116;:::o;14724:137::-;14778:5;14809:6;14803:13;14794:22;;14825:30;14849:5;14825:30;:::i;:::-;14724:137;;;;:::o;14867:345::-;14934:6;14983:2;14971:9;14962:7;14958:23;14954:32;14951:119;;;14989:79;;:::i;:::-;14951:119;15109:1;15134:61;15187:7;15178:6;15167:9;15163:22;15134:61;:::i;:::-;15124:71;;15080:125;14867:345;;;;:::o;15218:169::-;15358:21;15354:1;15346:6;15342:14;15335:45;15218:169;:::o;15393:366::-;15535:3;15556:67;15620:2;15615:3;15556:67;:::i;:::-;15549:74;;15632:93;15721:3;15632:93;:::i;:::-;15750:2;15745:3;15741:12;15734:19;;15393:366;;;:::o;15765:419::-;15931:4;15969:2;15958:9;15954:18;15946:26;;16018:9;16012:4;16008:20;16004:1;15993:9;15989:17;15982:47;16046:131;16172:4;16046:131;:::i;:::-;16038:139;;15765:419;;;:::o;16190:180::-;16238:77;16235:1;16228:88;16335:4;16332:1;16325:15;16359:4;16356:1;16349:15;16376:191;16416:4;16436:20;16454:1;16436:20;:::i;:::-;16431:25;;16470:20;16488:1;16470:20;:::i;:::-;16465:25;;16509:1;16506;16503:8;16500:34;;;16514:18;;:::i;:::-;16500:34;16559:1;16556;16552:9;16544:17;;16376:191;;;;:::o;16573:553::-;16750:4;16788:3;16777:9;16773:19;16765:27;;16802:71;16870:1;16859:9;16855:17;16846:6;16802:71;:::i;:::-;16883:72;16951:2;16940:9;16936:18;16927:6;16883:72;:::i;:::-;16965;17033:2;17022:9;17018:18;17009:6;16965:72;:::i;:::-;17047;17115:2;17104:9;17100:18;17091:6;17047:72;:::i;:::-;16573:553;;;;;;;:::o;17132:175::-;17272:27;17268:1;17260:6;17256:14;17249:51;17132:175;:::o;17313:366::-;17455:3;17476:67;17540:2;17535:3;17476:67;:::i;:::-;17469:74;;17552:93;17641:3;17552:93;:::i;:::-;17670:2;17665:3;17661:12;17654:19;;17313:366;;;:::o;17685:419::-;17851:4;17889:2;17878:9;17874:18;17866:26;;17938:9;17932:4;17928:20;17924:1;17913:9;17909:17;17902:47;17966:131;18092:4;17966:131;:::i;:::-;17958:139;;17685:419;;;:::o;18110:305::-;18150:3;18169:20;18187:1;18169:20;:::i;:::-;18164:25;;18203:20;18221:1;18203:20;:::i;:::-;18198:25;;18357:1;18289:66;18285:74;18282:1;18279:81;18276:107;;;18363:18;;:::i;:::-;18276:107;18407:1;18404;18400:9;18393:16;;18110:305;;;;:::o;18421:442::-;18570:4;18608:2;18597:9;18593:18;18585:26;;18621:71;18689:1;18678:9;18674:17;18665:6;18621:71;:::i;:::-;18702:72;18770:2;18759:9;18755:18;18746:6;18702:72;:::i;:::-;18784;18852:2;18841:9;18837:18;18828:6;18784:72;:::i;:::-;18421:442;;;;;;:::o;18869:273::-;18909:3;18928:20;18946:1;18928:20;:::i;:::-;18923:25;;18962:20;18980:1;18962:20;:::i;:::-;18957:25;;19084:1;19048:34;19044:42;19041:1;19038:49;19035:75;;;19090:18;;:::i;:::-;19035:75;19134:1;19131;19127:9;19120:16;;18869:273;;;;:::o;19148:224::-;19288:34;19284:1;19276:6;19272:14;19265:58;19357:7;19352:2;19344:6;19340:15;19333:32;19148:224;:::o;19378:366::-;19520:3;19541:67;19605:2;19600:3;19541:67;:::i;:::-;19534:74;;19617:93;19706:3;19617:93;:::i;:::-;19735:2;19730:3;19726:12;19719:19;;19378:366;;;:::o;19750:419::-;19916:4;19954:2;19943:9;19939:18;19931:26;;20003:9;19997:4;19993:20;19989:1;19978:9;19974:17;19967:47;20031:131;20157:4;20031:131;:::i;:::-;20023:139;;19750:419;;;:::o;20175:177::-;20315:29;20311:1;20303:6;20299:14;20292:53;20175:177;:::o;20358:366::-;20500:3;20521:67;20585:2;20580:3;20521:67;:::i;:::-;20514:74;;20597:93;20686:3;20597:93;:::i;:::-;20715:2;20710:3;20706:12;20699:19;;20358:366;;;:::o;20730:419::-;20896:4;20934:2;20923:9;20919:18;20911:26;;20983:9;20977:4;20973:20;20969:1;20958:9;20954:17;20947:47;21011:131;21137:4;21011:131;:::i;:::-;21003:139;;20730:419;;;:::o;21155:316::-;21195:7;21218:20;21236:1;21218:20;:::i;:::-;21213:25;;21252:20;21270:1;21252:20;:::i;:::-;21247:25;;21408:1;21372:34;21368:42;21365:1;21362:49;21357:1;21350:9;21343:17;21339:73;21336:99;;;21415:18;;:::i;:::-;21336:99;21463:1;21460;21456:9;21445:20;;21155:316;;;;:::o;21477:180::-;21525:77;21522:1;21515:88;21622:4;21619:1;21612:15;21646:4;21643:1;21636:15;21663:185;21703:1;21720:20;21738:1;21720:20;:::i;:::-;21715:25;;21754:20;21772:1;21754:20;:::i;:::-;21749:25;;21793:1;21783:35;;21798:18;;:::i;:::-;21783:35;21840:1;21837;21833:9;21828:14;;21663:185;;;;:::o;21854:180::-;21902:77;21899:1;21892:88;21999:4;21996:1;21989:15;22023:4;22020:1;22013:15;22040:233;22079:3;22102:24;22120:5;22102:24;:::i;:::-;22093:33;;22148:66;22141:5;22138:77;22135:103;;22218:18;;:::i;:::-;22135:103;22265:1;22258:5;22254:13;22247:20;;22040:233;;;:::o;22279:191::-;22319:4;22339:20;22357:1;22339:20;:::i;:::-;22334:25;;22373:20;22391:1;22373:20;:::i;:::-;22368:25;;22412:1;22409;22406:8;22403:34;;;22417:18;;:::i;:::-;22403:34;22462:1;22459;22455:9;22447:17;;22279:191;;;;:::o;22476:348::-;22516:7;22539:20;22557:1;22539:20;:::i;:::-;22534:25;;22573:20;22591:1;22573:20;:::i;:::-;22568:25;;22761:1;22693:66;22689:74;22686:1;22683:81;22678:1;22671:9;22664:17;22660:105;22657:131;;;22768:18;;:::i;:::-;22657:131;22816:1;22813;22809:9;22798:20;;22476:348;;;;:::o;22830:185::-;22870:1;22887:20;22905:1;22887:20;:::i;:::-;22882:25;;22921:20;22939:1;22921:20;:::i;:::-;22916:25;;22960:1;22950:35;;22965:18;;:::i;:::-;22950:35;23007:1;23004;23000:9;22995:14;;22830:185;;;;:::o;23021:225::-;23161:34;23157:1;23149:6;23145:14;23138:58;23230:8;23225:2;23217:6;23213:15;23206:33;23021:225;:::o;23252:366::-;23394:3;23415:67;23479:2;23474:3;23415:67;:::i;:::-;23408:74;;23491:93;23580:3;23491:93;:::i;:::-;23609:2;23604:3;23600:12;23593:19;;23252:366;;;:::o;23624:419::-;23790:4;23828:2;23817:9;23813:18;23805:26;;23877:9;23871:4;23867:20;23863:1;23852:9;23848:17;23841:47;23905:131;24031:4;23905:131;:::i;:::-;23897:139;;23624:419;;;:::o;24049:223::-;24189:34;24185:1;24177:6;24173:14;24166:58;24258:6;24253:2;24245:6;24241:15;24234:31;24049:223;:::o;24278:366::-;24420:3;24441:67;24505:2;24500:3;24441:67;:::i;:::-;24434:74;;24517:93;24606:3;24517:93;:::i;:::-;24635:2;24630:3;24626:12;24619:19;;24278:366;;;:::o;24650:419::-;24816:4;24854:2;24843:9;24839:18;24831:26;;24903:9;24897:4;24893:20;24889:1;24878:9;24874:17;24867:47;24931:131;25057:4;24931:131;:::i;:::-;24923:139;;24650:419;;;:::o;25075:221::-;25215:34;25211:1;25203:6;25199:14;25192:58;25284:4;25279:2;25271:6;25267:15;25260:29;25075:221;:::o;25302:366::-;25444:3;25465:67;25529:2;25524:3;25465:67;:::i;:::-;25458:74;;25541:93;25630:3;25541:93;:::i;:::-;25659:2;25654:3;25650:12;25643:19;;25302:366;;;:::o;25674:419::-;25840:4;25878:2;25867:9;25863:18;25855:26;;25927:9;25921:4;25917:20;25913:1;25902:9;25898:17;25891:47;25955:131;26081:4;25955:131;:::i;:::-;25947:139;;25674:419;;;:::o;26099:182::-;26239:34;26235:1;26227:6;26223:14;26216:58;26099:182;:::o;26287:366::-;26429:3;26450:67;26514:2;26509:3;26450:67;:::i;:::-;26443:74;;26526:93;26615:3;26526:93;:::i;:::-;26644:2;26639:3;26635:12;26628:19;;26287:366;;;:::o;26659:419::-;26825:4;26863:2;26852:9;26848:18;26840:26;;26912:9;26906:4;26902:20;26898:1;26887:9;26883:17;26876:47;26940:131;27066:4;26940:131;:::i;:::-;26932:139;;26659:419;;;:::o;27084:179::-;27224:31;27220:1;27212:6;27208:14;27201:55;27084:179;:::o;27269:366::-;27411:3;27432:67;27496:2;27491:3;27432:67;:::i;:::-;27425:74;;27508:93;27597:3;27508:93;:::i;:::-;27626:2;27621:3;27617:12;27610:19;;27269:366;;;:::o;27641:419::-;27807:4;27845:2;27834:9;27830:18;27822:26;;27894:9;27888:4;27884:20;27880:1;27869:9;27865:17;27858:47;27922:131;28048:4;27922:131;:::i;:::-;27914:139;;27641:419;;;:::o;28066:224::-;28206:34;28202:1;28194:6;28190:14;28183:58;28275:7;28270:2;28262:6;28258:15;28251:32;28066:224;:::o;28296:366::-;28438:3;28459:67;28523:2;28518:3;28459:67;:::i;:::-;28452:74;;28535:93;28624:3;28535:93;:::i;:::-;28653:2;28648:3;28644:12;28637:19;;28296:366;;;:::o;28668:419::-;28834:4;28872:2;28861:9;28857:18;28849:26;;28921:9;28915:4;28911:20;28907:1;28896:9;28892:17;28885:47;28949:131;29075:4;28949:131;:::i;:::-;28941:139;;28668:419;;;:::o;29093:222::-;29233:34;29229:1;29221:6;29217:14;29210:58;29302:5;29297:2;29289:6;29285:15;29278:30;29093:222;:::o;29321:366::-;29463:3;29484:67;29548:2;29543:3;29484:67;:::i;:::-;29477:74;;29560:93;29649:3;29560:93;:::i;:::-;29678:2;29673:3;29669:12;29662:19;;29321:366;;;:::o;29693:419::-;29859:4;29897:2;29886:9;29882:18;29874:26;;29946:9;29940:4;29936:20;29932:1;29921:9;29917:17;29910:47;29974:131;30100:4;29974:131;:::i;:::-;29966:139;;29693:419;;;:::o;30118:225::-;30258:34;30254:1;30246:6;30242:14;30235:58;30327:8;30322:2;30314:6;30310:15;30303:33;30118:225;:::o;30349:366::-;30491:3;30512:67;30576:2;30571:3;30512:67;:::i;:::-;30505:74;;30588:93;30677:3;30588:93;:::i;:::-;30706:2;30701:3;30697:12;30690:19;;30349:366;;;:::o;30721:419::-;30887:4;30925:2;30914:9;30910:18;30902:26;;30974:9;30968:4;30964:20;30960:1;30949:9;30945:17;30938:47;31002:131;31128:4;31002:131;:::i;:::-;30994:139;;30721:419;;;:::o;31146:105::-;31182:7;31222:22;31215:5;31211:34;31200:45;;31146:105;;;:::o;31257:120::-;31329:23;31346:5;31329:23;:::i;:::-;31322:5;31319:34;31309:62;;31367:1;31364;31357:12;31309:62;31257:120;:::o;31383:141::-;31439:5;31470:6;31464:13;31455:22;;31486:32;31512:5;31486:32;:::i;:::-;31383:141;;;;:::o;31530:76::-;31566:7;31595:5;31584:16;;31530:76;;;:::o;31612:120::-;31684:23;31701:5;31684:23;:::i;:::-;31677:5;31674:34;31664:62;;31722:1;31719;31712:12;31664:62;31612:120;:::o;31738:141::-;31794:5;31825:6;31819:13;31810:22;;31841:32;31867:5;31841:32;:::i;:::-;31738:141;;;;:::o;31885:143::-;31942:5;31973:6;31967:13;31958:22;;31989:33;32016:5;31989:33;:::i;:::-;31885:143;;;;:::o;32034:971::-;32137:6;32145;32153;32161;32169;32218:3;32206:9;32197:7;32193:23;32189:33;32186:120;;;32225:79;;:::i;:::-;32186:120;32345:1;32370:63;32425:7;32416:6;32405:9;32401:22;32370:63;:::i;:::-;32360:73;;32316:127;32482:2;32508:63;32563:7;32554:6;32543:9;32539:22;32508:63;:::i;:::-;32498:73;;32453:128;32620:2;32646:64;32702:7;32693:6;32682:9;32678:22;32646:64;:::i;:::-;32636:74;;32591:129;32759:2;32785:64;32841:7;32832:6;32821:9;32817:22;32785:64;:::i;:::-;32775:74;;32730:129;32898:3;32925:63;32980:7;32971:6;32960:9;32956:22;32925:63;:::i;:::-;32915:73;;32869:129;32034:971;;;;;;;;:::o;33011:181::-;33151:33;33147:1;33139:6;33135:14;33128:57;33011:181;:::o;33198:366::-;33340:3;33361:67;33425:2;33420:3;33361:67;:::i;:::-;33354:74;;33437:93;33526:3;33437:93;:::i;:::-;33555:2;33550:3;33546:12;33539:19;;33198:366;;;:::o;33570:419::-;33736:4;33774:2;33763:9;33759:18;33751:26;;33823:9;33817:4;33813:20;33809:1;33798:9;33794:17;33787:47;33851:131;33977:4;33851:131;:::i;:::-;33843:139;;33570:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.14;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"./CrowdV.sol\";\r\n\r\n/**\r\n * @title Staking : a Staking Plateform !\r\n * @author Anthony - Etienne - Jean-Baptiste\r\n */\r\n\r\ncontract Staking is Ownable, CrowdV {\r\n    //Price of reward token in $\r\n    uint256 priceTokenRewardInDollar = 1;\r\n\r\n    //Information about the token\r\n    struct Token {\r\n        bool activePool;\r\n        address addressPrice; //Chainlink Pool\r\n        uint256 dateStop;\r\n        uint128 APR;\r\n        uint128 totalStakes;\r\n    }\r\n\r\n    // Token address => active pool\r\n    mapping(address => Token) pools;\r\n\r\n    struct Staker {\r\n        uint128 amount; // Amount token stake\r\n        uint256 date; // Date of stake start\r\n    }\r\n\r\n    // address token => address Staker => Informations Staker\r\n    mapping(address => mapping(address => Staker)) stakers;\r\n\r\n    // Save total amount with timestamp\r\n    struct majStackingPool {\r\n        uint256 blockDate;\r\n        uint128 stakingTotalPool;\r\n    }\r\n    mapping(address => majStackingPool[]) public stakingTimes;\r\n\r\n    // Events\r\n    event NewPool(address tokenAddress, uint256 APR);\r\n    event StopPool(address tokenAddress, uint256 date);\r\n    event Stake(\r\n        address sender,\r\n        address tokenAddress,\r\n        uint128 amount,\r\n        uint256 date\r\n    );\r\n    event Unstake(\r\n        address sender,\r\n        address tokenAddress,\r\n        uint128 amount,\r\n        uint256 date\r\n    );\r\n\r\n    /**\r\n     * @notice Make available token address to add pool\r\n     * @dev Available only for owner\r\n     * @param _token is token address\r\n     * @param _apr is APR of the pool\r\n     * @param _addressPrice is Chainlink pool\r\n     */\r\n    function addPool(\r\n        address _token,\r\n        uint128 _apr,\r\n        address _addressPrice\r\n    ) external onlyOwner {\r\n        require(!pools[_token].activePool, \"This token already exist.\");\r\n\r\n        pools[_token].activePool = true;\r\n        pools[_token].APR = _apr;\r\n        pools[_token].addressPrice = _addressPrice;\r\n\r\n        emit NewPool(_token, _apr);\r\n    }\r\n\r\n    /**\r\n     * @notice disable a pool\r\n     * @dev Available only for owner\r\n     * @param _token is token address\r\n     */\r\n    function stopPool(address _token) external onlyOwner {\r\n        require(\r\n            pools[_token].activePool,\r\n            \"Pool is not active or doesn't exist.\"\r\n        );\r\n        pools[_token].activePool = false;\r\n        pools[_token].dateStop = block.timestamp;\r\n\r\n        emit StopPool(_token, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Stake fund into this contract\r\n     * @param _amount to stake\r\n     * @param _token to stake\r\n     * @dev Emit event after stake\r\n     */\r\n    function stake(uint128 _amount, address _token) external {\r\n        require(!isStaker(_token), \"You already stake this pool\"); //msg.sender is already a staker, faire une boucle sur le tableau ?\r\n        require(_amount > 0, \"The amount must be greater than zero.\");\r\n        require(pools[_token].activePool, \"This token isn't available.\");\r\n\r\n        bool result = IERC20(_token).transferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            _amount\r\n        );\r\n        require(result, \"Transfer from error\");\r\n\r\n        stakers[_token][msg.sender] = Staker(_amount, block.timestamp);\r\n\r\n        majStackingPool memory maj = majStackingPool(\r\n            block.timestamp,\r\n            pools[_token].totalStakes + _amount\r\n        );\r\n        stakingTimes[_token].push(maj);\r\n\r\n        pools[_token].totalStakes += _amount;\r\n\r\n        emit Stake(msg.sender, _token, _amount, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Add more token to a staking pool\r\n     * @param _amount is the amount of token to add\r\n     * @param _token is address token of the pool\r\n     */\r\n    function addStake(uint128 _amount, address _token) external {\r\n        require(isStaker(_token), \"You are not a staker\");\r\n        require(_amount > 0, \"The amount must be greater than zero.\");\r\n        require(pools[_token].activePool, \"This token isn't available.\");\r\n\r\n        bool result = IERC20(_token).transferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            _amount\r\n        );\r\n        require(result, \"Transfer from error\");\r\n\r\n        stakers[_token][msg.sender].amount += _amount;\r\n\r\n        majStackingPool memory maj = majStackingPool(\r\n            block.timestamp,\r\n            pools[_token].totalStakes + _amount\r\n        );\r\n        stakingTimes[_token].push(maj);\r\n\r\n        pools[_token].totalStakes += _amount;\r\n\r\n        claimRewards(_token);\r\n\r\n        emit Stake(msg.sender, _token, _amount, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw fund into this contract\r\n     * @param _token to unstake\r\n     * @param _amount number of token to unstake\r\n     */\r\n    function withdraw(uint128 _amount, address _token) external {\r\n        require(isStaker(_token), \"You are not a staker\");\r\n        require(_amount > 0, \"The amount must be greater than zero.\");\r\n        require(_amount >= stakers[_token][msg.sender].amount, \"You don't have this amount of token\");\r\n        require(pools[_token].activePool, \"This token isn't available.\"); //pas sûr que ce soit nécessaire\r\n\r\n        bool result = IERC20(_token).transfer(msg.sender, _amount);\r\n        require(result, \"Transfer from error\");\r\n\r\n        claimRewards(_token); // Récupérer les rewards en même temps\r\n\r\n        stakers[_token][msg.sender].amount -= _amount;\r\n\r\n        majStackingPool memory maj = majStackingPool(\r\n            block.timestamp,\r\n            pools[_token].totalStakes - _amount\r\n        );\r\n        stakingTimes[_token].push(maj);\r\n\r\n        pools[_token].totalStakes -= _amount;\r\n\r\n        emit Unstake(msg.sender, _token, _amount, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Get price of token with Chainlink\r\n     * @param _pairChainlinkAddress is the pool adress in $\r\n     */\r\n    function _getLatestPrice(address _pairChainlinkAddress)\r\n        private\r\n        view\r\n        returns (uint256)\r\n    {\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\r\n            _pairChainlinkAddress\r\n        );\r\n        (, int256 price, , , ) = priceFeed.latestRoundData();\r\n\r\n        return uint256(price);\r\n    }\r\n\r\n    /**\r\n     * @notice Calculate rewards\r\n     * @dev tokenPrice use Chainlink Oracle\r\n     * @param _token is the token of pool to calculate rewards\r\n     * @return rewards in dollars\r\n     */\r\n    function calculateReward(address _token) public view returns (uint256) {\r\n        require(isStaker(_token), \"You are not a staker\");\r\n        uint256 tokenPrice = _getLatestPrice(pools[_token].addressPrice);\r\n        uint256 aprPerSeconds = ((pools[_token].APR) * 10**8) /\r\n            (365 * 24 * 3600);\r\n        uint256 rewardspartoOfPool;\r\n        uint256 x = stakingTimes[_token].length;\r\n        uint256 blockIndex;\r\n        for (uint256 i = 0; i < x; i++) {\r\n            if (\r\n                stakingTimes[_token][i].blockDate ==\r\n                stakers[_token][msg.sender].date\r\n            ) {\r\n                blockIndex = i;\r\n            }\r\n        }\r\n\r\n        if (pools[_token].activePool) {\r\n            if (x == 1) {\r\n                rewardspartoOfPool += (block.timestamp -\r\n                    stakers[_token][msg.sender].date);\r\n            } else {\r\n                for (uint256 i = blockIndex; i < x - 1; i++) {\r\n                    rewardspartoOfPool +=\r\n                        ((stakingTimes[_token][i + 1].blockDate -\r\n                            stakingTimes[_token][i].blockDate) *\r\n                            stakers[_token][msg.sender].amount) /\r\n                        stakingTimes[_token][i].stakingTotalPool;\r\n                }\r\n                rewardspartoOfPool +=\r\n                    ((block.timestamp - stakingTimes[_token][x - 1].blockDate) *\r\n                        stakers[_token][msg.sender].amount) /\r\n                    pools[_token].totalStakes;\r\n            }\r\n        } else {\r\n            if (x == 1) {\r\n                rewardspartoOfPool += (pools[_token].dateStop -\r\n                    stakers[_token][msg.sender].date);\r\n            } else {\r\n                for (uint256 i = blockIndex; i < x - 1; i++) {\r\n                    rewardspartoOfPool +=\r\n                        ((stakingTimes[_token][i + 1].blockDate -\r\n                            stakingTimes[_token][i].blockDate) *\r\n                            stakers[_token][msg.sender].amount) /\r\n                        stakingTimes[_token][i].stakingTotalPool;\r\n                }\r\n                rewardspartoOfPool +=\r\n                    ((pools[_token].dateStop -\r\n                        stakingTimes[_token][x - 1].blockDate) *\r\n                        stakers[_token][msg.sender].amount) /\r\n                    pools[_token].totalStakes;\r\n            }\r\n        }\r\n\r\n        return rewardspartoOfPool * tokenPrice * aprPerSeconds;\r\n    }\r\n\r\n    /**\r\n     * @notice Claim your rewards\r\n     * @dev Available only for stakers who have rewards to claim\r\n     * @param _token is token of the pool to claim rewards\r\n     */\r\n    function claimRewards(address _token) public {\r\n        require(isStaker(_token), \"You are not a staker\");\r\n\r\n        uint256 amoutToClaim = calculateReward(_token) /\r\n            priceTokenRewardInDollar;\r\n        stakers[_token][msg.sender].date = block.timestamp; //Remettre à 0 le timestamp\r\n        _mint(msg.sender, amoutToClaim);\r\n    }\r\n\r\n    /**\r\n     * @notice Check amount of a stacked pool from msg.sender\r\n     * @param _token is address token of the pool to check\r\n     */\r\n    function getStaking(address _token) external view returns (uint256) {\r\n        return stakers[_token][msg.sender].amount;\r\n    }\r\n\r\n    /**\r\n     * @notice Check if msg.sender is a staker of a pool\r\n     * @dev Can be used to show the staked pools on the Dapp\r\n     * @param _token is address token of a pool\r\n     */\r\n    function isStaker(address _token) public view returns (bool) {\r\n        if (stakers[_token][msg.sender].amount > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @notice Check total amount of a stacked pool\r\n     * @param _token is address token\r\n     */\r\n    function getTotalStaking(address _token) external view returns (uint256) {\r\n        return pools[_token].totalStakes;\r\n    }\r\n\r\n}",
  "sourcePath": "/home/etienne/workspace/tp-defi/truffle/contracts/Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        971
      ],
      "Context": [
        1795
      ],
      "CrowdV": [
        14
      ],
      "ERC20": [
        1670
      ],
      "IERC20": [
        1748
      ],
      "IERC20Metadata": [
        1773
      ],
      "Ownable": [
        1084
      ],
      "Staking": [
        925
      ]
    },
    "id": 926,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 926,
        "sourceUnit": 1749,
        "src": "60:72:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 18,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 926,
        "sourceUnit": 1085,
        "src": "134:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 19,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 926,
        "sourceUnit": 972,
        "src": "204:92:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CrowdV.sol",
        "file": "./CrowdV.sol",
        "id": 20,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 926,
        "sourceUnit": 15,
        "src": "298:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1084,
              "src": "445:7:1"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "445:7:1"
          },
          {
            "baseName": {
              "id": 24,
              "name": "CrowdV",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14,
              "src": "454:6:1"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "454:6:1"
          }
        ],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21,
          "nodeType": "StructuredDocumentation",
          "src": "324:97:1",
          "text": " @title Staking : a Staking Plateform !\n @author Anthony - Etienne - Jean-Baptiste"
        },
        "fullyImplemented": true,
        "id": 925,
        "linearizedBaseContracts": [
          925,
          14,
          1670,
          1773,
          1748,
          1084,
          1795
        ],
        "name": "Staking",
        "nameLocation": "434:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "priceTokenRewardInDollar",
            "nameLocation": "510:24:1",
            "nodeType": "VariableDeclaration",
            "scope": 925,
            "src": "502:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "537:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Staking.Token",
            "id": 39,
            "members": [
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "activePool",
                "nameLocation": "611:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "606:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 29,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "606:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "addressPrice",
                "nameLocation": "640:12:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "632:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 31,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "632:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "dateStop",
                "nameLocation": "688:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "680:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "680:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "APR",
                "nameLocation": "715:3:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "707:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "totalStakes",
                "nameLocation": "737:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "729:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "729:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nameLocation": "589:5:1",
            "nodeType": "StructDefinition",
            "scope": 925,
            "src": "582:174:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "827:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 925,
            "src": "801:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
              "typeString": "mapping(address => struct Staking.Token)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "801:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                "typeString": "mapping(address => struct Staking.Token)"
              },
              "valueType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "820:5:1"
                },
                "referencedDeclaration": 39,
                "src": "820:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$39_storage_ptr",
                  "typeString": "struct Staking.Token"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Staking.Staker",
            "id": 49,
            "members": [
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "874:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "866:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "866:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "date",
                "nameLocation": "921:4:1",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "913:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "913:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Staker",
            "nameLocation": "848:6:1",
            "nodeType": "StructDefinition",
            "scope": 925,
            "src": "841:115:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "1074:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 925,
            "src": "1027:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct Staking.Staker))"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1035:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1027:46:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct Staking.Staker))"
              },
              "valueType": {
                "id": 54,
                "keyType": {
                  "id": 51,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1054:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1046:26:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                  "typeString": "mapping(address => struct Staking.Staker)"
                },
                "valueType": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "Staker",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49,
                    "src": "1065:6:1"
                  },
                  "referencedDeclaration": 49,
                  "src": "1065:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Staker_$49_storage_ptr",
                    "typeString": "struct Staking.Staker"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Staking.majStackingPool",
            "id": 61,
            "members": [
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "blockDate",
                "nameLocation": "1173:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1165:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 57,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1165:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "stakingTotalPool",
                "nameLocation": "1201:16:1",
                "nodeType": "VariableDeclaration",
                "scope": 61,
                "src": "1193:24:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 59,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "majStackingPool",
            "nameLocation": "1138:15:1",
            "nodeType": "StructDefinition",
            "scope": 925,
            "src": "1131:94:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f005df3",
            "id": 67,
            "mutability": "mutable",
            "name": "stakingTimes",
            "nameLocation": "1276:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 925,
            "src": "1231:57:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Staking.majStackingPool[])"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 62,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1239:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1231:37:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Staking.majStackingPool[])"
              },
              "valueType": {
                "baseType": {
                  "id": 64,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 63,
                    "name": "majStackingPool",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 61,
                    "src": "1250:15:1"
                  },
                  "referencedDeclaration": 61,
                  "src": "1250:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_majStackingPool_$61_storage_ptr",
                    "typeString": "struct Staking.majStackingPool"
                  }
                },
                "id": 65,
                "nodeType": "ArrayTypeName",
                "src": "1250:17:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr",
                  "typeString": "struct Staking.majStackingPool[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "be4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31",
            "id": 73,
            "name": "NewPool",
            "nameLocation": "1318:7:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1334:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1326:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "APR",
                  "nameLocation": "1356:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1348:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1325:35:1"
            },
            "src": "1312:49:1"
          },
          {
            "anonymous": false,
            "eventSelector": "95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4",
            "id": 79,
            "name": "StopPool",
            "nameLocation": "1373:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1390:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1382:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1382:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "1412:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1404:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1381:36:1"
            },
            "src": "1367:51:1"
          },
          {
            "anonymous": false,
            "eventSelector": "1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca",
            "id": 89,
            "name": "Stake",
            "nameLocation": "1430:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1454:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1446:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1479:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1471:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1510:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1502:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "1535:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1527:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1435:111:1"
            },
            "src": "1424:123:1"
          },
          {
            "anonymous": false,
            "eventSelector": "bd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f3",
            "id": 99,
            "name": "Unstake",
            "nameLocation": "1559:7:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1585:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1577:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1610:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1602:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1641:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1633:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "1666:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1658:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1566:111:1"
            },
            "src": "1553:125:1"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "2047:253:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2066:25:1",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 112,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "2067:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                "typeString": "mapping(address => struct Staking.Token storage ref)"
                              }
                            },
                            "id": 114,
                            "indexExpression": {
                              "id": 113,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "2073:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2067:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$39_storage",
                              "typeString": "struct Staking.Token storage ref"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activePool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "2067:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e20616c72656164792065786973742e",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2093:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3",
                          "typeString": "literal_string \"This token already exist.\""
                        },
                        "value": "This token already exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f265ec9e0b32d16fb2cc34fe9ab8f5bbf67ff8d6c646ed02e5d43cd9c34261b3",
                          "typeString": "literal_string \"This token already exist.\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2058:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:63:1"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 120,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2134:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 122,
                        "indexExpression": {
                          "id": 121,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2140:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2134:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "2134:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2161:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2134:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:31:1"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 127,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2176:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 129,
                        "indexExpression": {
                          "id": 128,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2182:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2176:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "APR",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "2176:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 131,
                      "name": "_apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2196:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2176:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:24:1"
                },
                {
                  "expression": {
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 134,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2211:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 136,
                        "indexExpression": {
                          "id": 135,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "2217:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2211:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "addressPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "2211:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138,
                      "name": "_addressPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "2240:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2211:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:42:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "2279:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 143,
                        "name": "_apr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "2287:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 141,
                      "name": "NewPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2271:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "EmitStatement",
                  "src": "2266:26:1"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1686:232:1",
              "text": " @notice Make available token address to add pool\n @dev Available only for owner\n @param _token is token address\n @param _apr is APR of the pool\n @param _addressPrice is Chainlink pool"
            },
            "functionSelector": "2bf8f756",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 109,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 108,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1003,
                  "src": "2037:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2037:9:1"
              }
            ],
            "name": "addPool",
            "nameLocation": "1933:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1959:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1951:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_apr",
                  "nameLocation": "1984:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1976:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_addressPrice",
                  "nameLocation": "2007:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1999:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1999:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1940:87:1"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2047:0:1"
            },
            "scope": 925,
            "src": "1924:376:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2487:274:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 156,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2520:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 158,
                          "indexExpression": {
                            "id": 157,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "2526:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2520:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "2520:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c206973206e6f7420616374697665206f7220646f65736e27742065786973742e",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2559:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f",
                          "typeString": "literal_string \"Pool is not active or doesn't exist.\""
                        },
                        "value": "Pool is not active or doesn't exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb7565b38bcb4f241fd094a8354a5846e3c3883bd8513ccae55f38bbbbe442f",
                          "typeString": "literal_string \"Pool is not active or doesn't exist.\""
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2498:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2498:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:110:1"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 163,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2619:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 165,
                        "indexExpression": {
                          "id": 164,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "2625:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2619:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "2619:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2646:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2619:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2619:32:1"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 170,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2662:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 172,
                        "indexExpression": {
                          "id": 171,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "2668:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2662:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateStop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "2662:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 174,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2687:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2687:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2662:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2662:40:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 179,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "2729:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 180,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2737:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2737:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 178,
                      "name": "StopPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2720:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "EmitStatement",
                  "src": "2715:38:1"
                }
              ]
            },
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "2308:120:1",
              "text": " @notice disable a pool\n @dev Available only for owner\n @param _token is token address"
            },
            "functionSelector": "156e28b8",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 153,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 152,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1003,
                  "src": "2477:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2477:9:1"
              }
            ],
            "name": "stopPool",
            "nameLocation": "2443:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2460:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2452:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2451:16:1"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2487:0:1"
            },
            "scope": 925,
            "src": "2434:327:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "2989:862:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3008:17:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 195,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "3018:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 194,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "3009:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3009:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c7265616479207374616b65207468697320706f6f6c",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3027:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f",
                          "typeString": "literal_string \"You already stake this pool\""
                        },
                        "value": "You already stake this pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7153360c3da9f8be2cdf7dcc8cb69df80bf89164d22f91d27a99bb53e78963f",
                          "typeString": "literal_string \"You already stake this pool\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3000:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3000:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 202,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "3144:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3154:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3144:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3157:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        },
                        "value": "The amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3136:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3136:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3136:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 209,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "3216:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 211,
                          "indexExpression": {
                            "id": 210,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "3222:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3216:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "3216:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e2069736e277420617661696c61626c652e",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3242:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        },
                        "value": "This token isn't available."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3208:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3208:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3208:64:1"
                },
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "3290:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "3285:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3285:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 222,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3341:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3341:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 226,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3374:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$925",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$925",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3366:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3366:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3366:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 228,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3394:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 219,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "3306:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 218,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1748,
                          "src": "3299:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1748_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3299:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1748",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1747,
                      "src": "3299:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3299:113:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3285:127:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "3431:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        },
                        "value": "Transfer from error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3423:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3423:38:1"
                },
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 236,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "3474:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "id": 237,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3482:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3474:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                          "typeString": "mapping(address => struct Staking.Staker storage ref)"
                        }
                      },
                      "id": 241,
                      "indexExpression": {
                        "expression": {
                          "id": 238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3490:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3490:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3474:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$49_storage",
                        "typeString": "struct Staking.Staker storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 243,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "3511:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 244,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3520:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3520:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 242,
                        "name": "Staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3504:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Staker_$49_storage_ptr_$",
                          "typeString": "type(struct Staking.Staker storage pointer)"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3504:32:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$49_memory_ptr",
                        "typeString": "struct Staking.Staker memory"
                      }
                    },
                    "src": "3474:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Staker_$49_storage",
                      "typeString": "struct Staking.Staker storage ref"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3474:62:1"
                },
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "maj",
                      "nameLocation": "3572:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "3549:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                        "typeString": "struct Staking.majStackingPool"
                      },
                      "typeName": {
                        "id": 250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 249,
                          "name": "majStackingPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "3549:15:1"
                        },
                        "referencedDeclaration": 61,
                        "src": "3549:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage_ptr",
                          "typeString": "struct Staking.majStackingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 253,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3608:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3608:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 255,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "3638:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                "typeString": "mapping(address => struct Staking.Token storage ref)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "id": 256,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "3644:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$39_storage",
                              "typeString": "struct Staking.Token storage ref"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "3638:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 259,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "3666:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "3638:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 252,
                      "name": "majStackingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3578:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_majStackingPool_$61_storage_ptr_$",
                        "typeString": "type(struct Staking.majStackingPool storage pointer)"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3578:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                      "typeString": "struct Staking.majStackingPool memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3549:135:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "maj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3721:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 263,
                          "name": "stakingTimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "3695:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                          }
                        },
                        "id": 265,
                        "indexExpression": {
                          "id": 264,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3708:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3695:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                          "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3695:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$_t_struct$_majStackingPool_$61_storage_$returns$__$bound_to$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Staking.majStackingPool storage ref[] storage pointer,struct Staking.majStackingPool storage ref)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3695:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:30:1"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 270,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3738:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 272,
                        "indexExpression": {
                          "id": 271,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3744:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3738:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "3738:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3767:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "3738:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3738:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 278,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3798:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3798:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 280,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "3810:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 281,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3818:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 282,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3827:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3827:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 277,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "3792:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint128,uint256)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "EmitStatement",
                  "src": "3787:56:1"
                }
              ]
            },
            "documentation": {
              "id": 186,
              "nodeType": "StructuredDocumentation",
              "src": "2769:157:1",
              "text": " @notice Stake fund into this contract\n @param _amount to stake\n @param _token to stake\n @dev Emit event after stake"
            },
            "functionSelector": "b166dfdd",
            "id": 287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "2941:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2955:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "2947:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2947:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2972:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "2964:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2964:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2946:33:1"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2989:0:1"
            },
            "scope": 925,
            "src": "2932:919:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 388,
              "nodeType": "Block",
              "src": "4090:802:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 297,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4118:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 296,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "4109:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4109:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4127:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        },
                        "value": "You are not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        }
                      ],
                      "id": 295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4101:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4101:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "4101:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 303,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "4169:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4179:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4169:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4182:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        },
                        "value": "The amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        }
                      ],
                      "id": 302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4161:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 310,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "4241:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 312,
                          "indexExpression": {
                            "id": 311,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4247:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4241:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "4241:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e2069736e277420617661696c61626c652e",
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4267:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        },
                        "value": "This token isn't available."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        }
                      ],
                      "id": 309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4233:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4233:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "4233:64:1"
                },
                {
                  "assignments": [
                    318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "4315:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 388,
                      "src": "4310:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4310:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 331,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 323,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4366:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4366:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 327,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4399:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$925",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$925",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4391:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 325,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4391:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4391:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 329,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "4419:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 320,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4331:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 319,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1748,
                          "src": "4324:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1748_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4324:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1748",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1747,
                      "src": "4324:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:113:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4310:127:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 333,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "4456:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4464:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        },
                        "value": "Transfer from error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4448:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:38:1"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 337,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4499:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 341,
                          "indexExpression": {
                            "id": 338,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4507:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4499:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 342,
                        "indexExpression": {
                          "expression": {
                            "id": 339,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4515:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4515:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4499:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "4499:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "4537:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4499:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4499:45:1"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "maj",
                      "nameLocation": "4580:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 388,
                      "src": "4557:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                        "typeString": "struct Staking.majStackingPool"
                      },
                      "typeName": {
                        "id": 348,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 347,
                          "name": "majStackingPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "4557:15:1"
                        },
                        "referencedDeclaration": 61,
                        "src": "4557:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage_ptr",
                          "typeString": "struct Staking.majStackingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4616:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4616:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 353,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "4646:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                "typeString": "mapping(address => struct Staking.Token storage ref)"
                              }
                            },
                            "id": 355,
                            "indexExpression": {
                              "id": 354,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "4652:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4646:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$39_storage",
                              "typeString": "struct Staking.Token storage ref"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "4646:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 357,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "4674:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "4646:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 350,
                      "name": "majStackingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4586:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_majStackingPool_$61_storage_ptr_$",
                        "typeString": "type(struct Staking.majStackingPool storage pointer)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4586:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                      "typeString": "struct Staking.majStackingPool memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4557:135:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 365,
                        "name": "maj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "4729:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 361,
                          "name": "stakingTimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "4703:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                          }
                        },
                        "id": 363,
                        "indexExpression": {
                          "id": 362,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "4716:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4703:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                          "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4703:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$_t_struct$_majStackingPool_$61_storage_$returns$__$bound_to$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Staking.majStackingPool storage ref[] storage pointer,struct Staking.majStackingPool storage ref)"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4703:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "4703:30:1"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 368,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "4746:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 370,
                        "indexExpression": {
                          "id": 369,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "4752:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4746:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "4746:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 372,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "4775:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "4746:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "4746:36:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 376,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4808:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 375,
                      "name": "claimRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "4795:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4795:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "4795:20:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 380,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4839:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4839:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 382,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4851:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 383,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "4859:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 384,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4868:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4868:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 379,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "4833:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint128,uint256)"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4833:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "EmitStatement",
                  "src": "4828:56:1"
                }
              ]
            },
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "3859:165:1",
              "text": " @notice Add more token to a staking pool\n @param _amount is the amount of token to add\n @param _token is address token of the pool"
            },
            "functionSelector": "77cff6cf",
            "id": 389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addStake",
            "nameLocation": "4039:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4056:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "4048:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4073:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "4065:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4065:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4047:33:1"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4090:0:1"
            },
            "scope": 925,
            "src": "4030:862:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "5110:916:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 399,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "5138:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 398,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "5129:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5129:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5147:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        },
                        "value": "You are not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        }
                      ],
                      "id": 397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5121:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5121:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "5121:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 405,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "5189:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5199:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5189:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5202:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        },
                        "value": "The amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71496ffb17f8b17a89aede1d7dd1a4b586dc796543bfb06d0691c048fbf36266",
                          "typeString": "literal_string \"The amount must be greater than zero.\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5181:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5181:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "5181:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 412,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "5261:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 413,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "5272:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                }
                              },
                              "id": 415,
                              "indexExpression": {
                                "id": 414,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 394,
                                "src": "5280:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5272:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                "typeString": "mapping(address => struct Staking.Staker storage ref)"
                              }
                            },
                            "id": 418,
                            "indexExpression": {
                              "expression": {
                                "id": 416,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5288:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5288:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5272:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$49_storage",
                              "typeString": "struct Staking.Staker storage ref"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46,
                          "src": "5272:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "5261:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e27742068617665207468697320616d6f756e74206f6620746f6b656e",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5308:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6",
                          "typeString": "literal_string \"You don't have this amount of token\""
                        },
                        "value": "You don't have this amount of token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76a589c2841de0e377370fd6d5af3d500780cb9084b7be347b08aedf711f57e6",
                          "typeString": "literal_string \"You don't have this amount of token\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5253:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5253:93:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "5253:93:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 425,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "5365:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 427,
                          "indexExpression": {
                            "id": 426,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "5371:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5365:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "5365:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e2069736e277420617661696c61626c652e",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5391:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        },
                        "value": "This token isn't available."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fdc17e0958630d54e78f3598e574274990929aa6954655e24b989a63af0c52",
                          "typeString": "literal_string \"This token isn't available.\""
                        }
                      ],
                      "id": 424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5357:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5357:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "5357:64:1"
                },
                {
                  "assignments": [
                    433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 433,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "5474:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 499,
                      "src": "5469:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5469:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 442,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 438,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5507:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5507:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 440,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "5519:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 435,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "5490:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 434,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1748,
                          "src": "5483:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1748_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5483:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1748",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1715,
                      "src": "5483:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5483:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5469:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 444,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "5546:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5554:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        },
                        "value": "Transfer from error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        }
                      ],
                      "id": 443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5538:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5538:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "5538:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 449,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "5602:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 448,
                      "name": "claimRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "5589:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5589:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "5589:20:1"
                },
                {
                  "expression": {
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 452,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "5664:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 456,
                          "indexExpression": {
                            "id": 453,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "5672:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5664:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 457,
                        "indexExpression": {
                          "expression": {
                            "id": 454,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5680:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5680:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5664:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "5664:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 459,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "5702:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "5664:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "5664:45:1"
                },
                {
                  "assignments": [
                    464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 464,
                      "mutability": "mutable",
                      "name": "maj",
                      "nameLocation": "5745:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 499,
                      "src": "5722:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                        "typeString": "struct Staking.majStackingPool"
                      },
                      "typeName": {
                        "id": 463,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 462,
                          "name": "majStackingPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "5722:15:1"
                        },
                        "referencedDeclaration": 61,
                        "src": "5722:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage_ptr",
                          "typeString": "struct Staking.majStackingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 475,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 466,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5781:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5781:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 468,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "5811:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                "typeString": "mapping(address => struct Staking.Token storage ref)"
                              }
                            },
                            "id": 470,
                            "indexExpression": {
                              "id": 469,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "5817:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5811:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$39_storage",
                              "typeString": "struct Staking.Token storage ref"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "5811:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 472,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "5839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "5811:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 465,
                      "name": "majStackingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5751:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_majStackingPool_$61_storage_ptr_$",
                        "typeString": "type(struct Staking.majStackingPool storage pointer)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                      "typeString": "struct Staking.majStackingPool memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5722:135:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 480,
                        "name": "maj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "5894:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_majStackingPool_$61_memory_ptr",
                          "typeString": "struct Staking.majStackingPool memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 476,
                          "name": "stakingTimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "5868:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                          }
                        },
                        "id": 478,
                        "indexExpression": {
                          "id": 477,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "5881:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5868:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                          "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5868:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$_t_struct$_majStackingPool_$61_storage_$returns$__$bound_to$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Staking.majStackingPool storage ref[] storage pointer,struct Staking.majStackingPool storage ref)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5868:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "5868:30:1"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 483,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5911:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 485,
                        "indexExpression": {
                          "id": 484,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "5917:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5911:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$39_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "5911:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 487,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "5940:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "5911:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 491,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5973:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5973:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 493,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "5985:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 494,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "5993:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 495,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "6002:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6002:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 490,
                      "name": "Unstake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "5965:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint128,uint256)"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5965:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "EmitStatement",
                  "src": "5960:58:1"
                }
              ]
            },
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "4900:144:1",
              "text": " @notice Withdraw fund into this contract\n @param _token to unstake\n @param _amount number of token to unstake"
            },
            "functionSelector": "1d9b0783",
            "id": 500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "5059:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5076:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "5068:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5068:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5093:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "5085:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5085:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5067:33:1"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5110:0:1"
            },
            "scope": 925,
            "src": "5050:976:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "6282:218:1",
              "statements": [
                {
                  "assignments": [
                    510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 510,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "6315:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 526,
                      "src": "6293:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$971",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 509,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 508,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 971,
                          "src": "6293:21:1"
                        },
                        "referencedDeclaration": 971,
                        "src": "6293:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$971",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 512,
                        "name": "_pairChainlinkAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "6363:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 511,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "6327:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$971_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6327:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$971",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6293:102:1"
                },
                {
                  "assignments": [
                    null,
                    516,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "6416:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 526,
                      "src": "6409:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6409:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 520,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 517,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "6431:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$971",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 970,
                      "src": "6431:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6431:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6406:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 523,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "6486:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6478:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 521,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6478:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6478:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 507,
                  "id": 525,
                  "nodeType": "Return",
                  "src": "6471:21:1"
                }
              ]
            },
            "documentation": {
              "id": 501,
              "nodeType": "StructuredDocumentation",
              "src": "6034:123:1",
              "text": " @notice Get price of token with Chainlink\n @param _pairChainlinkAddress is the pool adress in $"
            },
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLatestPrice",
            "nameLocation": "6172:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "_pairChainlinkAddress",
                  "nameLocation": "6196:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "6188:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6188:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6187:31:1"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "6268:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6268:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6267:9:1"
            },
            "scope": 925,
            "src": "6163:337:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "6775:2381:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 537,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "6803:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 536,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "6794:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6794:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6812:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        },
                        "value": "You are not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6786:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6786:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "6786:49:1"
                },
                {
                  "assignments": [
                    543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 543,
                      "mutability": "mutable",
                      "name": "tokenPrice",
                      "nameLocation": "6854:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "6846:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 542,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6846:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 550,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 545,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "6883:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 547,
                          "indexExpression": {
                            "id": 546,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "6889:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6883:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$39_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "6883:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 544,
                      "name": "_getLatestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "6867:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6867:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6846:64:1"
                },
                {
                  "assignments": [
                    552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 552,
                      "mutability": "mutable",
                      "name": "aprPerSeconds",
                      "nameLocation": "6929:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "6921:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 551,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6921:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 570,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 553,
                                    "name": "pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "6947:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                      "typeString": "mapping(address => struct Staking.Token storage ref)"
                                    }
                                  },
                                  "id": 555,
                                  "indexExpression": {
                                    "id": 554,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 530,
                                    "src": "6953:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6947:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Token_$39_storage",
                                    "typeString": "struct Staking.Token storage ref"
                                  }
                                },
                                "id": 556,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "APR",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36,
                                "src": "6947:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 557,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6946:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6968:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "38",
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6972:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "src": "6968:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          },
                          "src": "6946:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 562,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6945:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_31536000_by_1",
                            "typeString": "int_const 31536000"
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_8760_by_1",
                              "typeString": "int_const 8760"
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "333635",
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6991:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_365_by_1",
                                "typeString": "int_const 365"
                              },
                              "value": "365"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6997:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "6991:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8760_by_1",
                              "typeString": "int_const 8760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33363030",
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7002:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3600_by_1",
                              "typeString": "int_const 3600"
                            },
                            "value": "3600"
                          },
                          "src": "6991:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31536000_by_1",
                            "typeString": "int_const 31536000"
                          }
                        }
                      ],
                      "id": 568,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6990:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_31536000_by_1",
                        "typeString": "int_const 31536000"
                      }
                    },
                    "src": "6945:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6921:86:1"
                },
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "mutability": "mutable",
                      "name": "rewardspartoOfPool",
                      "nameLocation": "7026:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "7018:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7018:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 573,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7018:26:1"
                },
                {
                  "assignments": [
                    575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 575,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "7063:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "7055:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 574,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7055:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 580,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 576,
                        "name": "stakingTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "7067:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                        }
                      },
                      "id": 578,
                      "indexExpression": {
                        "id": 577,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "7080:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7067:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                        "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7067:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7055:39:1"
                },
                {
                  "assignments": [
                    582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 582,
                      "mutability": "mutable",
                      "name": "blockIndex",
                      "nameLocation": "7113:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "7105:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7105:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 583,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7105:18:1"
                },
                {
                  "body": {
                    "id": 614,
                    "nodeType": "Block",
                    "src": "7166:199:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 594,
                                  "name": "stakingTimes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "7203:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                  }
                                },
                                "id": 596,
                                "indexExpression": {
                                  "id": 595,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "7216:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7203:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                  "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                }
                              },
                              "id": 598,
                              "indexExpression": {
                                "id": 597,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 585,
                                "src": "7224:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7203:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                "typeString": "struct Staking.majStackingPool storage ref"
                              }
                            },
                            "id": 599,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "blockDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "7203:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 600,
                                  "name": "stakers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "7257:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                  }
                                },
                                "id": 602,
                                "indexExpression": {
                                  "id": 601,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "7265:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7257:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                  "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                }
                              },
                              "id": 605,
                              "indexExpression": {
                                "expression": {
                                  "id": 603,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "7273:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7273:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7257:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$49_storage",
                                "typeString": "struct Staking.Staker storage ref"
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48,
                            "src": "7257:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7203:86:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 613,
                        "nodeType": "IfStatement",
                        "src": "7181:173:1",
                        "trueBody": {
                          "id": 612,
                          "nodeType": "Block",
                          "src": "7305:49:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 608,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 582,
                                  "src": "7324:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 609,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 585,
                                  "src": "7337:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7324:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 611,
                              "nodeType": "ExpressionStatement",
                              "src": "7324:14:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 588,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "7154:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 589,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "7158:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7154:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 615,
                  "initializationExpression": {
                    "assignments": [
                      585
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 585,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7147:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 615,
                        "src": "7139:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 584,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7139:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 587,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7151:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7139:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7161:3:1",
                      "subExpression": {
                        "id": 591,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "7161:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 593,
                    "nodeType": "ExpressionStatement",
                    "src": "7161:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "7134:231:1"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 616,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "7381:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                        }
                      },
                      "id": 618,
                      "indexExpression": {
                        "id": 617,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "7387:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7381:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$39_storage",
                        "typeString": "struct Staking.Token storage ref"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activePool",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "7381:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 821,
                    "nodeType": "Block",
                    "src": "8228:854:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 719,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "8247:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8252:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8247:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 819,
                          "nodeType": "Block",
                          "src": "8398:673:1",
                          "statements": [
                            {
                              "body": {
                                "id": 786,
                                "nodeType": "Block",
                                "src": "8462:330:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 784,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 751,
                                        "name": "rewardspartoOfPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 572,
                                        "src": "8485:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 783,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 775,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 766,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 752,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 67,
                                                            "src": "8534:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 754,
                                                          "indexExpression": {
                                                            "id": 753,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 530,
                                                            "src": "8547:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "8534:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                            "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 758,
                                                        "indexExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 757,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 755,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 740,
                                                            "src": "8555:1:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "+",
                                                          "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 756,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "8559:1:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_1_by_1",
                                                              "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                          },
                                                          "src": "8555:5:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "8534:27:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                          "typeString": "struct Staking.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 759,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 58,
                                                      "src": "8534:37:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 760,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 67,
                                                            "src": "8603:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 762,
                                                          "indexExpression": {
                                                            "id": 761,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 530,
                                                            "src": "8616:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "8603:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                            "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 764,
                                                        "indexExpression": {
                                                          "id": 763,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 740,
                                                          "src": "8624:1:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "8603:23:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                          "typeString": "struct Staking.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 765,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 58,
                                                      "src": "8603:33:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "8534:102:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 767,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "8533:104:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 768,
                                                      "name": "stakers",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 56,
                                                      "src": "8669:7:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                        "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                                      }
                                                    },
                                                    "id": 770,
                                                    "indexExpression": {
                                                      "id": 769,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 530,
                                                      "src": "8677:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "8669:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                                      "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                                    }
                                                  },
                                                  "id": 773,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 771,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "8685:3:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 772,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "8685:10:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8669:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Staker_$49_storage",
                                                    "typeString": "struct Staking.Staker storage ref"
                                                  }
                                                },
                                                "id": 774,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 46,
                                                "src": "8669:34:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              },
                                              "src": "8533:170:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 776,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "8532:172:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 777,
                                                "name": "stakingTimes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 67,
                                                "src": "8732:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                  "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                }
                                              },
                                              "id": 779,
                                              "indexExpression": {
                                                "id": 778,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 530,
                                                "src": "8745:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8732:20:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                              }
                                            },
                                            "id": 781,
                                            "indexExpression": {
                                              "id": 780,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 740,
                                              "src": "8753:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8732:23:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                              "typeString": "struct Staking.majStackingPool storage ref"
                                            }
                                          },
                                          "id": 782,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "stakingTotalPool",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 60,
                                          "src": "8732:40:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "8532:240:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8485:287:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 785,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8485:287:1"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 743,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 740,
                                  "src": "8446:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 744,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 575,
                                    "src": "8450:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8454:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "8450:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8446:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 787,
                              "initializationExpression": {
                                "assignments": [
                                  740
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 740,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "8430:1:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 787,
                                    "src": "8422:9:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 739,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8422:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 742,
                                "initialValue": {
                                  "id": 741,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 582,
                                  "src": "8434:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "8422:22:1"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "8457:3:1",
                                  "subExpression": {
                                    "id": 748,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 740,
                                    "src": "8457:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 750,
                                "nodeType": "ExpressionStatement",
                                "src": "8457:3:1"
                              },
                              "nodeType": "ForStatement",
                              "src": "8417:375:1"
                            },
                            {
                              "expression": {
                                "id": 817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 788,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 572,
                                  "src": "8810:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 810,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 801,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 789,
                                                    "name": "pools",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 44,
                                                    "src": "8855:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                                      "typeString": "mapping(address => struct Staking.Token storage ref)"
                                                    }
                                                  },
                                                  "id": 791,
                                                  "indexExpression": {
                                                    "id": 790,
                                                    "name": "_token",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 530,
                                                    "src": "8861:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8855:13:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Token_$39_storage",
                                                    "typeString": "struct Staking.Token storage ref"
                                                  }
                                                },
                                                "id": 792,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "dateStop",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 34,
                                                "src": "8855:22:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 793,
                                                      "name": "stakingTimes",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 67,
                                                      "src": "8905:12:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                        "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                      }
                                                    },
                                                    "id": 795,
                                                    "indexExpression": {
                                                      "id": 794,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 530,
                                                      "src": "8918:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "8905:20:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                      "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 799,
                                                  "indexExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 798,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 796,
                                                      "name": "x",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 575,
                                                      "src": "8926:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "hexValue": "31",
                                                      "id": 797,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "8930:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "src": "8926:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8905:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                    "typeString": "struct Staking.majStackingPool storage ref"
                                                  }
                                                },
                                                "id": 800,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blockDate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 58,
                                                "src": "8905:37:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "8855:87:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 802,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "8854:89:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 803,
                                                "name": "stakers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 56,
                                                "src": "8971:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                  "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                                }
                                              },
                                              "id": 805,
                                              "indexExpression": {
                                                "id": 804,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 530,
                                                "src": "8979:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8971:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                                "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                              }
                                            },
                                            "id": 808,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 806,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "8987:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 807,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "8987:10:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8971:27:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Staker_$49_storage",
                                              "typeString": "struct Staking.Staker storage ref"
                                            }
                                          },
                                          "id": 809,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 46,
                                          "src": "8971:34:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "8854:151:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 811,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "8853:153:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 812,
                                        "name": "pools",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44,
                                        "src": "9030:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                                        }
                                      },
                                      "id": 814,
                                      "indexExpression": {
                                        "id": 813,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 530,
                                        "src": "9036:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9030:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$39_storage",
                                        "typeString": "struct Staking.Token storage ref"
                                      }
                                    },
                                    "id": 815,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "9030:25:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "8853:202:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8810:245:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 818,
                              "nodeType": "ExpressionStatement",
                              "src": "8810:245:1"
                            }
                          ]
                        },
                        "id": 820,
                        "nodeType": "IfStatement",
                        "src": "8243:828:1",
                        "trueBody": {
                          "id": 738,
                          "nodeType": "Block",
                          "src": "8255:137:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 722,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 572,
                                  "src": "8274:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 734,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 723,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 44,
                                            "src": "8297:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                                            }
                                          },
                                          "id": 725,
                                          "indexExpression": {
                                            "id": 724,
                                            "name": "_token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 530,
                                            "src": "8303:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8297:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Token_$39_storage",
                                            "typeString": "struct Staking.Token storage ref"
                                          }
                                        },
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "dateStop",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 34,
                                        "src": "8297:22:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 727,
                                              "name": "stakers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 56,
                                              "src": "8343:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                              }
                                            },
                                            "id": 729,
                                            "indexExpression": {
                                              "id": 728,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 530,
                                              "src": "8351:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8343:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                              "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                            }
                                          },
                                          "id": 732,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 730,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "8359:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 731,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "8359:10:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8343:27:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$49_storage",
                                            "typeString": "struct Staking.Staker storage ref"
                                          }
                                        },
                                        "id": 733,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "date",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "8343:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8297:78:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 735,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8296:80:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8274:102:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 737,
                              "nodeType": "ExpressionStatement",
                              "src": "8274:102:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 822,
                  "nodeType": "IfStatement",
                  "src": "7377:1705:1",
                  "trueBody": {
                    "id": 718,
                    "nodeType": "Block",
                    "src": "7407:815:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 620,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "7426:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7431:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7426:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 716,
                          "nodeType": "Block",
                          "src": "7570:641:1",
                          "statements": [
                            {
                              "body": {
                                "id": 685,
                                "nodeType": "Block",
                                "src": "7634:330:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 683,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 650,
                                        "name": "rewardspartoOfPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 572,
                                        "src": "7657:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 682,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 674,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 665,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 651,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 67,
                                                            "src": "7706:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 653,
                                                          "indexExpression": {
                                                            "id": 652,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 530,
                                                            "src": "7719:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "7706:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                            "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 657,
                                                        "indexExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 656,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 654,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 639,
                                                            "src": "7727:1:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "+",
                                                          "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 655,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "7731:1:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_1_by_1",
                                                              "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                          },
                                                          "src": "7727:5:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "7706:27:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                          "typeString": "struct Staking.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 658,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 58,
                                                      "src": "7706:37:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 659,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 67,
                                                            "src": "7775:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 661,
                                                          "indexExpression": {
                                                            "id": 660,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 530,
                                                            "src": "7788:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "7775:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                            "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 663,
                                                        "indexExpression": {
                                                          "id": 662,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 639,
                                                          "src": "7796:1:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "7775:23:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                          "typeString": "struct Staking.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 664,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 58,
                                                      "src": "7775:33:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "7706:102:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 666,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "7705:104:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 667,
                                                      "name": "stakers",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 56,
                                                      "src": "7841:7:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                        "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                                      }
                                                    },
                                                    "id": 669,
                                                    "indexExpression": {
                                                      "id": 668,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 530,
                                                      "src": "7849:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "7841:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                                      "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                                    }
                                                  },
                                                  "id": 672,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 670,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "7857:3:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 671,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "7857:10:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "7841:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Staker_$49_storage",
                                                    "typeString": "struct Staking.Staker storage ref"
                                                  }
                                                },
                                                "id": 673,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 46,
                                                "src": "7841:34:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              },
                                              "src": "7705:170:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 675,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "7704:172:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 676,
                                                "name": "stakingTimes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 67,
                                                "src": "7904:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                  "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                }
                                              },
                                              "id": 678,
                                              "indexExpression": {
                                                "id": 677,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 530,
                                                "src": "7917:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "7904:20:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                              }
                                            },
                                            "id": 680,
                                            "indexExpression": {
                                              "id": 679,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 639,
                                              "src": "7925:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7904:23:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                              "typeString": "struct Staking.majStackingPool storage ref"
                                            }
                                          },
                                          "id": 681,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "stakingTotalPool",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 60,
                                          "src": "7904:40:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "7704:240:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7657:287:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 684,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7657:287:1"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 642,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 639,
                                  "src": "7618:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 643,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 575,
                                    "src": "7622:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 644,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7626:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "7622:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7618:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 686,
                              "initializationExpression": {
                                "assignments": [
                                  639
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 639,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "7602:1:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 686,
                                    "src": "7594:9:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 638,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7594:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 641,
                                "initialValue": {
                                  "id": 640,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 582,
                                  "src": "7606:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "7594:22:1"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 648,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "7629:3:1",
                                  "subExpression": {
                                    "id": 647,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 639,
                                    "src": "7629:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 649,
                                "nodeType": "ExpressionStatement",
                                "src": "7629:3:1"
                              },
                              "nodeType": "ForStatement",
                              "src": "7589:375:1"
                            },
                            {
                              "expression": {
                                "id": 714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 687,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 572,
                                  "src": "7982:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 707,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 698,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 688,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967292,
                                                  "src": "8027:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 689,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "8027:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 690,
                                                      "name": "stakingTimes",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 67,
                                                      "src": "8045:12:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage_$",
                                                        "typeString": "mapping(address => struct Staking.majStackingPool storage ref[] storage ref)"
                                                      }
                                                    },
                                                    "id": 692,
                                                    "indexExpression": {
                                                      "id": 691,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 530,
                                                      "src": "8058:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "8045:20:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_majStackingPool_$61_storage_$dyn_storage",
                                                      "typeString": "struct Staking.majStackingPool storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 696,
                                                  "indexExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 695,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 693,
                                                      "name": "x",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 575,
                                                      "src": "8066:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "hexValue": "31",
                                                      "id": 694,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "8070:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "src": "8066:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8045:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_majStackingPool_$61_storage",
                                                    "typeString": "struct Staking.majStackingPool storage ref"
                                                  }
                                                },
                                                "id": 697,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blockDate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 58,
                                                "src": "8045:37:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "8027:55:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 699,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "8026:57:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 700,
                                                "name": "stakers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 56,
                                                "src": "8111:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                  "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                                }
                                              },
                                              "id": 702,
                                              "indexExpression": {
                                                "id": 701,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 530,
                                                "src": "8119:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8111:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                                "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                              }
                                            },
                                            "id": 705,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 703,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "8127:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 704,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "8127:10:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8111:27:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Staker_$49_storage",
                                              "typeString": "struct Staking.Staker storage ref"
                                            }
                                          },
                                          "id": 706,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 46,
                                          "src": "8111:34:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "8026:119:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 708,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "8025:121:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 709,
                                        "name": "pools",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44,
                                        "src": "8170:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                                        }
                                      },
                                      "id": 711,
                                      "indexExpression": {
                                        "id": 710,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 530,
                                        "src": "8176:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8170:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$39_storage",
                                        "typeString": "struct Staking.Token storage ref"
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "8170:25:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "8025:170:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7982:213:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 715,
                              "nodeType": "ExpressionStatement",
                              "src": "7982:213:1"
                            }
                          ]
                        },
                        "id": 717,
                        "nodeType": "IfStatement",
                        "src": "7422:789:1",
                        "trueBody": {
                          "id": 637,
                          "nodeType": "Block",
                          "src": "7434:130:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 623,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 572,
                                  "src": "7453:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 624,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "7476:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 625,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "7476:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 626,
                                              "name": "stakers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 56,
                                              "src": "7515:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                                                "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                                              }
                                            },
                                            "id": 628,
                                            "indexExpression": {
                                              "id": 627,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 530,
                                              "src": "7523:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7515:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                                              "typeString": "mapping(address => struct Staking.Staker storage ref)"
                                            }
                                          },
                                          "id": 631,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 629,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "7531:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 630,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "7531:10:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7515:27:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$49_storage",
                                            "typeString": "struct Staking.Staker storage ref"
                                          }
                                        },
                                        "id": 632,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "date",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "7515:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7476:71:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 634,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7475:73:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7453:95:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 636,
                              "nodeType": "ExpressionStatement",
                              "src": "7453:95:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 823,
                        "name": "rewardspartoOfPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "9101:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 824,
                        "name": "tokenPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "9122:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9101:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 826,
                      "name": "aprPerSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "9135:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9101:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 534,
                  "id": 828,
                  "nodeType": "Return",
                  "src": "9094:54:1"
                }
              ]
            },
            "documentation": {
              "id": 528,
              "nodeType": "StructuredDocumentation",
              "src": "6508:190:1",
              "text": " @notice Calculate rewards\n @dev tokenPrice use Chainlink Oracle\n @param _token is the token of pool to calculate rewards\n @return rewards in dollars"
            },
            "functionSelector": "d82e3962",
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateReward",
            "nameLocation": "6713:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6737:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "6729:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6729:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6728:16:1"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "6766:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6766:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6765:9:1"
            },
            "scope": 925,
            "src": "6704:2452:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "9388:299:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 838,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "9416:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 837,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "9407:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9407:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742061207374616b6572",
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9425:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        },
                        "value": "You are not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9a98e6967b9ee0a602b8de261e5fdf77c20165270ca3dce3483e5a613f5a67c",
                          "typeString": "literal_string \"You are not a staker\""
                        }
                      ],
                      "id": 836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9399:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9399:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "9399:49:1"
                },
                {
                  "assignments": [
                    844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "mutability": "mutable",
                      "name": "amoutToClaim",
                      "nameLocation": "9469:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 868,
                      "src": "9461:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9461:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 850,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 846,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 833,
                          "src": "9500:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 845,
                        "name": "calculateReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "9484:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9484:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 848,
                      "name": "priceTokenRewardInDollar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "9523:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9484:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9461:86:1"
                },
                {
                  "expression": {
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 851,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9558:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 855,
                          "indexExpression": {
                            "id": 852,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "9566:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9558:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 856,
                        "indexExpression": {
                          "expression": {
                            "id": 853,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9574:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9574:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9558:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 857,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "9558:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 858,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "9593:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9593:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9558:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "9558:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 863,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9654:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9654:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 865,
                        "name": "amoutToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "9666:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 862,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "9648:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9648:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "9648:31:1"
                }
              ]
            },
            "documentation": {
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "9164:173:1",
              "text": " @notice Claim your rewards\n @dev Available only for stakers who have rewards to claim\n @param _token is token of the pool to claim rewards"
            },
            "functionSelector": "ef5cfb8c",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "9352:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "9373:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "9365:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9365:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9364:16:1"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9388:0:1"
            },
            "scope": 925,
            "src": "9343:344:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "9904:60:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 877,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "9922:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                          }
                        },
                        "id": 879,
                        "indexExpression": {
                          "id": 878,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "9930:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9922:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                          "typeString": "mapping(address => struct Staking.Staker storage ref)"
                        }
                      },
                      "id": 882,
                      "indexExpression": {
                        "expression": {
                          "id": 880,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9938:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9938:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9922:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$49_storage",
                        "typeString": "struct Staking.Staker storage ref"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 46,
                    "src": "9922:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 876,
                  "id": 884,
                  "nodeType": "Return",
                  "src": "9915:41:1"
                }
              ]
            },
            "documentation": {
              "id": 870,
              "nodeType": "StructuredDocumentation",
              "src": "9695:135:1",
              "text": " @notice Check amount of a stacked pool from msg.sender\n @param _token is address token of the pool to check"
            },
            "functionSelector": "11c88633",
            "id": 886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaking",
            "nameLocation": "9845:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "9864:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "9856:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9856:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9855:16:1"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "9895:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9895:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9894:9:1"
            },
            "scope": 925,
            "src": "9836:128:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 909,
              "nodeType": "Block",
              "src": "10220:123:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 894,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "10235:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Staking.Staker storage ref))"
                            }
                          },
                          "id": 896,
                          "indexExpression": {
                            "id": 895,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 889,
                            "src": "10243:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10235:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$49_storage_$",
                            "typeString": "mapping(address => struct Staking.Staker storage ref)"
                          }
                        },
                        "id": 899,
                        "indexExpression": {
                          "expression": {
                            "id": 897,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10251:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10251:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10235:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$49_storage",
                          "typeString": "struct Staking.Staker storage ref"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "10235:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10272:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10235:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 906,
                  "nodeType": "IfStatement",
                  "src": "10231:82:1",
                  "trueBody": {
                    "id": 905,
                    "nodeType": "Block",
                    "src": "10275:38:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10297:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 893,
                        "id": 904,
                        "nodeType": "Return",
                        "src": "10290:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10330:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 893,
                  "id": 908,
                  "nodeType": "Return",
                  "src": "10323:12:1"
                }
              ]
            },
            "documentation": {
              "id": 887,
              "nodeType": "StructuredDocumentation",
              "src": "9972:181:1",
              "text": " @notice Check if msg.sender is a staker of a pool\n @dev Can be used to show the staked pools on the Dapp\n @param _token is address token of a pool"
            },
            "functionSelector": "6f1e8533",
            "id": 910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nameLocation": "10168:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 889,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "10185:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "10177:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10177:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10176:16:1"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "10214:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10214:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10213:6:1"
            },
            "scope": 925,
            "src": "10159:184:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 923,
              "nodeType": "Block",
              "src": "10534:51:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 918,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "10552:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$39_storage_$",
                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                        }
                      },
                      "id": 920,
                      "indexExpression": {
                        "id": 919,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "10558:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10552:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$39_storage",
                        "typeString": "struct Staking.Token storage ref"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "totalStakes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 38,
                    "src": "10552:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 917,
                  "id": 922,
                  "nodeType": "Return",
                  "src": "10545:32:1"
                }
              ]
            },
            "documentation": {
              "id": 911,
              "nodeType": "StructuredDocumentation",
              "src": "10351:104:1",
              "text": " @notice Check total amount of a stacked pool\n @param _token is address token"
            },
            "functionSelector": "7ae15a73",
            "id": 924,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStaking",
            "nameLocation": "10470:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "10494:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 924,
                  "src": "10486:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10486:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10485:16:1"
            },
            "returnParameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 924,
                  "src": "10525:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10525:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10524:9:1"
            },
            "scope": 925,
            "src": "10461:124:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 926,
        "src": "425:10165:1",
        "usedErrors": []
      }
    ],
    "src": "33:10557:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "APR",
              "type": "uint256"
            }
          ],
          "name": "NewPool",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x63602d0ecc7b3a0ef7ff1a116e23056662d64280355ba8031b6d0d767c4b4458": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Stake",
          "type": "event"
        },
        "0x95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "StopPool",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x18edd09e80386cd99df397e2e0d87d2bb259423eae08645e776321a36fe680ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Unstake",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x47115A5299CBCe8EFb0fA08A4C02A2C46F037Ec4",
      "transactionHash": "0x0dbf6a7d0d23f291a50c01a7b616812076ae8420da7f978275275e2e527d44e5"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x527d1881d70Ef900EBdDD48d8ca43d61a65f959b",
      "transactionHash": "0x776bddf8c4f6cd47fe933da753ff3f87ac7c739bc9731803dd81ebddf19a844e"
    },
    "1659385803238": {
      "events": {},
      "links": {},
      "address": "0x19D2E914B62A27b98674dA427690Ed970ABC9732",
      "transactionHash": "0xb3f53be62845ed22848367fbb1e6fad75572a120989ae0d761707ef24236d6f6"
    },
    "1659387315543": {
      "events": {},
      "links": {},
      "address": "0x1733aBC3B556Bfb08C36760c9531E84422Fb52d8",
      "transactionHash": "0x2393fb83978aebdb71669a586da4490b8a11466cd3c43a6adc45c19023fa6163"
    },
    "1659625851725": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "APR",
              "type": "uint256"
            }
          ],
          "name": "NewPool",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Stake",
          "type": "event"
        },
        "0x95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "StopPool",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xbd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Unstake",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9a5De9e801f55EDdFCAB62A390a49624d8BC3bC9",
      "transactionHash": "0x57632a6a8a5b18fc001b532e4ac81e2cf30162adb16a8582a75a7f127554c096"
    },
    "1659633794916": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "APR",
              "type": "uint256"
            }
          ],
          "name": "NewPool",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Stake",
          "type": "event"
        },
        "0x95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "StopPool",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xbd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Unstake",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2311123A80CCFd3aF17CbFC4D2953a3dee90b232",
      "transactionHash": "0x49865312a5617ec77c46601cfa6a30f91f00a8553e44152ea402e39fa498f31e"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-08-04T18:46:00.182Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Anthony - Etienne - Jean-Baptiste",
    "kind": "dev",
    "methods": {
      "addPool(address,uint128,address)": {
        "details": "Available only for owner",
        "params": {
          "_addressPrice": "is Chainlink pool",
          "_apr": "is APR of the pool",
          "_token": "is token address"
        }
      },
      "addStake(uint128,address)": {
        "params": {
          "_amount": "is the amount of token to add",
          "_token": "is address token of the pool"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "calculateReward(address)": {
        "details": "tokenPrice use Chainlink Oracle",
        "params": {
          "_token": "is the token of pool to calculate rewards"
        },
        "returns": {
          "_0": "rewards in dollars"
        }
      },
      "claimRewards(address)": {
        "details": "Available only for stakers who have rewards to claim",
        "params": {
          "_token": "is token of the pool to claim rewards"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getStaking(address)": {
        "params": {
          "_token": "is address token of the pool to check"
        }
      },
      "getTotalStaking(address)": {
        "params": {
          "_token": "is address token"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isStaker(address)": {
        "details": "Can be used to show the staked pools on the Dapp",
        "params": {
          "_token": "is address token of a pool"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake(uint128,address)": {
        "details": "Emit event after stake",
        "params": {
          "_amount": "to stake",
          "_token": "to stake"
        }
      },
      "stopPool(address)": {
        "details": "Available only for owner",
        "params": {
          "_token": "is token address"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint128,address)": {
        "params": {
          "_amount": "number of token to unstake",
          "_token": "to unstake"
        }
      }
    },
    "title": "Staking : a Staking Plateform !",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addPool(address,uint128,address)": {
        "notice": "Make available token address to add pool"
      },
      "addStake(uint128,address)": {
        "notice": "Add more token to a staking pool"
      },
      "calculateReward(address)": {
        "notice": "Calculate rewards"
      },
      "claimRewards(address)": {
        "notice": "Claim your rewards"
      },
      "getStaking(address)": {
        "notice": "Check amount of a stacked pool from msg.sender"
      },
      "getTotalStaking(address)": {
        "notice": "Check total amount of a stacked pool"
      },
      "isStaker(address)": {
        "notice": "Check if msg.sender is a staker of a pool"
      },
      "stake(uint128,address)": {
        "notice": "Stake fund into this contract"
      },
      "stopPool(address)": {
        "notice": "disable a pool"
      },
      "withdraw(uint128,address)": {
        "notice": "Withdraw fund into this contract"
      }
    },
    "version": 1
  }
}