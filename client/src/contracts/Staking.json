{
  "contractName": "Staking",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "APR",
          "type": "uint256"
        }
      ],
      "name": "NewPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "StopPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_apr",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_addressPrice",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stopPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "calculateReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getStaking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isStaker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTotalStaking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"APR\",\"type\":\"uint256\"}],\"name\":\"NewPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"StopPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_apr\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_addressPrice\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTotalStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"stopPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Anthony - Etienne - Jean-Baptiste\",\"kind\":\"dev\",\"methods\":{\"addPool(address,uint128,address)\":{\"details\":\"Available only for owner\",\"params\":{\"_addressPrice\":\"is Chainlink pool\",\"_apr\":\"is APR of the pool\",\"_token\":\"is token address\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculateReward(address)\":{\"details\":\"tokenPrice use Chainlink Oracle\",\"params\":{\"_token\":\"is the token of pool to calculate rewards\"},\"returns\":{\"_0\":\"rewards in dollars\"}},\"claimRewards(address)\":{\"details\":\"Available only for stakers who have rewards to claim\",\"params\":{\"_token\":\"is token of the pool to claim rewards\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getStaking(address)\":{\"params\":{\"_token\":\"is address token of the pool to check\"}},\"getTotalStaking(address)\":{\"params\":{\"_token\":\"is address token\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isStaker(address)\":{\"details\":\"Can be used to show the staked pools on the Dapp\",\"params\":{\"_token\":\"is address token of a pool\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint128,address)\":{\"details\":\"Emit event after stake\",\"params\":{\"_amount\":\"to stake\",\"_token\":\"to stake\"}},\"stopPool(address)\":{\"details\":\"Available only for owner\",\"params\":{\"_token\":\"is token address\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint128,address)\":{\"params\":{\"_amount\":\"number of token to unstake\",\"_token\":\"to unstake\"}}},\"title\":\"Staking : a Staking Plateform !\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPool(address,uint128,address)\":{\"notice\":\"Make available token address to add pool\"},\"calculateReward(address)\":{\"notice\":\"Calculate rewards\"},\"claimRewards(address)\":{\"notice\":\"Claim your rewards\"},\"getStaking(address)\":{\"notice\":\"Check amount of a stacked pool from msg.sender\"},\"getTotalStaking(address)\":{\"notice\":\"Check total amount of a stacked pool\"},\"isStaker(address)\":{\"notice\":\"Check if msg.sender is a staker of a pool\"},\"stake(uint128,address)\":{\"notice\":\"Stake fund into this contract\"},\"stopPool(address)\":{\"notice\":\"disable a pool\"},\"withdraw(uint128,address)\":{\"notice\":\"Withdraw fund into this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CrowdV.sol\":{\"keccak256\":\"0xdf8923c49bcd1fcac995884009370d4525dedf97794733b6eee62489664644c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44033844f03dc01d7fbafaca43a37fe182d590d061d4244dbb376e5ad0110a47\",\"dweb:/ipfs/QmbDnamX1d9whmAYjTx5HEYzwekV5BvNuebU4uDXKSmc2Y\"]},\"project:/contracts/StackingPool.sol\":{\"keccak256\":\"0xb44f15709f42e28fe6e459c72e8ba952d503b8b939d15de3cd4ea5985c4852ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc95e254da46260b78226edb0a7891afc8550f9ffbc03e31956ffc28d4dabd60\",\"dweb:/ipfs/QmYmAKt9BmRLMp1mdcUYe9CPXXR3ykDHFkfM2j1Ya8JBYo\"]},\"project:/contracts/Staking.sol\":{\"keccak256\":\"0x8086dc7586042b6acac1a948da39e62b7cae9f6e1c5416cffdf1446486be787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abf7a3e02564c5338c427f1f39580f69b6762bc48a98a8ba2179f0c20bb99cea\",\"dweb:/ipfs/QmeEcASbNQjaFNR4ERNjcDwyTnSykPCYUBPZZ6y2KFeXYu\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:396:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:325:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "93:1:10",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "96:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "89:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "79:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "110:38:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "140:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "146:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "136:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "136:12:10"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "114:18:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "187:31:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "189:27:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "203:6:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "211:4:10",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "199:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "199:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "189:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "167:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:26:10"
                  },
                  "nodeType": "YulIf",
                  "src": "157:61:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:111:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "305:3:10",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "310:10:10",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "301:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "301:20:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "291:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "291:31:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "291:31:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "342:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "345:4:10",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "335:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "335:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "335:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "233:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "264:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "253:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "253:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:38:10"
                  },
                  "nodeType": "YulIf",
                  "src": "227:161:10"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "49:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "58:6:10",
                "type": ""
              }
            ],
            "src": "14:380:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14361:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:10",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:10",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:10"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:10",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:10"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:10"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:10"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:10"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:10",
                    "statements": []
                  },
                  "src": "294:140:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:10"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:10",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:10",
                "type": ""
              }
            ],
            "src": "14:597:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "684:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "675:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "767:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "769:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "769:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "769:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "726:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "737:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "752:3:10",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "757:1:10",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "748:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "748:11:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "761:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "744:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "744:19:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "733:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "733:31:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "723:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:42:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:50:10"
                  },
                  "nodeType": "YulIf",
                  "src": "713:70:10"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:10",
                "type": ""
              }
            ],
            "src": "616:173:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "881:167:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "927:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "939:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "929:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "929:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "929:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "902:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "911:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "898:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "894:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "891:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "952:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "981:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "962:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1000:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1027:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1038:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1010:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "850:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "862:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "870:6:10",
                "type": ""
              }
            ],
            "src": "794:254:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:92:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1170:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1166:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1158:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1200:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1225:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1218:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1218:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1211:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1211:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:41:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1117:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1128:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1139:4:10",
                "type": ""
              }
            ],
            "src": "1053:187:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1315:116:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1361:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1370:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1373:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1363:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1363:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1363:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1336:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1345:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1332:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1332:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1357:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1328:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1328:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1325:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1386:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1415:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1396:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1386:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1281:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1292:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1304:6:10",
                "type": ""
              }
            ],
            "src": "1245:186:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1537:76:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1547:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1559:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1570:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1555:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1555:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1547:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1589:9:10"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1600:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1582:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:25:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1582:25:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1506:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1517:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1528:4:10",
                "type": ""
              }
            ],
            "src": "1436:177:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1667:139:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1677:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1699:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1686:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1677:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1784:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1793:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1796:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1786:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1786:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1786:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1728:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1739:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1746:34:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1735:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1735:46:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1725:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1725:57:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1718:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1718:65:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1715:85:10"
                }
              ]
            },
            "name": "abi_decode_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1646:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1657:5:10",
                "type": ""
              }
            ],
            "src": "1618:188:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1898:173:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1944:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1953:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1956:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1946:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1946:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1946:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1919:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1928:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1915:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1915:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1940:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1911:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1908:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1969:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1998:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "1979:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1979:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1969:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2017:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2050:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2061:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2046:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2027:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2027:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2017:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint128t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1856:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1867:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1879:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1887:6:10",
                "type": ""
              }
            ],
            "src": "1811:260:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2180:224:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2226:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2235:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2238:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2228:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2228:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2228:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2201:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2210:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2197:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2197:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2222:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2193:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2193:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2190:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2251:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2280:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2261:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2251:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2299:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2343:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2328:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2328:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2309:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2309:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2299:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2356:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2383:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2394:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2379:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2379:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2366:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2356:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2130:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2141:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2153:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2161:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2169:6:10",
                "type": ""
              }
            ],
            "src": "2076:328:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2513:230:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2559:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2568:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2571:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2561:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2561:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2561:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2534:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2543:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2530:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2555:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2526:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2526:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2523:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2584:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2613:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2594:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2594:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2584:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2632:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2665:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2676:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2661:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2661:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "2642:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2642:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2632:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2689:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2722:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2733:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2718:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2718:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2699:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2689:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint128t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2463:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2474:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2486:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2494:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2502:6:10",
                "type": ""
              }
            ],
            "src": "2409:334:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2845:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2855:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2867:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2878:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2863:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2863:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2855:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2897:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2912:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2920:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2908:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2908:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2890:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2890:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2890:36:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2814:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2825:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2836:4:10",
                "type": ""
              }
            ],
            "src": "2748:184:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3038:102:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3048:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3060:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3071:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3056:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3056:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3048:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3090:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3105:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3121:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3126:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3117:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3117:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3130:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3113:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3113:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3101:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3101:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3083:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3083:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3007:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3018:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3029:4:10",
                "type": ""
              }
            ],
            "src": "2937:203:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3232:173:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3278:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3287:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3290:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3280:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3280:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3280:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3253:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3262:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3249:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3249:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3274:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3245:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3245:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3242:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3303:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3332:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3313:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3313:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3303:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3351:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3384:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3395:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3380:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3380:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3361:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3361:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3351:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3190:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3201:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3213:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3221:6:10",
                "type": ""
              }
            ],
            "src": "3145:260:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3465:325:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3475:22:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3489:1:10",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3492:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3485:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3485:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3475:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3506:38:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3536:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3542:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3532:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:12:10"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3510:18:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3583:31:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3585:27:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3599:6:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3607:4:10",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3595:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3595:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3585:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3563:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3556:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3556:26:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3553:61:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3673:111:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3694:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3701:3:10",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3706:10:10",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3697:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3697:20:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3687:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3687:31:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3687:31:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3738:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3741:4:10",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3731:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3731:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3731:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3766:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3769:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3759:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3759:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3759:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3629:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3652:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3660:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3649:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3649:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3626:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3626:38:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3623:161:10"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3445:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3454:6:10",
                "type": ""
              }
            ],
            "src": "3410:380:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3969:165:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3986:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3997:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3979:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3979:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3979:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4020:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4031:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4016:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4016:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4036:2:10",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4009:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4009:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4059:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4070:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4055:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4055:18:10"
                      },
                      {
                        "hexValue": "506f6f6c206e6f7420616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4075:17:10",
                        "type": "",
                        "value": "Pool not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4048:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4048:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4048:45:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4102:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4114:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4125:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4110:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4110:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4102:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3946:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3960:4:10",
                "type": ""
              }
            ],
            "src": "3795:339:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4268:145:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4278:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4290:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4301:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4286:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4286:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4278:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4320:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4335:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4351:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4356:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4347:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4347:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4360:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4343:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4343:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4331:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4331:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4313:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4313:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4313:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4384:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4395:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4380:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4380:18:10"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4400:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4373:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4373:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4373:34:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4229:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4240:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4248:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4259:4:10",
                "type": ""
              }
            ],
            "src": "4139:274:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4592:162:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4609:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4620:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4602:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4602:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4602:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4643:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4654:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4639:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4639:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4659:2:10",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4632:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4632:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4682:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4693:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4678:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4678:18:10"
                      },
                      {
                        "hexValue": "4e6f742061207374616b6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4698:14:10",
                        "type": "",
                        "value": "Not a staker"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4671:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4671:42:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4671:42:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4722:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4734:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4745:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4730:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4730:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4722:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4569:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4583:4:10",
                "type": ""
              }
            ],
            "src": "4418:336:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4933:170:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4950:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4961:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4943:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4943:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4943:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4984:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4995:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4980:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4980:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5000:2:10",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4973:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4973:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4973:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5023:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5034:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5019:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5019:18:10"
                      },
                      {
                        "hexValue": "416d6f756e742063616e2774206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5039:22:10",
                        "type": "",
                        "value": "Amount can't be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5012:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5012:50:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5012:50:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5071:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5083:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5094:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5079:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5079:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5071:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8f1884a2ca5e0e5298d4dcdbac91ada36d29544a8811d006f157915f232fe224__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4910:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4924:4:10",
                "type": ""
              }
            ],
            "src": "4759:344:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5282:175:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5299:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5310:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5292:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5292:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5292:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5333:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5344:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5329:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5329:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5349:2:10",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5322:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5322:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5322:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5372:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5383:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5368:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5368:18:10"
                      },
                      {
                        "hexValue": "446f6e2774206861766520736f206d616e7920746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5388:27:10",
                        "type": "",
                        "value": "Don't have so many tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5361:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5361:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5361:55:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5425:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5437:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5448:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5433:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5433:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5425:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_919ba52508b6b4334bfe664566ccbfd27ed30085863a7abad2676f16a64c4748__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5259:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5273:4:10",
                "type": ""
              }
            ],
            "src": "5108:349:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5591:186:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5601:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5613:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5624:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5609:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5609:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5601:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5643:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5658:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5674:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5679:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5670:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5670:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5683:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5666:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5666:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5654:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5654:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5636:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5636:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5636:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5707:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5718:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5703:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5703:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5727:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5735:34:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5723:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5723:47:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5696:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5696:75:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5696:75:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5552:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5563:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5571:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5582:4:10",
                "type": ""
              }
            ],
            "src": "5462:315:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5860:199:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5906:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5915:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5918:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5908:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5908:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5908:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5881:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5890:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5877:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5877:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5902:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5873:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5873:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "5870:52:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5931:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5950:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5944:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5944:16:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5935:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6013:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6022:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6025:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6015:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6015:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6015:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5982:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6003:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5996:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5996:13:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5989:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5989:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5979:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5979:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5972:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5972:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "5969:60:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6038:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6048:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6038:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5826:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5837:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5849:6:10",
                "type": ""
              }
            ],
            "src": "5782:277:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6238:169:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6255:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6266:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6248:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6248:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6248:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6289:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6300:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6285:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6285:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6305:2:10",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6278:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6278:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6278:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6328:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6339:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6324:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6324:18:10"
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6344:21:10",
                        "type": "",
                        "value": "Transfer from error"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6317:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6317:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6317:49:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6375:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6387:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6398:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6383:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6383:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6375:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6215:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6229:4:10",
                "type": ""
              }
            ],
            "src": "6064:343:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6444:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6461:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6468:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6473:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6464:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6464:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6454:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6454:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6454:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6501:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6504:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6494:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6494:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6494:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6525:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6528:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6518:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6518:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6518:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6412:127:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6593:197:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6603:44:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6613:34:10",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6607:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6656:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6671:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6674:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6667:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6667:10:10"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "6660:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6686:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6701:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6704:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6697:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6697:10:10"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "6690:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6732:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6734:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6734:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6734:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "6722:3:10"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "6727:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6719:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6719:12:10"
                  },
                  "nodeType": "YulIf",
                  "src": "6716:38:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6763:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "6775:3:10"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "6780:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6771:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6771:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6763:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6575:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6578:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6584:4:10",
                "type": ""
              }
            ],
            "src": "6544:246:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6980:303:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6990:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7002:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7013:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6998:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6998:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6990:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7026:29:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7044:3:10",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7049:1:10",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7040:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7040:11:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7053:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7036:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7036:19:10"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7030:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7071:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7086:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7094:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7082:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7082:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7064:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7064:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7064:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7118:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7129:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7114:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7114:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7138:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7146:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7134:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7134:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7107:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7107:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7107:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7170:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7181:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7166:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7166:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7190:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7198:34:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7186:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7186:47:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7159:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7159:75:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7159:75:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7254:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7265:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7250:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7250:18:10"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7270:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7243:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7243:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7243:34:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint128_t_uint256__to_t_address_t_address_t_uint128_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6925:9:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6936:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6944:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6952:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6960:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6971:4:10",
                "type": ""
              }
            ],
            "src": "6795:488:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7462:161:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7479:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7490:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7472:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7472:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7472:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7513:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7524:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7509:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7509:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7529:2:10",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7502:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7502:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7502:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7552:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7563:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7548:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7548:18:10"
                      },
                      {
                        "hexValue": "506f6f6c20616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7568:13:10",
                        "type": "",
                        "value": "Pool active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7541:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7541:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7541:41:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7591:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7603:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7614:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7599:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7599:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7591:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7648ec46322ebc0df40c24281d7333e86fc5dd629c92ac854422399a17e73454__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7439:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7453:4:10",
                "type": ""
              }
            ],
            "src": "7288:335:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7676:80:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7703:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7705:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7705:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7705:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7692:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7699:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7695:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7695:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7689:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7689:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "7686:39:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7734:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7745:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7748:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7741:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7741:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7734:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7659:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7662:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7668:3:10",
                "type": ""
              }
            ],
            "src": "7628:128:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7935:227:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7952:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7963:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7945:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7945:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7945:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7986:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7997:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7982:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7982:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8002:2:10",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7975:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7975:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7975:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8025:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8036:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8021:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8021:18:10"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8041:34:10",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8014:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8014:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8014:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8096:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8107:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8092:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8092:18:10"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8112:7:10",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8085:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8085:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8085:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8129:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8141:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8152:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8137:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8137:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8129:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7912:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7926:4:10",
                "type": ""
              }
            ],
            "src": "7761:401:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8324:259:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8334:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8346:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8357:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8342:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8342:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8334:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8369:29:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8387:3:10",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8392:1:10",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8383:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8383:11:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8396:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8379:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8379:19:10"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8373:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8414:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8429:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8437:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8425:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8425:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8407:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8407:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8407:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8461:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8472:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8457:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8457:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8481:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8489:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8477:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8477:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8450:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8450:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8450:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8513:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8524:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8509:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8509:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8533:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8541:34:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8529:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8529:47:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8502:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8502:75:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8502:75:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint128__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8277:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8288:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8296:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8304:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8315:4:10",
                "type": ""
              }
            ],
            "src": "8167:416:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8636:205:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8646:44:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8656:34:10",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8650:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8699:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8714:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8717:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8710:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8710:10:10"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "8703:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8729:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8744:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8747:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8740:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8740:10:10"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "8733:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8784:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8786:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8786:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8786:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "8765:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8774:2:10"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "8778:3:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8770:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8770:12:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8762:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8762:21:10"
                  },
                  "nodeType": "YulIf",
                  "src": "8759:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8815:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "8826:3:10"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "8831:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8822:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8822:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8815:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8619:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8622:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8628:3:10",
                "type": ""
              }
            ],
            "src": "8588:253:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8898:235:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8908:44:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8918:34:10",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8912:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8961:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8976:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8979:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8972:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8972:10:10"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "8965:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8991:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9006:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9009:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9002:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9002:10:10"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "8995:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9072:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9074:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9074:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9074:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x_1",
                                "nodeType": "YulIdentifier",
                                "src": "9042:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9035:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9035:11:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9028:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9028:19:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "9052:3:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "9061:2:10"
                              },
                              {
                                "name": "x_1",
                                "nodeType": "YulIdentifier",
                                "src": "9065:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "9057:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9057:12:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9049:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9049:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9024:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9024:47:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9021:73:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9103:24:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "9118:3:10"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "9123:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9114:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9114:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "9103:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8877:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8880:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8886:7:10",
                "type": ""
              }
            ],
            "src": "8846:287:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9170:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9187:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9194:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9199:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9190:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9190:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9180:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9180:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9180:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9227:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9230:4:10",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9220:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9220:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9220:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9251:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9254:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9244:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9244:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9244:15:10"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "9138:127:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9316:170:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9326:44:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9336:34:10",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9330:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9379:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9394:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9397:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9390:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9390:10:10"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "9383:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9424:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "9426:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9426:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9426:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "9419:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9412:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9412:11:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9409:37:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9455:25:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "9468:1:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9471:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9464:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9464:10:10"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "9476:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9460:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9460:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9455:1:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9301:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9304:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "9310:1:10",
                "type": ""
              }
            ],
            "src": "9270:216:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9523:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9540:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9547:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9552:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9543:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9543:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9533:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9533:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9533:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9580:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9583:4:10",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9573:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9573:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9573:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9604:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9607:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9597:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9597:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9597:15:10"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "9491:127:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9670:88:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9701:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9703:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9703:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9703:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9686:5:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9697:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9693:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9693:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9683:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9683:17:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9680:43:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9732:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9743:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9750:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9739:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9739:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9732:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9652:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9662:3:10",
                "type": ""
              }
            ],
            "src": "9623:135:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9812:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9834:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9836:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9836:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9836:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9828:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9831:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9825:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9825:8:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9822:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9865:17:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9877:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9880:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9873:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9873:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9865:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9794:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9797:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9803:4:10",
                "type": ""
              }
            ],
            "src": "9763:125:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9945:116:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10004:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10006:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10006:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10006:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9976:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9969:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9969:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9962:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9962:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9984:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9995:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9991:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9991:6:10"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9999:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "9987:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9987:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9981:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9981:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9958:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9958:45:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9955:71:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10035:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10050:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10053:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10046:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10046:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10035:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9924:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9927:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "9933:7:10",
                "type": ""
              }
            ],
            "src": "9893:168:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10112:74:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10135:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10137:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10137:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10137:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10132:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10125:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10125:9:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10122:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10166:14:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10175:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10178:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10171:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10171:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10166:1:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10097:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10100:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10106:1:10",
                "type": ""
              }
            ],
            "src": "10066:120:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10365:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10382:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10393:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10375:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10375:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10375:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10416:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10427:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10412:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10412:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10432:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10405:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10405:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10405:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10455:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10466:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10451:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10451:18:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10471:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10444:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10444:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10444:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10526:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10537:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10522:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10522:18:10"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10542:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10515:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10515:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10515:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10560:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10572:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10583:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10568:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10568:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10560:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10342:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10356:4:10",
                "type": ""
              }
            ],
            "src": "10191:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10772:226:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10789:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10800:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10782:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10782:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10782:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10823:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10834:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10819:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10819:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10839:2:10",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10812:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10812:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10812:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10862:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10873:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10858:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10858:18:10"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10878:34:10",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10851:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10851:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10851:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10933:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10944:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10929:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10929:18:10"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10949:6:10",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10922:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10922:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10922:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10965:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10977:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10988:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10973:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10973:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10965:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10749:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10763:4:10",
                "type": ""
              }
            ],
            "src": "10598:400:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11177:224:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11194:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11205:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11187:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11187:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11228:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11239:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11224:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11224:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11244:2:10",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11217:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11217:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11217:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11267:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11278:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11263:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11263:18:10"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11283:34:10",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11256:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11256:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11256:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11338:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11349:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11334:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11334:18:10"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11354:4:10",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11327:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11327:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11327:32:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11368:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11380:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11391:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11376:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11376:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11368:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11154:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11168:4:10",
                "type": ""
              }
            ],
            "src": "11003:398:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11580:182:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11597:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11608:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11590:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11590:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11590:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11631:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11642:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11627:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11627:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11647:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11620:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11620:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11620:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11670:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11681:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11666:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11666:18:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11686:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11659:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11659:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11659:62:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11730:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11742:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11753:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11738:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11738:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11730:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11557:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11571:4:10",
                "type": ""
              }
            ],
            "src": "11406:356:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11941:179:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11958:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11969:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11951:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11951:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11951:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11992:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12003:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11988:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11988:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12008:2:10",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11981:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11981:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11981:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12031:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12042:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12027:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12027:18:10"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12047:31:10",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12020:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12020:59:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12020:59:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12088:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12100:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12111:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12096:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12096:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12088:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11918:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11932:4:10",
                "type": ""
              }
            ],
            "src": "11767:353:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12299:227:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12316:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12327:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12309:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12309:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12309:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12350:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12361:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12346:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12346:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12366:2:10",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12339:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12339:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12339:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12389:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12400:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12385:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12385:18:10"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12405:34:10",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12378:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12378:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12378:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12460:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12471:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12456:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12456:18:10"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12476:7:10",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12449:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12449:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12449:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12493:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12505:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12516:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12501:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12501:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12493:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12276:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12290:4:10",
                "type": ""
              }
            ],
            "src": "12125:401:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12705:225:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12722:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12733:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12715:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12715:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12715:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12756:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12767:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12752:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12752:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12772:2:10",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12745:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12745:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12745:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12795:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12806:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12791:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12791:18:10"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12811:34:10",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12784:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12784:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12784:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12866:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12877:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12862:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12862:18:10"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12882:5:10",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12855:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12855:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12855:33:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12897:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12909:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12920:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12905:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12905:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12897:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12682:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12696:4:10",
                "type": ""
              }
            ],
            "src": "12531:399:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13109:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13126:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13137:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13119:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13119:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13119:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13160:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13171:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13156:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13156:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13176:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13149:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13149:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13149:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13199:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13210:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13195:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13195:18:10"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13215:34:10",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13188:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13188:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13188:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13270:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13281:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13266:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13266:18:10"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13286:8:10",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13259:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13259:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13259:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13304:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13316:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13327:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13312:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13312:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13304:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13086:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13100:4:10",
                "type": ""
              }
            ],
            "src": "12935:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13401:120:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13411:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "13426:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13420:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13420:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "13411:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13499:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13508:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13511:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13501:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13501:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13501:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13455:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13466:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13473:22:10",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13462:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13462:34:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13452:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13452:45:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13445:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13445:53:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13442:73:10"
                }
              ]
            },
            "name": "abi_decode_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "13380:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13391:5:10",
                "type": ""
              }
            ],
            "src": "13342:179:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13672:327:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13719:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13728:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13731:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13721:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13721:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13721:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13693:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13702:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13689:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13689:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13714:3:10",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13685:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13685:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13682:53:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13744:49:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13783:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "13754:28:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13754:39:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13744:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13802:35:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13822:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13833:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13818:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13818:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13812:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13812:25:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "13802:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13846:35:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13866:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13877:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13862:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13862:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13856:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13856:25:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "13846:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13890:35:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13910:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13921:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13906:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13906:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13900:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13900:25:10"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "13890:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13934:59:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13977:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13988:3:10",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13973:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13973:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "13944:28:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13944:49:10"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "13934:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13606:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13617:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13629:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13637:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13645:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "13653:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "13661:6:10",
                "type": ""
              }
            ],
            "src": "13526:473:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14178:181:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14195:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14206:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14188:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14188:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14188:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14229:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14240:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14225:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14225:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14245:2:10",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14218:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14218:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14218:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14268:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14279:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14264:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14264:18:10"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14284:33:10",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14257:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14257:61:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14257:61:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14327:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14339:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14350:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14335:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14335:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14327:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14155:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14169:4:10",
                "type": ""
              }
            ],
            "src": "14004:355:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint128t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint128(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint128t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint128(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Pool not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not a staker\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f1884a2ca5e0e5298d4dcdbac91ada36d29544a8811d006f157915f232fe224__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Amount can't be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_919ba52508b6b4334bfe664566ccbfd27ed30085863a7abad2676f16a64c4748__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Don't have so many tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Transfer from error\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint128(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint128_t_uint256__to_t_address_t_address_t_uint128_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_7648ec46322ebc0df40c24281d7333e86fc5dd629c92ac854422399a17e73454__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Pool active\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint128__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint128(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_mul_t_uint128(x, y) -> product\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if and(iszero(iszero(x_1)), gt(y_1, div(_1, x_1))) { panic_error_0x11() }\n        product := mul(x_1, y_1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint128(x, y) -> r\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "441:8264:2:-:0;;;;;;;;;;;;;1978:113:6;;;;;;;;;;;;;-1:-1:-1;;;1978:113:6;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:6;;;936:32:5;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;2044:13:6;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:6;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;441:8264:2;;640:96:9;719:10;;640:96::o;2433:187:5:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:5;;;-1:-1:-1;;;;;;2541:17:5;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;441:8264:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;441:8264:2;;;-1:-1:-1;441:8264:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:10;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;441:8264:2;;;;;;",
  "deployedSourceMap": "441:8264:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:10;;1211:22;1193:41;;1181:2;1166:18;4433:197:6;1053:187:10;7976:126:2;;;;;;:::i;:::-;-1:-1:-1;;;;;8061:15:2;8035:7;8061:15;;;:7;:15;;;;;;;;8077:10;8061:27;;;;;;;:34;-1:-1:-1;;;;;8061:34:2;;7976:126;;;;1582:25:10;;;1570:2;1555:18;7976:126:2;1436:177:10;1797:263:2;;;;;;:::i;:::-;;:::i;:::-;;3244:106:6;3331:12;;3244:106;;3164:743:2;;;;;;:::i;:::-;;:::i;5192:286:6:-;;;;;;:::i;:::-;;:::i;1383:287:2:-;;;;;;:::i;:::-;;:::i;3093:91:6:-;;;3175:2;2890:36:10;;2878:2;2863:18;3093:91:6;2748:184:10;5873:234:6;;;;;;:::i;:::-;;:::i;8290:179:2:-;;;;;;:::i;:::-;;:::i;3408:125:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:6;3482:7;3508:18;;;:9;:18;;;;;;;3408:125;1831:101:5;;;:::i;8581:122:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;8671:13:2;8645:7;8671:13;;;:5;:13;;;;;:25;;;-1:-1:-1;;;8671:25:2;;-1:-1:-1;;;;;8671:25:2;;8581:122;1201:85:5;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:5;;;3083:51:10;;3071:2;3056:18;1201:85:5;2937:203:10;2367:102:6;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;2223:790:2:-;;;;;;:::i;:::-;;:::i;4564:2480::-;;;;;;:::i;:::-;;:::i;3976:149:6:-;;;;;;:::i;:::-;;:::i;7224:316:2:-;;;;;;:::i;:::-;;:::i;2081:198:5:-;;;;;;:::i;:::-;;:::i;2156:98:6:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:9;4570:32:6;719:10:9;4586:7:6;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:6;;4433:197;-1:-1:-1;;;4433:197:6:o;1797:263:2:-;1094:13:5;:11;:13::i;:::-;-1:-1:-1;;;;;1868:13:2;::::1;;::::0;;;:5:::1;:13;::::0;;;;:24;::::1;;1860:52;;;::::0;-1:-1:-1;;;1860:52:2;;3997:2:10;1860:52:2::1;::::0;::::1;3979:21:10::0;4036:2;4016:18;;;4009:30;-1:-1:-1;;;4055:18:10;;;4048:45;4110:18;;1860:52:2::1;;;;;;;;;-1:-1:-1::0;;;;;1922:13:2;::::1;1949:5;1922:13:::0;;;:5:::1;:13;::::0;;;;;;;;:32;;-1:-1:-1;;1922:32:2::1;::::0;;1989:15:::1;-1:-1:-1::0;1964:22:2;;::::1;:40:::0;;;2020:33;;4313:51:10;;;4380:18;;;4373:34;2020:33:2::1;::::0;4286:18:10;2020:33:2::1;;;;;;;1797:263:::0;:::o;3164:743::-;3242:16;3251:6;3242:8;:16::i;:::-;3234:41;;;;-1:-1:-1;;;3234:41:2;;;;;;;:::i;:::-;3303:1;3293:7;-1:-1:-1;;;;;3293:11:2;;3285:44;;;;-1:-1:-1;;;3285:44:2;;4961:2:10;3285:44:2;;;4943:21:10;5000:2;4980:18;;;4973:30;-1:-1:-1;;;5019:18:10;;;5012:50;5079:18;;3285:44:2;4759:344:10;3285:44:2;-1:-1:-1;;;;;3371:15:2;;;;;;:7;:15;;;;;;;;3387:10;3371:27;;;;;;;:34;-1:-1:-1;;;;;3371:34:2;;;3360:45;;;;;3339:117;;;;-1:-1:-1;;;3339:117:2;;5310:2:10;3339:117:2;;;5292:21:10;5349:2;5329:18;;;5322:30;5388:27;5368:18;;;5361:55;5433:18;;3339:117:2;5108:349:10;3339:117:2;3466:15;3484:23;3500:6;3484:15;:23::i;:::-;3531:44;;-1:-1:-1;;;3531:44:2;;3555:10;3531:44;;;5636:51:10;-1:-1:-1;;;;;5723:47:10;;5703:18;;;5696:75;3466:41:2;;-1:-1:-1;3517:11:2;;-1:-1:-1;;;;;3531:23:2;;;;;5609:18:10;;3531:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3517:58;;3593:6;3585:38;;;;-1:-1:-1;;;3585:38:2;;6266:2:10;3585:38:2;;;6248:21:10;6305:2;6285:18;;;6278:30;-1:-1:-1;;;6324:18:10;;;6317:49;6383:18;;3585:38:2;6064:343:10;3585:38:2;3634:34;3652:7;3661:6;3634:16;:34::i;:::-;3678;3696:7;3705:6;3678:16;:34::i;:::-;-1:-1:-1;;;;;3722:13:2;;;;;;:5;:13;;;;;:25;;:36;;3751:7;;3722:25;;;:36;;3751:7;;-1:-1:-1;;;3722:36:2;;-1:-1:-1;;;;;3722:36:2;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3722:36:2;;;;;-1:-1:-1;;;;;3722:36:2;;;;;;3769:20;3781:7;3769:11;:20::i;:::-;3847:53;3855:10;3867:6;3875:7;3884:15;3847:53;;;;;;;;;:::i;:::-;;;;;;;;3224:683;;3164:743;;:::o;5192:286:6:-;5319:4;719:10:9;5375:38:6;5391:4;719:10:9;5406:6:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:6;;5192:286;-1:-1:-1;;;;5192:286:6:o;1383:287:2:-;1094:13:5;:11;:13::i;:::-;-1:-1:-1;;;;;1521:13:2;::::1;;::::0;;;:5:::1;:13;::::0;;;;:24;::::1;;1520:25;1512:49;;;::::0;-1:-1:-1;;;1512:49:2;;7490:2:10;1512:49:2::1;::::0;::::1;7472:21:10::0;7529:2;7509:18;;;7502:30;-1:-1:-1;;;7548:18:10;;;7541:41;7599:18;;1512:49:2::1;7288:335:10::0;1512:49:2::1;1588:38;::::0;;::::1;::::0;::::1;::::0;;1594:4:::1;1588:38:::0;;;-1:-1:-1;;;;;1588:38:2;;::::1;;::::0;;::::1;::::0;;;-1:-1:-1;1588:38:2;;;;;;-1:-1:-1;;;;;1588:38:2;;::::1;::::0;;;;;;;;;;;;1572:13;;::::1;::::0;;;:5:::1;:13:::0;;;;;;:54;;;;;;-1:-1:-1;;;;;;1572:54:2;;;;::::1;;-1:-1:-1::0;;;;;;1572:54:2;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;;;;::::1;-1:-1:-1::0;;;1572:54:2;;;::::1;::::0;;;::::1;::::0;;;::::1;;::::0;;::::1;::::0;;;;1642:21;;5636:51:10;;;5703:18;;;5696:75;1642:21:2::1;::::0;5609:18:10;1642:21:2::1;;;;;;;1383:287:::0;;;:::o;5873:234:6:-;5961:4;719:10:9;6015:64:6;719:10:9;6031:7:6;6068:10;6040:25;719:10:9;6031:7:6;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;8290:179:2:-;-1:-1:-1;;;;;8365:15:2;;8345:4;8365:15;;;:7;:15;;;;;;;;8381:10;8365:27;;;;;;;:34;-1:-1:-1;;;;;8365:34:2;:38;8361:80;;-1:-1:-1;8426:4:2;;8290:179;-1:-1:-1;8290:179:2:o;8361:80::-;-1:-1:-1;8457:5:2;;8290:179;-1:-1:-1;8290:179:2:o;1831:101:5:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2367:102:6:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:9;6687:4:6;6768:25;719:10:9;6785:7:6;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:6;;7963:2:10;6803:85:6;;;7945:21:10;8002:2;7982:18;;;7975:30;8041:34;8021:18;;;8014:62;-1:-1:-1;;;8092:18:10;;;8085:35;8137:19;;6803:85:6;7761:401:10;6803:85:6;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:9;3862:28:6;719:10:9;3879:2:6;3883:6;3862:9;:28::i;2223:790:2:-;2308:1;2298:7;-1:-1:-1;;;;;2298:11:2;;2290:44;;;;-1:-1:-1;;;2290:44:2;;4961:2:10;2290:44:2;;;4943:21:10;5000:2;4980:18;;;4973:30;-1:-1:-1;;;5019:18:10;;;5012:50;5079:18;;2290:44:2;4759:344:10;2290:44:2;-1:-1:-1;;;;;2352:13:2;;;;;;:5;:13;;;;;:24;;;2344:52;;;;-1:-1:-1;;;2344:52:2;;3997:2:10;2344:52:2;;;3979:21:10;4036:2;4016:18;;;4009:30;-1:-1:-1;;;4055:18:10;;;4048:45;4110:18;;2344:52:2;3795:339:10;2344:52:2;-1:-1:-1;;;;;2435:15:2;;2407;2435;;;:7;:15;;;;;;;;2451:10;2435:27;;;;;;;:34;-1:-1:-1;;;;;2435:34:2;:37;;2432:100;;-1:-1:-1;2482:1:2;2432:100;;;2507:23;2523:6;2507:15;:23::i;:::-;2499:31;;2432:100;2564:109;;-1:-1:-1;;;2564:109:2;;2605:10;2564:109;;;8407:34:10;2637:4:2;8457:18:10;;;8450:43;-1:-1:-1;;;;;8529:47:10;;8509:18;;;8502:75;2550:11:2;;-1:-1:-1;;;;;2564:27:2;;;;;8342:18:10;;2564:109:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2550:123;;2691:6;2683:38;;;;-1:-1:-1;;;2683:38:2;;6266:2:10;2683:38:2;;;6248:21:10;6305:2;6285:18;;;6278:30;-1:-1:-1;;;6324:18:10;;;6317:49;6383:18;;2683:38:2;6064:343:10;2683:38:2;2732:31;2747:7;2756:6;2732:14;:31::i;:::-;2773;2788:7;2797:6;2773:14;:31::i;:::-;-1:-1:-1;;;;;2814:13:2;;;;;;:5;:13;;;;;:25;;:36;;2843:7;;2814:25;;;:36;;2843:7;;-1:-1:-1;;;2814:36:2;;-1:-1:-1;;;;;2814:36:2;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2814:36:2;;;;;-1:-1:-1;;;;;2814:36:2;;;;;;2873:1;2865:7;:9;2861:37;;;2876:20;2888:7;2876:11;:20::i;:::-;2955:51;2961:10;2973:6;2981:7;2990:15;2955:51;;;;;;;;;:::i;4564:2480::-;4626:7;4653:16;4662:6;4653:8;:16::i;:::-;4645:41;;;;-1:-1:-1;;;4645:41:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;4812:13:2;;;4696:17;4812:13;;;:5;:13;;;;;:26;4716:1;;4796:43;;4812:26;;;;4796:15;:43::i;:::-;-1:-1:-1;;;;;4875:13:2;;4849:21;4875:13;;;:5;:13;;;;;:17;;;4775:64;;-1:-1:-1;4849:21:2;4918:15;;4874:27;;-1:-1:-1;;;;;4875:17:2;4896:5;4874:27;:::i;:::-;4873:61;;;;:::i;:::-;-1:-1:-1;;;;;4992:20:2;;4944:26;4992:20;;;:12;:20;;;;;:27;-1:-1:-1;;;;;4849:85:2;;;;;-1:-1:-1;4944:26:2;;;5057:224;5081:1;5077;:5;5057:224;;;-1:-1:-1;;;;;5177:15:2;;;;;;:7;:15;;;;;;;;5193:10;5177:27;;;;;;;:32;;;5124:20;;;:12;:20;;;;;:23;;5145:1;;5124:23;;;;;;:::i;:::-;;;;;;;;;;;:33;;;:85;5103:168;;5255:1;5242:14;;5103:168;5084:3;;;;:::i;:::-;;;;5057:224;;;-1:-1:-1;;;;;;5295:13:2;;;;;;:5;:13;;;;;:24;;;5291:1670;;;5339:1;5344;5339:6;5335:774;;-1:-1:-1;;;;;5426:15:2;;;;;;:7;:15;;;;;;;;5442:10;5426:27;;;;;;;:32;;;5388:70;;:15;:70;:::i;:::-;5365:94;;;;:::i;:::-;;;5291:1670;;5335:774;5515:10;5498:369;5531:5;5535:1;5531;:5;:::i;:::-;5527:1;:9;5498:369;;;-1:-1:-1;;;;;5808:20:2;;;;;;:12;:20;;;;;:23;;5829:1;;5808:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:40;;;-1:-1:-1;;;;;5746:15:2;;;;;:7;:15;;;;;;5762:10;5746:27;;;;;;;:34;5681:20;;;:12;:20;;;;;;;:23;;-1:-1:-1;;;;;5808:40:2;;;;5746:34;;;;5702:1;;5681:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:33;-1:-1:-1;;;;;5613:20:2;;;;:12;:20;;;;;;;5634:5;:1;5638;5634:5;:::i;:::-;5613:27;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;;:101;;;;:::i;:::-;5612:168;;;;:::i;:::-;5611:237;;;;:::i;:::-;5565:283;;;;:::i;:::-;;-1:-1:-1;5538:3:2;;;;:::i;:::-;;;;5498:369;;;-1:-1:-1;;;;;;6069:13:2;;;;;;:5;:13;;;;;;;;:25;;;6011:7;:15;;;;;6027:10;6011:27;;;;;;;:34;5946:20;;;:12;:20;;;;;;-1:-1:-1;;;6069:25:2;;;-1:-1:-1;;;;;6069:25:2;;;;6011:34;;5967:5;6011:34;5967:1;:5;:::i;:::-;5946:27;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;;5928:15;:55;;;;:::i;:::-;5927:118;;;;:::i;:::-;5926:168;;;;:::i;5291:1670::-;6143:1;6148;6143:6;6139:812;;-1:-1:-1;;;;;6237:15:2;;;;;;:7;:15;;;;;;;;6253:10;6237:27;;;;;;;:32;;;;;6192:13;;;:5;:13;;;;;;:22;;:77;;6237:32;6192:77;:::i;6139:812::-;6326:10;6309:369;6342:5;6346:1;6342;:5;:::i;:::-;6338:1;:9;6309:369;;;-1:-1:-1;;;;;6619:20:2;;;;;;:12;:20;;;;;:23;;6640:1;;6619:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:40;;;-1:-1:-1;;;;;6557:15:2;;;;;:7;:15;;;;;;6573:10;6557:27;;;;;;;:34;6492:20;;;:12;:20;;;;;;;:23;;-1:-1:-1;;;;;6619:40:2;;;;6557:34;;;;6513:1;;6492:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:33;-1:-1:-1;;;;;6424:20:2;;;;:12;:20;;;;;;;6445:5;:1;6449;6445:5;:::i;:::-;6424:27;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;;:101;;;;:::i;:::-;6423:168;;;;:::i;:::-;6422:237;;;;:::i;:::-;6376:283;;;;:::i;:::-;;-1:-1:-1;6349:3:2;;;;:::i;:::-;;;;6309:369;;;-1:-1:-1;;;;;;6911:13:2;;;;;;:5;:13;;;;;;;;:25;;;6853:7;:15;;;;;6869:10;6853:27;;;;;;;:34;6788:20;;;:12;:20;;;;;;-1:-1:-1;;;6911:25:2;;;-1:-1:-1;;;;;6911:25:2;;;;6853:34;;6809:5;6853:34;6809:1;:5;:::i;:::-;6788:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;6739:13:2;;;;:5;:13;;;;;;;:22;;;:86;;6788:37;6739:86;:::i;:::-;6738:149;;;;:::i;:::-;6737:199;;;;:::i;:::-;6695:241;;;;:::i;:::-;;;6139:812;7028:9;7012:13;6978:31;6999:10;6978:18;:31;:::i;:::-;:47;;;;:::i;:::-;:59;;;;:::i;:::-;6971:66;4564:2480;-1:-1:-1;;;;;;;;4564:2480:2:o;3976:149:6:-;-1:-1:-1;;;;;4091:18:6;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;7224:316:2:-;7289:16;7298:6;7289:8;:16::i;:::-;7281:41;;;;-1:-1:-1;;;7281:41:2;;;;;;;:::i;:::-;7332:15;7350:23;7366:6;7350:15;:23::i;:::-;7332:41;;7383:25;7398:1;7401:6;7383:14;:25::i;:::-;-1:-1:-1;;;;;7418:15:2;;;;;;:7;:15;;;;;;;;7434:10;7418:27;;;;;;;;7453:15;7418:32;;;;:50;7507:26;;7525:7;7507:5;:26::i;:::-;7271:269;7224:316;:::o;2081:198:5:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:5;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:5;;10393:2:10;2161:73:5::1;::::0;::::1;10375:21:10::0;10432:2;10412:18;;;10405:30;10471:34;10451:18;;;10444:62;-1:-1:-1;;;10522:18:10;;;10515:36;10568:19;;2161:73:5::1;10191:402:10::0;2161:73:5::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;10110:370:6:-;-1:-1:-1;;;;;10241:19:6;;10233:68;;;;-1:-1:-1;;;10233:68:6;;10800:2:10;10233:68:6;;;10782:21:10;10839:2;10819:18;;;10812:30;10878:34;10858:18;;;10851:62;-1:-1:-1;;;10929:18:10;;;10922:34;10973:19;;10233:68:6;10598:400:10;10233:68:6;-1:-1:-1;;;;;10319:21:6;;10311:68;;;;-1:-1:-1;;;10311:68:6;;11205:2:10;10311:68:6;;;11187:21:10;11244:2;11224:18;;;11217:30;11283:34;11263:18;;;11256:62;-1:-1:-1;;;11334:18:10;;;11327:32;11376:19;;10311:68:6;11003:398:10;10311:68:6;-1:-1:-1;;;;;10390:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1582:25:10;;;10441:32:6;;1555:18:10;10441:32:6;;;;;;;10110:370;;;:::o;1359:130:5:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:5;719:10:9;1422:23:5;1414:68;;;;-1:-1:-1;;;1414:68:5;;11608:2:10;1414:68:5;;;11590:21:10;;;11627:18;;;11620:30;11686:34;11666:18;;;11659:62;11738:18;;1414:68:5;11406:356:10;2306:373:1;-1:-1:-1;;;;;2409:20:1;;2384:22;2409:20;;;:12;:20;;;;;2443:27;;:31;;2473:1;;2443:31;:::i;:::-;2409:75;;;;;;;;:::i;:::-;;;;;;;;;;;:92;;;;;;;;;;-1:-1:-1;;;;;2409:92:1;2384:117;;2511:26;2540:92;;;;;;;;2569:15;2540:92;;;;2615:7;2598:14;:24;;;;:::i;:::-;-1:-1:-1;;;;;2540:92:1;;;;;;-1:-1:-1;;;;;2642:20:1;;;;;;;;:12;:20;;;;;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2642:30:1;;;;;;;;;-1:-1:-1;;;2306:373:1:o;1163:218::-;1271:103;;;;;;;;-1:-1:-1;;;;;1291:15:1;;-1:-1:-1;1291:15:1;;;:7;:15;;;;;;;1307:10;1291:27;;;;;;;;:34;1271:103;;1291:44;;1328:7;;-1:-1:-1;;;;;1291:34:1;:44;:::i;:::-;-1:-1:-1;;;;;1271:103:1;;;;;1349:15;1271:103;;;;;-1:-1:-1;;;;;1241:15:1;;;;-1:-1:-1;1241:15:1;;;:7;:15;;;;;;1257:10;1241:27;;;;;;:133;;;;-1:-1:-1;;;;;;1241:133:1;;;;;;;;;;;-1:-1:-1;1241:133:1;;;;-1:-1:-1;1163:218:1:o;7744:89:2:-;7800:26;7806:10;7818:7;7800:5;:26::i;10761:441:6:-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:6;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:6;;11969:2:10;11010:68:6;;;11951:21:10;12008:2;11988:18;;;11981:30;12047:31;12027:18;;;12020:59;12096:18;;11010:68:6;11767:353:10;11010:68:6;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:6;;7593:68;;;;-1:-1:-1;;;7593:68:6;;12327:2:10;7593:68:6;;;12309:21:10;12366:2;12346:18;;;12339:30;12405:34;12385:18;;;12378:62;-1:-1:-1;;;12456:18:10;;;12449:35;12501:19;;7593:68:6;12125:401:10;7593:68:6;-1:-1:-1;;;;;7679:16:6;;7671:64;;;;-1:-1:-1;;;7671:64:6;;12733:2:10;7671:64:6;;;12715:21:10;12772:2;12752:18;;;12745:30;12811:34;12791:18;;;12784:62;-1:-1:-1;;;12862:18:10;;;12855:33;12905:19;;7671:64:6;12531:399:10;7671:64:6;-1:-1:-1;;;;;7817:15:6;;7795:19;7817:15;;;:9;:15;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:6;;13137:2:10;7842:72:6;;;13119:21:10;13176:2;13156:18;;;13149:30;13215:34;13195:18;;;13188:62;-1:-1:-1;;;13266:18:10;;;13259:36;13312:19;;7842:72:6;12935:402:10;7842:72:6;-1:-1:-1;;;;;7948:15:6;;;;;;;:9;:15;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:15;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:6;8054:4;-1:-1:-1;;;;;8045:26:6;;8064:6;8045:26;;;;1582:25:10;;1570:2;1555:18;;1436:177;8045:26:6;;;;;;;;8082:37;11786:121;2433:187:5;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:5;;;-1:-1:-1;;;;;;2541:17:5;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;749:216:1:-;855:103;;;;;;;;-1:-1:-1;;;;;875:15:1;;-1:-1:-1;875:15:1;;;:7;:15;;;;;;;891:10;875:27;;;;;;;;:34;855:103;;875:44;;912:7;;-1:-1:-1;;;;;875:34:1;:44;:::i;1583:514::-;-1:-1:-1;;;;;1695:20:1;;1659:22;1695:20;;;:12;:20;;;;;:27;:32;;1691:229;;-1:-1:-1;1760:1:1;1691:229;;;-1:-1:-1;;;;;1809:20:1;;;;;;:12;:20;;;;;1847:27;;:31;;1877:1;;1847:31;:::i;:::-;1809:83;;;;;;;;:::i;:::-;;;;;;;;;:100;:83;;;;;:100;;-1:-1:-1;;;;;1809:100:1;;-1:-1:-1;1691:229:1;1929:26;1958:92;;;;;;;;1987:15;1958:92;;;;2033:7;2016:14;:24;;;;:::i;4042:326:2:-;4144:7;4167:31;4236:21;4167:100;;4280:12;4302:9;-1:-1:-1;;;;;4302:25:2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4277:52:2;;4042:326;-1:-1:-1;;;;;;;4042:326:2:o;8402:389:6:-;-1:-1:-1;;;;;8485:21:6;;8477:65;;;;-1:-1:-1;;;8477:65:6;;14206:2:10;8477:65:6;;;14188:21:10;14245:2;14225:18;;;14218:30;14284:33;14264:18;;;14257:61;14335:18;;8477:65:6;14004:355:10;8477:65:6;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:6;;;;;;:9;:18;;;;;:28;;8667:6;;8645:18;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:6;;1582:25:10;;;-1:-1:-1;;;;;8688:37:6;;;8705:1;;8688:37;;1570:2:10;1555:18;8688:37:6;;;;;;;7271:269:2;7224:316;:::o;14:597:10:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:10;574:15;-1:-1:-1;;570:29:10;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:10:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:10;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:10:o;1245:186::-;1304:6;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;1396:29;1415:9;1396:29;:::i;:::-;1386:39;1245:186;-1:-1:-1;;;1245:186:10:o;1618:188::-;1686:20;;-1:-1:-1;;;;;1735:46:10;;1725:57;;1715:85;;1796:1;1793;1786:12;1811:260;1879:6;1887;1940:2;1928:9;1919:7;1915:23;1911:32;1908:52;;;1956:1;1953;1946:12;1908:52;1979:29;1998:9;1979:29;:::i;:::-;1969:39;;2027:38;2061:2;2050:9;2046:18;2027:38;:::i;:::-;2017:48;;1811:260;;;;;:::o;2076:328::-;2153:6;2161;2169;2222:2;2210:9;2201:7;2197:23;2193:32;2190:52;;;2238:1;2235;2228:12;2190:52;2261:29;2280:9;2261:29;:::i;:::-;2251:39;;2309:38;2343:2;2332:9;2328:18;2309:38;:::i;:::-;2299:48;;2394:2;2383:9;2379:18;2366:32;2356:42;;2076:328;;;;;:::o;2409:334::-;2486:6;2494;2502;2555:2;2543:9;2534:7;2530:23;2526:32;2523:52;;;2571:1;2568;2561:12;2523:52;2594:29;2613:9;2594:29;:::i;:::-;2584:39;;2642:38;2676:2;2665:9;2661:18;2642:38;:::i;:::-;2632:48;;2699:38;2733:2;2722:9;2718:18;2699:38;:::i;:::-;2689:48;;2409:334;;;;;:::o;3145:260::-;3213:6;3221;3274:2;3262:9;3253:7;3249:23;3245:32;3242:52;;;3290:1;3287;3280:12;3242:52;3313:29;3332:9;3313:29;:::i;3410:380::-;3489:1;3485:12;;;;3532;;;3553:61;;3607:4;3599:6;3595:17;3585:27;;3553:61;3660:2;3652:6;3649:14;3629:18;3626:38;3623:161;;3706:10;3701:3;3697:20;3694:1;3687:31;3741:4;3738:1;3731:15;3769:4;3766:1;3759:15;3623:161;;3410:380;;;:::o;4418:336::-;4620:2;4602:21;;;4659:2;4639:18;;;4632:30;-1:-1:-1;;;4693:2:10;4678:18;;4671:42;4745:2;4730:18;;4418:336::o;5782:277::-;5849:6;5902:2;5890:9;5881:7;5877:23;5873:32;5870:52;;;5918:1;5915;5908:12;5870:52;5950:9;5944:16;6003:5;5996:13;5989:21;5982:5;5979:32;5969:60;;6025:1;6022;6015:12;6412:127;6473:10;6468:3;6464:20;6461:1;6454:31;6504:4;6501:1;6494:15;6528:4;6525:1;6518:15;6544:246;6584:4;-1:-1:-1;;;;;6697:10:10;;;;6667;;6719:12;;;6716:38;;;6734:18;;:::i;:::-;6771:13;;6544:246;-1:-1:-1;;;6544:246:10:o;6795:488::-;-1:-1:-1;;;;;7082:15:10;;;7064:34;;7134:15;;;;7129:2;7114:18;;7107:43;-1:-1:-1;;;;;7186:47:10;7181:2;7166:18;;7159:75;7265:2;7250:18;;7243:34;;;;7013:3;6998:19;;6795:488::o;7628:128::-;7668:3;7699:1;7695:6;7692:1;7689:13;7686:39;;;7705:18;;:::i;:::-;-1:-1:-1;7741:9:10;;7628:128::o;8588:253::-;8628:3;-1:-1:-1;;;;;8717:2:10;8714:1;8710:10;8747:2;8744:1;8740:10;8778:3;8774:2;8770:12;8765:3;8762:21;8759:47;;;8786:18;;:::i;:::-;8822:13;;8588:253;-1:-1:-1;;;;8588:253:10:o;8846:287::-;8886:7;-1:-1:-1;;;;;8979:2:10;8976:1;8972:10;9009:2;9006:1;9002:10;9065:3;9061:2;9057:12;9052:3;9049:21;9042:3;9035:11;9028:19;9024:47;9021:73;;;9074:18;;:::i;:::-;9114:13;;8846:287;-1:-1:-1;;;;8846:287:10:o;9138:127::-;9199:10;9194:3;9190:20;9187:1;9180:31;9230:4;9227:1;9220:15;9254:4;9251:1;9244:15;9270:216;9310:1;-1:-1:-1;;;;;9397:2:10;9394:1;9390:10;9419:3;9409:37;;9426:18;;:::i;:::-;9464:10;;9460:20;;;;;9270:216;-1:-1:-1;;9270:216:10:o;9491:127::-;9552:10;9547:3;9543:20;9540:1;9533:31;9583:4;9580:1;9573:15;9607:4;9604:1;9597:15;9623:135;9662:3;9683:17;;;9680:43;;9703:18;;:::i;:::-;-1:-1:-1;9750:1:10;9739:13;;9623:135::o;9763:125::-;9803:4;9831:1;9828;9825:8;9822:34;;;9836:18;;:::i;:::-;-1:-1:-1;9873:9:10;;9763:125::o;9893:168::-;9933:7;9999:1;9995;9991:6;9987:14;9984:1;9981:21;9976:1;9969:9;9962:17;9958:45;9955:71;;;10006:18;;:::i;:::-;-1:-1:-1;10046:9:10;;9893:168::o;10066:120::-;10106:1;10132;10122:35;;10137:18;;:::i;:::-;-1:-1:-1;10171:9:10;;10066:120::o;13342:179::-;13420:13;;13473:22;13462:34;;13452:45;;13442:73;;13511:1;13508;13501:12;13526:473;13629:6;13637;13645;13653;13661;13714:3;13702:9;13693:7;13689:23;13685:33;13682:53;;;13731:1;13728;13721:12;13682:53;13754:39;13783:9;13754:39;:::i;:::-;13744:49;;13833:2;13822:9;13818:18;13812:25;13802:35;;13877:2;13866:9;13862:18;13856:25;13846:35;;13921:2;13910:9;13906:18;13900:25;13890:35;;13944:49;13988:3;13977:9;13973:19;13944:49;:::i;:::-;13934:59;;13526:473;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.14;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./CrowdV.sol\";\nimport \"./StackingPool.sol\";\n\n/**\n * @title Staking : a Staking Plateform !\n * @author Anthony - Etienne - Jean-Baptiste\n */\n\ncontract Staking is Ownable, CrowdV, StackingPool {\n    //Information about the token\n    struct Token {\n        bool activePool;\n        address addressPrice; //Chainlink Pool\n        uint256 dateStop;\n        uint128 APR;\n        uint128 totalStakes;\n    }\n\n    // Token address => active pool\n    mapping(address => Token) pools;\n\n    // Events\n    event NewPool(address tokenAddress, uint256 APR);\n    event StopPool(address tokenAddress, uint256 date);\n    event Stake(\n        address sender,\n        address tokenAddress,\n        uint128 amount,\n        uint256 date\n    );\n    event Unstake(\n        address sender,\n        address tokenAddress,\n        uint128 amount,\n        uint256 date\n    );\n\n    /**\n     * @notice Make available token address to add pool\n     * @dev Available only for owner\n     * @param _token is token address\n     * @param _apr is APR of the pool\n     * @param _addressPrice is Chainlink pool\n     */\n    function addPool(\n        address _token,\n        uint128 _apr,\n        address _addressPrice\n    ) external onlyOwner {\n        require(!pools[_token].activePool, \"Pool active\");\n\n        pools[_token] = Token(true, _addressPrice, 0, _apr, 0);\n\n        emit NewPool(_token, _apr);\n    }\n\n    /**\n     * @notice disable a pool\n     * @dev Available only for owner\n     * @param _token is token address\n     */\n    function stopPool(address _token) external onlyOwner {\n        require(pools[_token].activePool, \"Pool not active\");\n        pools[_token].activePool = false;\n        pools[_token].dateStop = block.timestamp;\n\n        emit StopPool(_token, block.timestamp);\n    }\n\n    /**\n     * @notice Stake fund into this contract\n     * @param _amount to stake\n     * @param _token to stake\n     * @dev Emit event after stake\n     */\n    function stake(uint128 _amount, address _token) external {\n        require(_amount > 0, \"Amount can't be zero\");\n        require(pools[_token].activePool, \"Pool not active\");\n\n        uint256 rewards;\n        if(stakers[_token][msg.sender].amount==0){rewards=0;}\n        else{rewards=calculateReward(_token);}\n        \n        bool result = IERC20(_token).transferFrom(\n            msg.sender,\n            address(this),\n            _amount\n        );\n        require(result, \"Transfer from error\");\n\n        upAmountStaker(_amount, _token);\n        upStackingPool(_amount, _token);\n        pools[_token].totalStakes += _amount;\n\n        if (rewards>0){_getRewards(rewards);} // Récupérer les rewards en même temps\n\n        emit Stake(msg.sender, _token, _amount, block.timestamp);\n    }\n\n    /**\n     * @notice Withdraw fund into this contract\n     * @param _token to unstake\n     * @param _amount number of token to unstake\n     */\n    function withdraw(uint128 _amount, address _token) external {\n        require(isStaker(_token), \"Not a staker\");\n        require(_amount > 0, \"Amount can't be zero\");\n        require(\n            _amount <= stakers[_token][msg.sender].amount,\n            \"Don't have so many tokens\"\n        );\n        uint256 rewards = calculateReward(_token);\n        bool result = IERC20(_token).transfer(msg.sender, _amount);\n        require(result, \"Transfer from error\");\n\n        downStackingPool( _amount, _token);\n        downAmountStaker( _amount, _token);\n        pools[_token].totalStakes -= _amount;\n\n        _getRewards(rewards); // Récupérer les rewards en même temps\n\n        emit Unstake(msg.sender, _token, _amount, block.timestamp);\n    }\n    \n    /**\n     * @notice Get price of token with Chainlink\n     * @param _pairChainlinkAddress is the pool adress in $\n     */\n    function _getLatestPrice(address _pairChainlinkAddress)\n        private\n        view\n        returns (uint256)\n    {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            _pairChainlinkAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n\n        return uint256(price);\n    }\n\n    /**\n     * @notice Calculate rewards\n     * @dev tokenPrice use Chainlink Oracle\n     * @param _token is the token of pool to calculate rewards\n     * @return rewards in dollars\n     */\n    function calculateReward(address _token) public view returns (uint256) {\n        require(isStaker(_token), \"Not a staker\");\n        uint256 priceCRVD = 1; //prix du token de reward fixé pour l'exercice\n        uint256 tokenPrice = _getLatestPrice(pools[_token].addressPrice);\n        uint256 aprPerSeconds = ((pools[_token].APR) * 10**8) /\n            (365 * 24 * 3600);\n        uint256 rewardspartoOfPool;\n        uint256 x = stakingTimes[_token].length;\n        uint256 blockIndex;\n        for (uint256 i = 0; i < x; i++) {\n            if (\n                stakingTimes[_token][i].blockDate ==\n                stakers[_token][msg.sender].date\n            ) {\n                blockIndex = i;\n            }\n        }\n\n        if (pools[_token].activePool) {\n            if (x == 1) {\n                rewardspartoOfPool += (block.timestamp -\n                    stakers[_token][msg.sender].date);\n            } else {\n                for (uint256 i = blockIndex; i < x - 1; i++) {\n                    rewardspartoOfPool +=\n                        ((stakingTimes[_token][i + 1].blockDate -\n                            stakingTimes[_token][i].blockDate) *\n                            stakers[_token][msg.sender].amount) /\n                        stakingTimes[_token][i].stakingTotalPool;\n                }\n                rewardspartoOfPool +=\n                    ((block.timestamp - stakingTimes[_token][x - 1].blockDate) *\n                        stakers[_token][msg.sender].amount) /\n                    pools[_token].totalStakes;\n            }\n        } else {\n            if (x == 1) {\n                rewardspartoOfPool += (pools[_token].dateStop -\n                    stakers[_token][msg.sender].date);\n            } else {\n                for (uint256 i = blockIndex; i < x - 1; i++) {\n                    rewardspartoOfPool +=\n                        ((stakingTimes[_token][i + 1].blockDate -\n                            stakingTimes[_token][i].blockDate) *\n                            stakers[_token][msg.sender].amount) /\n                        stakingTimes[_token][i].stakingTotalPool;\n                }\n                rewardspartoOfPool +=\n                    ((pools[_token].dateStop -\n                        stakingTimes[_token][x - 1].blockDate) *\n                        stakers[_token][msg.sender].amount) /\n                    pools[_token].totalStakes;\n            }\n        }\n\n        return rewardspartoOfPool * tokenPrice * aprPerSeconds / priceCRVD;\n    }\n\n    /**\n     * @notice Claim your rewards\n     * @dev Available only for stakers who have rewards to claim\n     * @param _token is token of the pool to claim rewards\n     */\n    function claimRewards(address _token) external {\n        require(isStaker(_token), \"Not a staker\");\n        uint256 rewards = calculateReward(_token);\n        upStackingPool(0, _token);\n        stakers[_token][msg.sender].date = block.timestamp; //Remettre à 0 le timestamp\n        _mint(msg.sender, rewards);\n    }\n\n    /**\n     * @notice Autoclaim rewards when add staking or withdraw\n     * @dev Available only for function stake and withdraw\n     * @param _amount is amount in $ of the rewards to claim\n     */\n    function _getRewards(uint256 _amount) private {\n        _mint(msg.sender, _amount);\n    }\n\n    /**\n     * @notice Check amount of a stacked pool from msg.sender\n     * @param _token is address token of the pool to check\n     */\n    function getStaking(address _token) external view returns (uint256) {\n        return stakers[_token][msg.sender].amount;\n    }\n\n    /**\n     * @notice Check if msg.sender is a staker of a pool\n     * @dev Can be used to show the staked pools on the Dapp\n     * @param _token is address token of a pool\n     */\n    function isStaker(address _token) public view returns (bool) {\n        if (stakers[_token][msg.sender].amount > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @notice Check total amount of a stacked pool\n     * @param _token is address token\n     */\n    function getTotalStaking(address _token) external view returns (uint256) {\n        return pools[_token].totalStakes;\n    }\n}\n",
  "sourcePath": "/home/jb/Projets/TP Defi/truffle/contracts/Staking.sol",
  "ast": {
    "absolutePath": "project:/contracts/Staking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1042
      ],
      "Context": [
        1866
      ],
      "CrowdV": [
        14
      ],
      "ERC20": [
        1741
      ],
      "IERC20": [
        1819
      ],
      "IERC20Metadata": [
        1844
      ],
      "Ownable": [
        1155
      ],
      "StackingPool": [
        198
      ],
      "Staking": [
        976
      ]
    },
    "id": 977,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 200,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 201,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1820,
        "src": "57:72:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 202,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1156,
        "src": "130:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 203,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1043,
        "src": "199:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CrowdV.sol",
        "file": "./CrowdV.sol",
        "id": 204,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 15,
        "src": "292:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/StackingPool.sol",
        "file": "./StackingPool.sol",
        "id": 205,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 199,
        "src": "315:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 207,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1155,
              "src": "461:7:2"
            },
            "id": 208,
            "nodeType": "InheritanceSpecifier",
            "src": "461:7:2"
          },
          {
            "baseName": {
              "id": 209,
              "name": "CrowdV",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14,
              "src": "470:6:2"
            },
            "id": 210,
            "nodeType": "InheritanceSpecifier",
            "src": "470:6:2"
          },
          {
            "baseName": {
              "id": 211,
              "name": "StackingPool",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 198,
              "src": "478:12:2"
            },
            "id": 212,
            "nodeType": "InheritanceSpecifier",
            "src": "478:12:2"
          }
        ],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 206,
          "nodeType": "StructuredDocumentation",
          "src": "345:94:2",
          "text": " @title Staking : a Staking Plateform !\n @author Anthony - Etienne - Jean-Baptiste"
        },
        "fullyImplemented": true,
        "id": 976,
        "linearizedBaseContracts": [
          976,
          198,
          14,
          1741,
          1844,
          1819,
          1155,
          1866
        ],
        "name": "Staking",
        "nameLocation": "450:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Staking.Token",
            "id": 223,
            "members": [
              {
                "constant": false,
                "id": 214,
                "mutability": "mutable",
                "name": "activePool",
                "nameLocation": "559:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 223,
                "src": "554:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 213,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "554:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 216,
                "mutability": "mutable",
                "name": "addressPrice",
                "nameLocation": "587:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 223,
                "src": "579:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 215,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "579:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 218,
                "mutability": "mutable",
                "name": "dateStop",
                "nameLocation": "634:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 223,
                "src": "626:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 217,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "626:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 220,
                "mutability": "mutable",
                "name": "APR",
                "nameLocation": "660:3:2",
                "nodeType": "VariableDeclaration",
                "scope": 223,
                "src": "652:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 219,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "652:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 222,
                "mutability": "mutable",
                "name": "totalStakes",
                "nameLocation": "681:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 223,
                "src": "673:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 221,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "673:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nameLocation": "538:5:2",
            "nodeType": "StructDefinition",
            "scope": 976,
            "src": "531:168:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 228,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "767:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "741:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
              "typeString": "mapping(address => struct Staking.Token)"
            },
            "typeName": {
              "id": 227,
              "keyType": {
                "id": 224,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "749:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "741:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                "typeString": "mapping(address => struct Staking.Token)"
              },
              "valueType": {
                "id": 226,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 225,
                  "name": "Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 223,
                  "src": "760:5:2"
                },
                "referencedDeclaration": 223,
                "src": "760:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$223_storage_ptr",
                  "typeString": "struct Staking.Token"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "be4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31",
            "id": 234,
            "name": "NewPool",
            "nameLocation": "799:7:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "815:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "807:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "APR",
                  "nameLocation": "837:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "829:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "806:35:2"
            },
            "src": "793:49:2"
          },
          {
            "anonymous": false,
            "eventSelector": "95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4",
            "id": 240,
            "name": "StopPool",
            "nameLocation": "853:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "870:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "862:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "892:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "884:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "861:36:2"
            },
            "src": "847:51:2"
          },
          {
            "anonymous": false,
            "eventSelector": "1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca",
            "id": 250,
            "name": "Stake",
            "nameLocation": "909:5:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "932:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "924:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "956:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "948:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "986:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "978:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "1010:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "1002:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "914:106:2"
            },
            "src": "903:118:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f3",
            "id": 260,
            "name": "Unstake",
            "nameLocation": "1032:7:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1057:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "1049:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1081:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "1073:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1111:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "1103:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "1135:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "1127:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:106:2"
            },
            "src": "1026:120:2"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "1502:168:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1520:25:2",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 273,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 228,
                              "src": "1521:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                                "typeString": "mapping(address => struct Staking.Token storage ref)"
                              }
                            },
                            "id": 275,
                            "indexExpression": {
                              "id": 274,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "1527:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1521:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$223_storage",
                              "typeString": "struct Staking.Token storage ref"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activePool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 214,
                          "src": "1521:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20616374697665",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1547:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7648ec46322ebc0df40c24281d7333e86fc5dd629c92ac854422399a17e73454",
                          "typeString": "literal_string \"Pool active\""
                        },
                        "value": "Pool active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7648ec46322ebc0df40c24281d7333e86fc5dd629c92ac854422399a17e73454",
                          "typeString": "literal_string \"Pool active\""
                        }
                      ],
                      "id": 272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1512:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:49:2"
                },
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 281,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "1572:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                        }
                      },
                      "id": 283,
                      "indexExpression": {
                        "id": 282,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "1578:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1572:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$223_storage",
                        "typeString": "struct Staking.Token storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1594:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 286,
                          "name": "_addressPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "1600:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1615:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 288,
                          "name": "_apr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "1618:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1624:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 284,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "1588:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Token_$223_storage_ptr_$",
                          "typeString": "type(struct Staking.Token storage pointer)"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1588:38:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$223_memory_ptr",
                        "typeString": "struct Staking.Token memory"
                      }
                    },
                    "src": "1572:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$223_storage",
                      "typeString": "struct Staking.Token storage ref"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:54:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 294,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "1650:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 295,
                        "name": "_apr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "1658:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 293,
                      "name": "NewPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "1642:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1642:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 297,
                  "nodeType": "EmitStatement",
                  "src": "1637:26:2"
                }
              ]
            },
            "documentation": {
              "id": 261,
              "nodeType": "StructuredDocumentation",
              "src": "1152:226:2",
              "text": " @notice Make available token address to add pool\n @dev Available only for owner\n @param _token is token address\n @param _apr is APR of the pool\n @param _addressPrice is Chainlink pool"
            },
            "functionSelector": "2bf8f756",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 270,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 269,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1074,
                  "src": "1492:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1492:9:2"
              }
            ],
            "name": "addPool",
            "nameLocation": "1392:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1417:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "1409:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_apr",
                  "nameLocation": "1441:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "1433:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "_addressPrice",
                  "nameLocation": "1463:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "1455:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1399:83:2"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:2"
            },
            "scope": 976,
            "src": "1383:287:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "1850:210:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 308,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "1868:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 310,
                          "indexExpression": {
                            "id": 309,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "1874:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1868:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$223_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 214,
                        "src": "1868:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c206e6f7420616374697665",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1894:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9",
                          "typeString": "literal_string \"Pool not active\""
                        },
                        "value": "Pool not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9",
                          "typeString": "literal_string \"Pool not active\""
                        }
                      ],
                      "id": 307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1860:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1860:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:52:2"
                },
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 315,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "1922:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 317,
                        "indexExpression": {
                          "id": 316,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "1928:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1922:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$223_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 214,
                      "src": "1922:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1949:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1922:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "1922:32:2"
                },
                {
                  "expression": {
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 322,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "1964:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 324,
                        "indexExpression": {
                          "id": 323,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "1970:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1964:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$223_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dateStop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 218,
                      "src": "1964:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 326,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1989:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1989:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1964:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2029:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 332,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2037:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2037:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 330,
                      "name": "StopPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "2020:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "EmitStatement",
                  "src": "2015:38:2"
                }
              ]
            },
            "documentation": {
              "id": 300,
              "nodeType": "StructuredDocumentation",
              "src": "1676:116:2",
              "text": " @notice disable a pool\n @dev Available only for owner\n @param _token is token address"
            },
            "functionSelector": "156e28b8",
            "id": 337,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 305,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 304,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1074,
                  "src": "1840:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1840:9:2"
              }
            ],
            "name": "stopPool",
            "nameLocation": "1806:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1823:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "1815:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1814:16:2"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:0:2"
            },
            "scope": 976,
            "src": "1797:263:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "2280:733:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 346,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 340,
                          "src": "2298:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2308:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2298:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742063616e2774206265207a65726f",
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f1884a2ca5e0e5298d4dcdbac91ada36d29544a8811d006f157915f232fe224",
                          "typeString": "literal_string \"Amount can't be zero\""
                        },
                        "value": "Amount can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f1884a2ca5e0e5298d4dcdbac91ada36d29544a8811d006f157915f232fe224",
                          "typeString": "literal_string \"Amount can't be zero\""
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2290:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 353,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "2352:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 355,
                          "indexExpression": {
                            "id": 354,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "2358:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2352:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$223_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "activePool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 214,
                        "src": "2352:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c206e6f7420616374697665",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2378:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9",
                          "typeString": "literal_string \"Pool not active\""
                        },
                        "value": "Pool not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9745817a512994fdb1894be64aa4866cbc12245ad3fba13a53e19dd2a5870f9",
                          "typeString": "literal_string \"Pool not active\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2344:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:52:2"
                },
                {
                  "assignments": [
                    361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 361,
                      "mutability": "mutable",
                      "name": "rewards",
                      "nameLocation": "2415:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2407:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2407:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 362,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2407:15:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 363,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "2435:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                            }
                          },
                          "id": 365,
                          "indexExpression": {
                            "id": 364,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "2443:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2435:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                            "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                          }
                        },
                        "id": 368,
                        "indexExpression": {
                          "expression": {
                            "id": 366,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2451:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2451:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2435:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$21_storage",
                          "typeString": "struct StackingPool.Staker storage ref"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "2435:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2471:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2435:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 383,
                    "nodeType": "Block",
                    "src": "2498:34:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 377,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "2499:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 379,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 342,
                                "src": "2523:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 378,
                              "name": "calculateReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "2507:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2507:23:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2499:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 382,
                        "nodeType": "ExpressionStatement",
                        "src": "2499:31:2"
                      }
                    ]
                  },
                  "id": 384,
                  "nodeType": "IfStatement",
                  "src": "2432:100:2",
                  "trueBody": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "2473:12:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 372,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "2474:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2482:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2474:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 375,
                        "nodeType": "ExpressionStatement",
                        "src": "2474:9:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2555:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2550:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2550:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 399,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2605:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2605:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 395,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2637:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$976",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$976",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2629:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 393,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2629:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2629:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 397,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2656:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 388,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "2571:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 387,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1819,
                          "src": "2564:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1819_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2564:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1819",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1818,
                      "src": "2564:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:109:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2550:123:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 401,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "2691:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2699:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        },
                        "value": "Transfer from error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        }
                      ],
                      "id": 400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2683:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2683:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "2683:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 406,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2747:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 407,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "2756:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 405,
                      "name": "upAmountStaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2732:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$_t_address_$returns$__$",
                        "typeString": "function (uint128,address)"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2732:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "2732:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 411,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2788:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 412,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "2797:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 410,
                      "name": "upStackingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2773:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$_t_address_$returns$__$",
                        "typeString": "function (uint128,address)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2773:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "2773:31:2"
                },
                {
                  "expression": {
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 415,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "2814:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 417,
                        "indexExpression": {
                          "id": 416,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "2820:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2814:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$223_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 222,
                      "src": "2814:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 419,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "2843:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2814:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:36:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 422,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "2865:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2873:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2865:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 430,
                  "nodeType": "IfStatement",
                  "src": "2861:37:2",
                  "trueBody": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "2875:23:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 426,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "2888:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 425,
                            "name": "_getRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "2876:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2876:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "2876:20:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 432,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2961:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2961:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 434,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "2973:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 435,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2981:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 436,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2990:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2990:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 431,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "2955:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint128,uint256)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2955:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "EmitStatement",
                  "src": "2950:56:2"
                }
              ]
            },
            "documentation": {
              "id": 338,
              "nodeType": "StructuredDocumentation",
              "src": "2066:152:2",
              "text": " @notice Stake fund into this contract\n @param _amount to stake\n @param _token to stake\n @dev Emit event after stake"
            },
            "functionSelector": "b166dfdd",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "2232:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2246:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2238:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2238:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2263:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2255:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2237:33:2"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2280:0:2"
            },
            "scope": 976,
            "src": "2223:790:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "3224:683:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 451,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "3251:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 450,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "3242:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3242:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207374616b6572",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3260:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993",
                          "typeString": "literal_string \"Not a staker\""
                        },
                        "value": "Not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993",
                          "typeString": "literal_string \"Not a staker\""
                        }
                      ],
                      "id": 449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3234:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "3234:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 457,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "3293:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3303:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3293:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742063616e2774206265207a65726f",
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3306:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f1884a2ca5e0e5298d4dcdbac91ada36d29544a8811d006f157915f232fe224",
                          "typeString": "literal_string \"Amount can't be zero\""
                        },
                        "value": "Amount can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f1884a2ca5e0e5298d4dcdbac91ada36d29544a8811d006f157915f232fe224",
                          "typeString": "literal_string \"Amount can't be zero\""
                        }
                      ],
                      "id": 456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3285:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3285:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "3285:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 464,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "3360:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 465,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "3371:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                                }
                              },
                              "id": 467,
                              "indexExpression": {
                                "id": 466,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "3379:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3371:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                                "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                              }
                            },
                            "id": 470,
                            "indexExpression": {
                              "expression": {
                                "id": 468,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3387:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3387:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3371:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$21_storage",
                              "typeString": "struct StackingPool.Staker storage ref"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "3371:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "3360:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6e2774206861766520736f206d616e7920746f6b656e73",
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3419:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_919ba52508b6b4334bfe664566ccbfd27ed30085863a7abad2676f16a64c4748",
                          "typeString": "literal_string \"Don't have so many tokens\""
                        },
                        "value": "Don't have so many tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_919ba52508b6b4334bfe664566ccbfd27ed30085863a7abad2676f16a64c4748",
                          "typeString": "literal_string \"Don't have so many tokens\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3339:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3339:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:117:2"
                },
                {
                  "assignments": [
                    477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 477,
                      "mutability": "mutable",
                      "name": "rewards",
                      "nameLocation": "3474:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 528,
                      "src": "3466:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 476,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3466:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 481,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 479,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "3500:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 478,
                      "name": "calculateReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "3484:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3484:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3466:41:2"
                },
                {
                  "assignments": [
                    483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 483,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "3522:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 528,
                      "src": "3517:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 482,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3517:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 492,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 488,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3555:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3555:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 490,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "3567:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 485,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "3538:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 484,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1819,
                          "src": "3531:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1819_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3531:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1819",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1786,
                      "src": "3531:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3517:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 494,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "3593:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665722066726f6d206572726f72",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3601:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        },
                        "value": "Transfer from error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
                          "typeString": "literal_string \"Transfer from error\""
                        }
                      ],
                      "id": 493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3585:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3585:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "3585:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 499,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "3652:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 500,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "3661:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 498,
                      "name": "downStackingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "3634:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$_t_address_$returns$__$",
                        "typeString": "function (uint128,address)"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3634:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "3634:34:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 504,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "3696:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 505,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "3705:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 503,
                      "name": "downAmountStaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "3678:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$_t_address_$returns$__$",
                        "typeString": "function (uint128,address)"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3678:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "3678:34:2"
                },
                {
                  "expression": {
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 508,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "3722:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                            "typeString": "mapping(address => struct Staking.Token storage ref)"
                          }
                        },
                        "id": 510,
                        "indexExpression": {
                          "id": 509,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "3728:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3722:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$223_storage",
                          "typeString": "struct Staking.Token storage ref"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 222,
                      "src": "3722:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 512,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "3751:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "3722:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "3722:36:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 516,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "3781:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 515,
                      "name": "_getRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 920,
                      "src": "3769:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3769:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "3769:20:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 520,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3855:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3855:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 522,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "3867:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 523,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "3875:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 524,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3884:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3884:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 519,
                      "name": "Unstake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "3847:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint128,uint256)"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3847:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "EmitStatement",
                  "src": "3842:58:2"
                }
              ]
            },
            "documentation": {
              "id": 442,
              "nodeType": "StructuredDocumentation",
              "src": "3019:140:2",
              "text": " @notice Withdraw fund into this contract\n @param _token to unstake\n @param _amount number of token to unstake"
            },
            "functionSelector": "1d9b0783",
            "id": 529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3173:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3190:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "3182:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3207:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "3199:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3181:33:2"
            },
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3224:0:2"
            },
            "scope": 976,
            "src": "3164:743:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "4157:211:2",
              "statements": [
                {
                  "assignments": [
                    539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 539,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "4189:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "4167:31:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1042",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 538,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 537,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1042,
                          "src": "4167:21:2"
                        },
                        "referencedDeclaration": 1042,
                        "src": "4167:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1042",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 543,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 541,
                        "name": "_pairChainlinkAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "4236:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 540,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "4201:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1042_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1042",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4167:100:2"
                },
                {
                  "assignments": [
                    null,
                    545,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 545,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4287:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "4280:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 544,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4280:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 549,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 546,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "4302:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1042",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1041,
                      "src": "4302:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4302:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4277:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 552,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "4355:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4347:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 550,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4347:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 536,
                  "id": 554,
                  "nodeType": "Return",
                  "src": "4340:21:2"
                }
              ]
            },
            "documentation": {
              "id": 530,
              "nodeType": "StructuredDocumentation",
              "src": "3917:120:2",
              "text": " @notice Get price of token with Chainlink\n @param _pairChainlinkAddress is the pool adress in $"
            },
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLatestPrice",
            "nameLocation": "4051:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_pairChainlinkAddress",
                  "nameLocation": "4075:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "4067:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4067:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4066:31:2"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "4144:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4144:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4143:9:2"
            },
            "scope": 976,
            "src": "4042:326:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "4635:2409:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 566,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "4662:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 565,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "4653:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4653:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207374616b6572",
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4671:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993",
                          "typeString": "literal_string \"Not a staker\""
                        },
                        "value": "Not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993",
                          "typeString": "literal_string \"Not a staker\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4645:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4645:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "4645:41:2"
                },
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "mutability": "mutable",
                      "name": "priceCRVD",
                      "nameLocation": "4704:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 864,
                      "src": "4696:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4696:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 574,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4716:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4696:21:2"
                },
                {
                  "assignments": [
                    576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 576,
                      "mutability": "mutable",
                      "name": "tokenPrice",
                      "nameLocation": "4783:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 864,
                      "src": "4775:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 575,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4775:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 583,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 578,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "4812:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                            }
                          },
                          "id": 580,
                          "indexExpression": {
                            "id": 579,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "4818:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4812:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$223_storage",
                            "typeString": "struct Staking.Token storage ref"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 216,
                        "src": "4812:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 577,
                      "name": "_getLatestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "4796:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4796:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4775:64:2"
                },
                {
                  "assignments": [
                    585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 585,
                      "mutability": "mutable",
                      "name": "aprPerSeconds",
                      "nameLocation": "4857:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 864,
                      "src": "4849:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 584,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4849:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 603,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 586,
                                    "name": "pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 228,
                                    "src": "4875:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                                      "typeString": "mapping(address => struct Staking.Token storage ref)"
                                    }
                                  },
                                  "id": 588,
                                  "indexExpression": {
                                    "id": 587,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 559,
                                    "src": "4881:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4875:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Token_$223_storage",
                                    "typeString": "struct Staking.Token storage ref"
                                  }
                                },
                                "id": 589,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "APR",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 220,
                                "src": "4875:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 590,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4874:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4896:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "38",
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4900:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "src": "4896:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          },
                          "src": "4874:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 595,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4873:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_31536000_by_1",
                            "typeString": "int_const 31536000"
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_8760_by_1",
                              "typeString": "int_const 8760"
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "333635",
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4918:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_365_by_1",
                                "typeString": "int_const 365"
                              },
                              "value": "365"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3234",
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4924:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_24_by_1",
                                "typeString": "int_const 24"
                              },
                              "value": "24"
                            },
                            "src": "4918:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8760_by_1",
                              "typeString": "int_const 8760"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33363030",
                            "id": 599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4929:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3600_by_1",
                              "typeString": "int_const 3600"
                            },
                            "value": "3600"
                          },
                          "src": "4918:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31536000_by_1",
                            "typeString": "int_const 31536000"
                          }
                        }
                      ],
                      "id": 601,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4917:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_31536000_by_1",
                        "typeString": "int_const 31536000"
                      }
                    },
                    "src": "4873:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4849:85:2"
                },
                {
                  "assignments": [
                    605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "rewardspartoOfPool",
                      "nameLocation": "4952:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 864,
                      "src": "4944:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4944:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 606,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4944:26:2"
                },
                {
                  "assignments": [
                    608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 608,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "4988:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 864,
                      "src": "4980:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 607,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4980:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 613,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 609,
                        "name": "stakingTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "4992:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                        }
                      },
                      "id": 611,
                      "indexExpression": {
                        "id": 610,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "5005:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4992:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                        "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4992:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4980:39:2"
                },
                {
                  "assignments": [
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "blockIndex",
                      "nameLocation": "5037:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 864,
                      "src": "5029:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5029:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 616,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5029:18:2"
                },
                {
                  "body": {
                    "id": 647,
                    "nodeType": "Block",
                    "src": "5089:192:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 627,
                                  "name": "stakingTimes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "5124:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                  }
                                },
                                "id": 629,
                                "indexExpression": {
                                  "id": 628,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 559,
                                  "src": "5137:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5124:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                  "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                }
                              },
                              "id": 631,
                              "indexExpression": {
                                "id": 630,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 618,
                                "src": "5145:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5124:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                "typeString": "struct StackingPool.majStackingPool storage ref"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "blockDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "5124:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 633,
                                  "name": "stakers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "5177:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                                  }
                                },
                                "id": 635,
                                "indexExpression": {
                                  "id": 634,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 559,
                                  "src": "5185:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5177:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                                  "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                                }
                              },
                              "id": 638,
                              "indexExpression": {
                                "expression": {
                                  "id": 636,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5193:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5193:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5177:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$21_storage",
                                "typeString": "struct StackingPool.Staker storage ref"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5177:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5124:85:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 646,
                        "nodeType": "IfStatement",
                        "src": "5103:168:2",
                        "trueBody": {
                          "id": 645,
                          "nodeType": "Block",
                          "src": "5224:47:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 641,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 615,
                                  "src": "5242:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 642,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 618,
                                  "src": "5255:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5242:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 644,
                              "nodeType": "ExpressionStatement",
                              "src": "5242:14:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 621,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "5077:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 622,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 608,
                      "src": "5081:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5077:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 648,
                  "initializationExpression": {
                    "assignments": [
                      618
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 618,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5070:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "5062:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5062:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 620,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5074:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5062:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5084:3:2",
                      "subExpression": {
                        "id": 624,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "5084:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 626,
                    "nodeType": "ExpressionStatement",
                    "src": "5084:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5057:224:2"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 649,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "5295:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                        }
                      },
                      "id": 651,
                      "indexExpression": {
                        "id": 650,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "5301:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5295:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$223_storage",
                        "typeString": "struct Staking.Token storage ref"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activePool",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 214,
                    "src": "5295:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 854,
                    "nodeType": "Block",
                    "src": "6125:836:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 752,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "6143:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6148:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6143:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 852,
                          "nodeType": "Block",
                          "src": "6291:660:2",
                          "statements": [
                            {
                              "body": {
                                "id": 819,
                                "nodeType": "Block",
                                "src": "6354:324:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 817,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 784,
                                        "name": "rewardspartoOfPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "6376:18:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 816,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 808,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 799,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 785,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 39,
                                                            "src": "6424:12:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 787,
                                                          "indexExpression": {
                                                            "id": 786,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 559,
                                                            "src": "6437:6:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "6424:20:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                                            "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 791,
                                                        "indexExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 790,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 788,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 773,
                                                            "src": "6445:1:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "+",
                                                          "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 789,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6449:1:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_1_by_1",
                                                              "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                          },
                                                          "src": "6445:5:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6424:27:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                                          "typeString": "struct StackingPool.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 792,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 30,
                                                      "src": "6424:37:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 793,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 39,
                                                            "src": "6492:12:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 795,
                                                          "indexExpression": {
                                                            "id": 794,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 559,
                                                            "src": "6505:6:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "6492:20:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                                            "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 797,
                                                        "indexExpression": {
                                                          "id": 796,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 773,
                                                          "src": "6513:1:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6492:23:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                                          "typeString": "struct StackingPool.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 798,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 30,
                                                      "src": "6492:33:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "6424:101:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 800,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "6423:103:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 801,
                                                      "name": "stakers",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 28,
                                                      "src": "6557:7:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                                                        "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                                                      }
                                                    },
                                                    "id": 803,
                                                    "indexExpression": {
                                                      "id": 802,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 559,
                                                      "src": "6565:6:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6557:15:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                                                      "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                                                    }
                                                  },
                                                  "id": 806,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 804,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "6573:3:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 805,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "6573:10:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "6557:27:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Staker_$21_storage",
                                                    "typeString": "struct StackingPool.Staker storage ref"
                                                  }
                                                },
                                                "id": 807,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 18,
                                                "src": "6557:34:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              },
                                              "src": "6423:168:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 809,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "6422:170:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 810,
                                                "name": "stakingTimes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 39,
                                                "src": "6619:12:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                                  "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                                }
                                              },
                                              "id": 812,
                                              "indexExpression": {
                                                "id": 811,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 559,
                                                "src": "6632:6:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "6619:20:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                                "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                              }
                                            },
                                            "id": 814,
                                            "indexExpression": {
                                              "id": 813,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 773,
                                              "src": "6640:1:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6619:23:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                              "typeString": "struct StackingPool.majStackingPool storage ref"
                                            }
                                          },
                                          "id": 815,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "stakingTotalPool",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 32,
                                          "src": "6619:40:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "6422:237:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6376:283:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 818,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6376:283:2"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 776,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 773,
                                  "src": "6338:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 777,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 608,
                                    "src": "6342:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6346:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6342:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6338:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 820,
                              "initializationExpression": {
                                "assignments": [
                                  773
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 773,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "6322:1:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 820,
                                    "src": "6314:9:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 772,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6314:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 775,
                                "initialValue": {
                                  "id": 774,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 615,
                                  "src": "6326:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "6314:22:2"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "6349:3:2",
                                  "subExpression": {
                                    "id": 781,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 773,
                                    "src": "6349:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 783,
                                "nodeType": "ExpressionStatement",
                                "src": "6349:3:2"
                              },
                              "nodeType": "ForStatement",
                              "src": "6309:369:2"
                            },
                            {
                              "expression": {
                                "id": 850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 821,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 605,
                                  "src": "6695:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 849,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 843,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 834,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 822,
                                                    "name": "pools",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 228,
                                                    "src": "6739:5:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                                                      "typeString": "mapping(address => struct Staking.Token storage ref)"
                                                    }
                                                  },
                                                  "id": 824,
                                                  "indexExpression": {
                                                    "id": 823,
                                                    "name": "_token",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 559,
                                                    "src": "6745:6:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "6739:13:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Token_$223_storage",
                                                    "typeString": "struct Staking.Token storage ref"
                                                  }
                                                },
                                                "id": 825,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "dateStop",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 218,
                                                "src": "6739:22:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 826,
                                                      "name": "stakingTimes",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 39,
                                                      "src": "6788:12:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                                        "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                                      }
                                                    },
                                                    "id": 828,
                                                    "indexExpression": {
                                                      "id": 827,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 559,
                                                      "src": "6801:6:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6788:20:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                                      "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 832,
                                                  "indexExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 831,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 829,
                                                      "name": "x",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 608,
                                                      "src": "6809:1:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "hexValue": "31",
                                                      "id": 830,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "6813:1:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "src": "6809:5:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "6788:27:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                                    "typeString": "struct StackingPool.majStackingPool storage ref"
                                                  }
                                                },
                                                "id": 833,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blockDate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 30,
                                                "src": "6788:37:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "6739:86:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 835,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "6738:88:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 836,
                                                "name": "stakers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 28,
                                                "src": "6853:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                                                  "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                                                }
                                              },
                                              "id": 838,
                                              "indexExpression": {
                                                "id": 837,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 559,
                                                "src": "6861:6:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "6853:15:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                                                "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                                              }
                                            },
                                            "id": 841,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 839,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "6869:3:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 840,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "6869:10:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6853:27:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Staker_$21_storage",
                                              "typeString": "struct StackingPool.Staker storage ref"
                                            }
                                          },
                                          "id": 842,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 18,
                                          "src": "6853:34:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "6738:149:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 844,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6737:151:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 845,
                                        "name": "pools",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 228,
                                        "src": "6911:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                                        }
                                      },
                                      "id": 847,
                                      "indexExpression": {
                                        "id": 846,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 559,
                                        "src": "6917:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6911:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$223_storage",
                                        "typeString": "struct Staking.Token storage ref"
                                      }
                                    },
                                    "id": 848,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 222,
                                    "src": "6911:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "6737:199:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6695:241:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 851,
                              "nodeType": "ExpressionStatement",
                              "src": "6695:241:2"
                            }
                          ]
                        },
                        "id": 853,
                        "nodeType": "IfStatement",
                        "src": "6139:812:2",
                        "trueBody": {
                          "id": 771,
                          "nodeType": "Block",
                          "src": "6151:134:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 755,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 605,
                                  "src": "6169:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 756,
                                            "name": "pools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 228,
                                            "src": "6192:5:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                                              "typeString": "mapping(address => struct Staking.Token storage ref)"
                                            }
                                          },
                                          "id": 758,
                                          "indexExpression": {
                                            "id": 757,
                                            "name": "_token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 559,
                                            "src": "6198:6:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6192:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Token_$223_storage",
                                            "typeString": "struct Staking.Token storage ref"
                                          }
                                        },
                                        "id": 759,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "dateStop",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 218,
                                        "src": "6192:22:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 760,
                                              "name": "stakers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 28,
                                              "src": "6237:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                                                "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                                              }
                                            },
                                            "id": 762,
                                            "indexExpression": {
                                              "id": 761,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 559,
                                              "src": "6245:6:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6237:15:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                                              "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                                            }
                                          },
                                          "id": 765,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 763,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "6253:3:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 764,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "6253:10:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6237:27:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$21_storage",
                                            "typeString": "struct StackingPool.Staker storage ref"
                                          }
                                        },
                                        "id": 766,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "date",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 20,
                                        "src": "6237:32:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6192:77:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 768,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6191:79:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6169:101:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 770,
                              "nodeType": "ExpressionStatement",
                              "src": "6169:101:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 855,
                  "nodeType": "IfStatement",
                  "src": "5291:1670:2",
                  "trueBody": {
                    "id": 751,
                    "nodeType": "Block",
                    "src": "5321:798:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 653,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "5339:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5344:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5339:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 749,
                          "nodeType": "Block",
                          "src": "5480:629:2",
                          "statements": [
                            {
                              "body": {
                                "id": 718,
                                "nodeType": "Block",
                                "src": "5543:324:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 716,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 683,
                                        "name": "rewardspartoOfPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "5565:18:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 715,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 707,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 698,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 684,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 39,
                                                            "src": "5613:12:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 686,
                                                          "indexExpression": {
                                                            "id": 685,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 559,
                                                            "src": "5626:6:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "5613:20:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                                            "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 690,
                                                        "indexExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 689,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 687,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 672,
                                                            "src": "5634:1:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "+",
                                                          "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 688,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "5638:1:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_1_by_1",
                                                              "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                          },
                                                          "src": "5634:5:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "5613:27:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                                          "typeString": "struct StackingPool.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 691,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 30,
                                                      "src": "5613:37:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 692,
                                                            "name": "stakingTimes",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 39,
                                                            "src": "5681:12:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                                              "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                                            }
                                                          },
                                                          "id": 694,
                                                          "indexExpression": {
                                                            "id": 693,
                                                            "name": "_token",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 559,
                                                            "src": "5694:6:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "5681:20:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                                            "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                                          }
                                                        },
                                                        "id": 696,
                                                        "indexExpression": {
                                                          "id": 695,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 672,
                                                          "src": "5702:1:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "5681:23:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                                          "typeString": "struct StackingPool.majStackingPool storage ref"
                                                        }
                                                      },
                                                      "id": 697,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "blockDate",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 30,
                                                      "src": "5681:33:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "5613:101:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 699,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "5612:103:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 700,
                                                      "name": "stakers",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 28,
                                                      "src": "5746:7:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                                                        "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                                                      }
                                                    },
                                                    "id": 702,
                                                    "indexExpression": {
                                                      "id": 701,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 559,
                                                      "src": "5754:6:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5746:15:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                                                      "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                                                    }
                                                  },
                                                  "id": 705,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 703,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "5762:3:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 704,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "5762:10:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "5746:27:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Staker_$21_storage",
                                                    "typeString": "struct StackingPool.Staker storage ref"
                                                  }
                                                },
                                                "id": 706,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 18,
                                                "src": "5746:34:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              },
                                              "src": "5612:168:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 708,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "5611:170:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 709,
                                                "name": "stakingTimes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 39,
                                                "src": "5808:12:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                                  "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                                }
                                              },
                                              "id": 711,
                                              "indexExpression": {
                                                "id": 710,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 559,
                                                "src": "5821:6:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "5808:20:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                                "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                              }
                                            },
                                            "id": 713,
                                            "indexExpression": {
                                              "id": 712,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 672,
                                              "src": "5829:1:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5808:23:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                              "typeString": "struct StackingPool.majStackingPool storage ref"
                                            }
                                          },
                                          "id": 714,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "stakingTotalPool",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 32,
                                          "src": "5808:40:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "5611:237:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5565:283:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 717,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5565:283:2"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 675,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 672,
                                  "src": "5527:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 676,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 608,
                                    "src": "5531:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 677,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5535:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5531:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5527:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 719,
                              "initializationExpression": {
                                "assignments": [
                                  672
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 672,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "5511:1:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 719,
                                    "src": "5503:9:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 671,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5503:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 674,
                                "initialValue": {
                                  "id": 673,
                                  "name": "blockIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 615,
                                  "src": "5515:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "5503:22:2"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "5538:3:2",
                                  "subExpression": {
                                    "id": 680,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 672,
                                    "src": "5538:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 682,
                                "nodeType": "ExpressionStatement",
                                "src": "5538:3:2"
                              },
                              "nodeType": "ForStatement",
                              "src": "5498:369:2"
                            },
                            {
                              "expression": {
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 720,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 605,
                                  "src": "5884:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 740,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 731,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 721,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967292,
                                                  "src": "5928:5:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 722,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "5928:15:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 723,
                                                      "name": "stakingTimes",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 39,
                                                      "src": "5946:12:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage_$",
                                                        "typeString": "mapping(address => struct StackingPool.majStackingPool storage ref[] storage ref)"
                                                      }
                                                    },
                                                    "id": 725,
                                                    "indexExpression": {
                                                      "id": 724,
                                                      "name": "_token",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 559,
                                                      "src": "5959:6:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "5946:20:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_majStackingPool_$33_storage_$dyn_storage",
                                                      "typeString": "struct StackingPool.majStackingPool storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 729,
                                                  "indexExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 728,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 726,
                                                      "name": "x",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 608,
                                                      "src": "5967:1:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "hexValue": "31",
                                                      "id": 727,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "5971:1:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "src": "5967:5:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "5946:27:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_majStackingPool_$33_storage",
                                                    "typeString": "struct StackingPool.majStackingPool storage ref"
                                                  }
                                                },
                                                "id": 730,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blockDate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 30,
                                                "src": "5946:37:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "5928:55:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 732,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "5927:57:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 733,
                                                "name": "stakers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 28,
                                                "src": "6011:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                                                  "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                                                }
                                              },
                                              "id": 735,
                                              "indexExpression": {
                                                "id": 734,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 559,
                                                "src": "6019:6:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "6011:15:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                                                "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                                              }
                                            },
                                            "id": 738,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 736,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "6027:3:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 737,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "6027:10:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6011:27:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Staker_$21_storage",
                                              "typeString": "struct StackingPool.Staker storage ref"
                                            }
                                          },
                                          "id": 739,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 18,
                                          "src": "6011:34:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                          }
                                        },
                                        "src": "5927:118:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 741,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5926:120:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 742,
                                        "name": "pools",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 228,
                                        "src": "6069:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                                        }
                                      },
                                      "id": 744,
                                      "indexExpression": {
                                        "id": 743,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 559,
                                        "src": "6075:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6069:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$223_storage",
                                        "typeString": "struct Staking.Token storage ref"
                                      }
                                    },
                                    "id": 745,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 222,
                                    "src": "6069:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "5926:168:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5884:210:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 748,
                              "nodeType": "ExpressionStatement",
                              "src": "5884:210:2"
                            }
                          ]
                        },
                        "id": 750,
                        "nodeType": "IfStatement",
                        "src": "5335:774:2",
                        "trueBody": {
                          "id": 670,
                          "nodeType": "Block",
                          "src": "5347:127:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 656,
                                  "name": "rewardspartoOfPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 605,
                                  "src": "5365:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 666,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 657,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "5388:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 658,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "5388:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 659,
                                              "name": "stakers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 28,
                                              "src": "5426:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                                                "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                                              }
                                            },
                                            "id": 661,
                                            "indexExpression": {
                                              "id": 660,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 559,
                                              "src": "5434:6:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5426:15:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                                              "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                                            }
                                          },
                                          "id": 664,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 662,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "5442:3:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 663,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "5442:10:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5426:27:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$21_storage",
                                            "typeString": "struct StackingPool.Staker storage ref"
                                          }
                                        },
                                        "id": 665,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "date",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 20,
                                        "src": "5426:32:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5388:70:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 667,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5387:72:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5365:94:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 669,
                              "nodeType": "ExpressionStatement",
                              "src": "5365:94:2"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 856,
                          "name": "rewardspartoOfPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 605,
                          "src": "6978:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 857,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "6999:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6978:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 859,
                        "name": "aprPerSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "7012:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6978:47:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 861,
                      "name": "priceCRVD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "7028:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6978:59:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 563,
                  "id": 863,
                  "nodeType": "Return",
                  "src": "6971:66:2"
                }
              ]
            },
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "4374:185:2",
              "text": " @notice Calculate rewards\n @dev tokenPrice use Chainlink Oracle\n @param _token is the token of pool to calculate rewards\n @return rewards in dollars"
            },
            "functionSelector": "d82e3962",
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateReward",
            "nameLocation": "4573:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4597:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "4589:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4588:16:2"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "4626:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4626:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4625:9:2"
            },
            "scope": 976,
            "src": "4564:2480:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 906,
              "nodeType": "Block",
              "src": "7271:269:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 873,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "7298:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 872,
                          "name": "isStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "7289:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7289:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207374616b6572",
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7307:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993",
                          "typeString": "literal_string \"Not a staker\""
                        },
                        "value": "Not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993",
                          "typeString": "literal_string \"Not a staker\""
                        }
                      ],
                      "id": 871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7281:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7281:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 877,
                  "nodeType": "ExpressionStatement",
                  "src": "7281:41:2"
                },
                {
                  "assignments": [
                    879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 879,
                      "mutability": "mutable",
                      "name": "rewards",
                      "nameLocation": "7340:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 906,
                      "src": "7332:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 878,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7332:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 881,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 868,
                        "src": "7366:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 880,
                      "name": "calculateReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "7350:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7350:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7332:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7398:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 886,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 868,
                        "src": "7401:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 884,
                      "name": "upStackingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "7383:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$_t_address_$returns$__$",
                        "typeString": "function (uint128,address)"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7383:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "7383:25:2"
                },
                {
                  "expression": {
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 889,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "7418:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                            }
                          },
                          "id": 893,
                          "indexExpression": {
                            "id": 890,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "7426:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7418:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                            "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                          }
                        },
                        "id": 894,
                        "indexExpression": {
                          "expression": {
                            "id": 891,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7434:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7434:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7418:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$21_storage",
                          "typeString": "struct StackingPool.Staker storage ref"
                        }
                      },
                      "id": 895,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "7418:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 896,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "7453:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7453:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7418:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "7418:50:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 901,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7513:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7513:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 903,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "7525:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 900,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1558,
                      "src": "7507:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7507:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "7507:26:2"
                }
              ]
            },
            "documentation": {
              "id": 866,
              "nodeType": "StructuredDocumentation",
              "src": "7050:169:2",
              "text": " @notice Claim your rewards\n @dev Available only for stakers who have rewards to claim\n @param _token is token of the pool to claim rewards"
            },
            "functionSelector": "ef5cfb8c",
            "id": 907,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "7233:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7254:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "7246:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7246:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7245:16:2"
            },
            "returnParameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7271:0:2"
            },
            "scope": 976,
            "src": "7224:316:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 919,
              "nodeType": "Block",
              "src": "7790:43:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 914,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7806:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7806:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 916,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "7818:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 913,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1558,
                      "src": "7800:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7800:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "7800:26:2"
                }
              ]
            },
            "documentation": {
              "id": 908,
              "nodeType": "StructuredDocumentation",
              "src": "7546:193:2",
              "text": " @notice Autoclaim rewards when add staking or withdraw\n @dev Available only for function stake and withdraw\n @param _amount is amount in $ of the rewards to claim"
            },
            "id": 920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRewards",
            "nameLocation": "7753:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7773:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "7765:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7765:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7764:17:2"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7790:0:2"
            },
            "scope": 976,
            "src": "7744:89:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 936,
              "nodeType": "Block",
              "src": "8044:58:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 928,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "8061:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                          }
                        },
                        "id": 930,
                        "indexExpression": {
                          "id": 929,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 923,
                          "src": "8069:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8061:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                          "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                        }
                      },
                      "id": 933,
                      "indexExpression": {
                        "expression": {
                          "id": 931,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8077:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8077:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8061:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$21_storage",
                        "typeString": "struct StackingPool.Staker storage ref"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18,
                    "src": "8061:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 927,
                  "id": 935,
                  "nodeType": "Return",
                  "src": "8054:41:2"
                }
              ]
            },
            "documentation": {
              "id": 921,
              "nodeType": "StructuredDocumentation",
              "src": "7839:132:2",
              "text": " @notice Check amount of a stacked pool from msg.sender\n @param _token is address token of the pool to check"
            },
            "functionSelector": "11c88633",
            "id": 937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaking",
            "nameLocation": "7985:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8004:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "7996:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7996:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7995:16:2"
            },
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 926,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "8035:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8034:9:2"
            },
            "scope": 976,
            "src": "7976:126:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 960,
              "nodeType": "Block",
              "src": "8351:118:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 945,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "8365:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct StackingPool.Staker storage ref))"
                            }
                          },
                          "id": 947,
                          "indexExpression": {
                            "id": 946,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 940,
                            "src": "8373:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8365:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$21_storage_$",
                            "typeString": "mapping(address => struct StackingPool.Staker storage ref)"
                          }
                        },
                        "id": 950,
                        "indexExpression": {
                          "expression": {
                            "id": 948,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8381:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8381:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8365:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$21_storage",
                          "typeString": "struct StackingPool.Staker storage ref"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "8365:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8402:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8365:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 957,
                  "nodeType": "IfStatement",
                  "src": "8361:80:2",
                  "trueBody": {
                    "id": 956,
                    "nodeType": "Block",
                    "src": "8405:36:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8426:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 944,
                        "id": 955,
                        "nodeType": "Return",
                        "src": "8419:11:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8457:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 944,
                  "id": 959,
                  "nodeType": "Return",
                  "src": "8450:12:2"
                }
              ]
            },
            "documentation": {
              "id": 938,
              "nodeType": "StructuredDocumentation",
              "src": "8108:177:2",
              "text": " @notice Check if msg.sender is a staker of a pool\n @dev Can be used to show the staked pools on the Dapp\n @param _token is address token of a pool"
            },
            "functionSelector": "6f1e8533",
            "id": 961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nameLocation": "8299:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8316:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "8308:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8308:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8307:16:2"
            },
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "8345:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8345:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8344:6:2"
            },
            "scope": 976,
            "src": "8290:179:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "8654:49:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 969,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "8671:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$223_storage_$",
                          "typeString": "mapping(address => struct Staking.Token storage ref)"
                        }
                      },
                      "id": 971,
                      "indexExpression": {
                        "id": 970,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "8677:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8671:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$223_storage",
                        "typeString": "struct Staking.Token storage ref"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "totalStakes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 222,
                    "src": "8671:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 968,
                  "id": 973,
                  "nodeType": "Return",
                  "src": "8664:32:2"
                }
              ]
            },
            "documentation": {
              "id": 962,
              "nodeType": "StructuredDocumentation",
              "src": "8475:101:2",
              "text": " @notice Check total amount of a stacked pool\n @param _token is address token"
            },
            "functionSelector": "7ae15a73",
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStaking",
            "nameLocation": "8590:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8614:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "8606:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8606:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8605:16:2"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "8645:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8645:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8644:9:2"
            },
            "scope": 976,
            "src": "8581:122:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 977,
        "src": "441:8264:2",
        "usedErrors": []
      }
    ],
    "src": "32:8674:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "APR",
              "type": "uint256"
            }
          ],
          "name": "NewPool",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x1668de67314c72bac0de03c24eeecb3c305dc4cdf055be48782f2c7a09bc39ca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Stake",
          "type": "event"
        },
        "0x95900bd9ba2e434a9f276313d71b4c06e0ca09327777b54984808188444a14d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "StopPool",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xbd791e6972e4060b94df68a5b4f17c30ebc1dc2a05086ce163bf93ccf08f41f3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "name": "Unstake",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x01CC6193db4823DeB8334FD5cd26A8F9Ac5e52b9",
      "transactionHash": "0x1b840fb9f421aa4960970a168767a676428c3af2cf9486aca66cb8505217067a"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-07T19:48:43.594Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Anthony - Etienne - Jean-Baptiste",
    "kind": "dev",
    "methods": {
      "addPool(address,uint128,address)": {
        "details": "Available only for owner",
        "params": {
          "_addressPrice": "is Chainlink pool",
          "_apr": "is APR of the pool",
          "_token": "is token address"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "calculateReward(address)": {
        "details": "tokenPrice use Chainlink Oracle",
        "params": {
          "_token": "is the token of pool to calculate rewards"
        },
        "returns": {
          "_0": "rewards in dollars"
        }
      },
      "claimRewards(address)": {
        "details": "Available only for stakers who have rewards to claim",
        "params": {
          "_token": "is token of the pool to claim rewards"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getStaking(address)": {
        "params": {
          "_token": "is address token of the pool to check"
        }
      },
      "getTotalStaking(address)": {
        "params": {
          "_token": "is address token"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isStaker(address)": {
        "details": "Can be used to show the staked pools on the Dapp",
        "params": {
          "_token": "is address token of a pool"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake(uint128,address)": {
        "details": "Emit event after stake",
        "params": {
          "_amount": "to stake",
          "_token": "to stake"
        }
      },
      "stopPool(address)": {
        "details": "Available only for owner",
        "params": {
          "_token": "is token address"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint128,address)": {
        "params": {
          "_amount": "number of token to unstake",
          "_token": "to unstake"
        }
      }
    },
    "title": "Staking : a Staking Plateform !",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addPool(address,uint128,address)": {
        "notice": "Make available token address to add pool"
      },
      "calculateReward(address)": {
        "notice": "Calculate rewards"
      },
      "claimRewards(address)": {
        "notice": "Claim your rewards"
      },
      "getStaking(address)": {
        "notice": "Check amount of a stacked pool from msg.sender"
      },
      "getTotalStaking(address)": {
        "notice": "Check total amount of a stacked pool"
      },
      "isStaker(address)": {
        "notice": "Check if msg.sender is a staker of a pool"
      },
      "stake(uint128,address)": {
        "notice": "Stake fund into this contract"
      },
      "stopPool(address)": {
        "notice": "disable a pool"
      },
      "withdraw(uint128,address)": {
        "notice": "Withdraw fund into this contract"
      }
    },
    "version": 1
  }
}